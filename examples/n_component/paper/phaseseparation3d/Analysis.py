import os, math, re, sys
import struct
import numpy as np
from matplotlib import pyplot as plt
from scipy import optimize
import matplotlib
from scipy.spatial.distance import cdist
import scipy.integrate
import scipy.fft

datadir = "data/s12_0.02464/s02_0.015/s01_0.015/tau3_0.505/tau1_0.505/evaporationrate_0.0001/timesteps_450000/lz_101/ly_101/lx_300/"
#datadir = "data/s12_0.0004928/s02_0.0003/s01_0.0003/tau3_1.0/tau1_1.0/evaporationrate_0.0002/timesteps_250000/lz_101/ly_101/lx_300/"
#datadir = "data/volmore/s12_0.02464/s02_0.015/s01_0.015/tau3_0.505/tau1_0.505/evaporationrate_0.0001/timesteps_450000/lz_101/ly_101/lx_300/"
datadir = "data/volmore/s12_0.0004928/s02_0.0003/s01_0.0003/tau3_1.0/tau1_1.0/evaporationrate_0.0001/timesteps_250000/lz_101/ly_101/lx_300/"
datadir = "data/volmore/s12_0.008213/s02_0.005/s01_0.005/tau3_0.55/tau1_0.55/evaporationrate_0.001/timesteps_100000/lz_101/ly_101/lx_300/"
datadir = "data/volmore/s12_0.0005598/s02_0.0003/s01_0.0003/tau3_1.0/tau1_1.0/evaporationrate_1e-05/timesteps_400000/lz_101/ly_101/lx_300/"

datadir = "data/result/lx_245/ly_245/ncomp_3/prop1_0.3333334/prop2_0.3333333/prop3_0.3333333/prop4_0.0/prop5_0.0/prop6_0.0/s12_0.005/"
datadir = "data/result/lx_283/ly_283/ncomp_4/prop1_0.25/prop2_0.25/prop3_0.25/prop4_0.25/prop5_0.0/prop6_0.0/s12_0.005/"
#datadir = "data/mobilchange/lx_283/ly_283/ncomp_4/prop1_0.25/prop2_0.25/prop3_0.25/prop4_0.25/prop5_0.0/prop6_0.0/prop7_0.0/s12_0.01/"
datadir = "data/mobilchange2/lx_632/ly_632/ncomp_5/prop1_0.2/prop2_0.2/prop3_0.2/prop4_0.2/prop5_0.2/prop6_0.0/prop7_0.0/s12_0.005/"

datadir = "data/mobilchange3/lx_115/ly_115/ncomp_4/prop1_0.25/prop2_0.25/prop3_0.25/prop4_0.25/prop5_0.0/prop6_0.0/prop7_0.0/s12_0.005/"
datadir = "data/mobilchange3/lx_100/ly_100/ncomp_3/prop1_0.3333334/prop2_0.3333333/prop3_0.3333333/prop4_0.0/prop5_0.0/prop6_0.0/prop7_0.0/s12_0.005/"
datadir = "data/mobilchange3/lx_129/ly_129/ncomp_5/prop1_0.2/prop2_0.2/prop3_0.2/prop4_0.2/prop5_0.2/prop6_0.0/prop7_0.0/s12_0.005/"
datadir = "data/mobilchange3/lx_141/ly_141/ncomp_6/prop1_0.16666667/prop2_0.16666667/prop3_0.16666667/prop4_0.16666667/prop5_0.1666666/prop6_0.1666666/prop7_0.0/s12_0.005/"

datadir = "data/mobilchange3/lx_490/ly_490/ncomp_3/prop1_0.3333334/prop2_0.3333333/prop3_0.3333333/prop4_0.0/prop5_0.0/prop6_0.0/prop7_0.0/s12_0.005/"
#datadir = "data/lx_139/ly_139/lz_139/ncomp_5/prop1_0.2/prop2_0.2/prop3_0.2/prop4_0.2/prop5_0.2/prop6_0.0/prop7_0.0/prop8_0.0/surfacetension_0.005/"
#datadir = "data/lx_147/ly_147/lz_147/ncomp_6/prop1_0.16666667/prop2_0.16666667/prop3_0.16666667/prop4_0.16666667/prop5_0.1666666/prop6_0.1666666/prop7_0.0/prop8_0.0/surfacetension_0.005/"
#datadir = "data/lx_139/ly_139/lz_139/ncomp_5/prop1_0.2/prop2_0.2/prop3_0.2/prop4_0.2/prop5_0.2/prop6_0.0/prop7_0.0/prop8_0.0/surfacetension_0.005/"
datadir = "data/lx_495/ly_495/lz_25/ncomp_6/prop1_0.16666667/prop2_0.16666667/prop3_0.16666667/prop4_0.16666667/prop5_0.16666667/prop6_0.16666667/prop7_0.0/prop8_0.0/surfacetension_0.005/"
#datadir = "data/lx_162/ly_162/lz_162/ncomp_8/prop1_0.0125/prop2_0.0125/prop3_0.0125/prop4_0.0125/prop5_0.0125/prop6_0.0125/prop7_0.0125/prop8_0.0125/surfacetension_0.005/"
#datadir = "data/lx_186/ly_186/lz_186/ncomp_12/prop1_0.08333333333/prop2_0.08333333333/prop3_0.08333333333/prop4_0.08333333333/prop5_0.08333333333/prop6_0.08333333333/prop7_0.08333333333/prop8_0.08333333333/prop9_0.08333333334/prop10_0.08333333334/prop11_0.08333333334/prop12_0.08333333334/surfacetension_0.005/"
#datadir = "data/lx_129/ly_129/lz_129/ncomp_4/prop1_0.25/prop2_0.25/prop3_0.25/prop4_0.25/prop5_0.0/prop6_0.0/prop7_0.0/prop8_0.0/surfacetension_0.005/"
#datadir = "data/mobilchange2/lx_632/ly_632/ncomp_5/prop1_0.2/prop2_0.2/prop3_0.2/prop4_0.2/prop5_0.2/prop6_0.0/prop7_0.0/s12_0.005/"
#datadir = "data/mobilchange2/lx_692/ly_692/ncomp_6/prop1_0.16666667/prop2_0.16666667/prop3_0.16666667/prop4_0.16666667/prop5_0.16666666/prop6_0.16666666/prop7_0.0/s12_0.005/"
NN=6
#datadir = "data/result/lx_346/ly_346/ncomp_6/prop1_0.16666667/prop2_0.16666667/prop3_0.16666667/prop4_0.16666667/prop5_0.16666666/prop6_0.16666666/prop7_0.0/s12_0.005/"
#datadir = "data/bigtest/lx_500/ly_500/ncomp_4/prop1_0.25/prop2_0.25/prop3_0.25/prop4_0.25/prop5_0.0/prop6_0.0/prop7_0.0/s12_0.005/"
#datadir = "data/result/lx_374/ly_374/ncomp_7/prop1_0.14285714285/prop2_0.14285714285/prop3_0.14285714285/prop4_0.14285714285/prop5_0.14285714285/prop6_0.14285714285/prop7_0.1428571429/s12_0.005/"
#datadir = "data/volmore/s12_0.02464/s02_0.015/s01_0.015/tau3_0.505/tau1_0.505/evaporationrate_0.0001/timesteps_450000/lz_101/ly_101/lx_300/"
#datadir = "data/volmore/s12_0.02464/s02_0.015/s01_0.015/tau3_0.505/tau1_0.505/evaporationrate_0.0001/timesteps_450000/lz_101/ly_101/lx_300/"
#datadir = "data/volmore/s12_0.008213/s02_0.005/s01_0.005/tau3_0.55/tau1_0.55/evaporationrate_0.0001/timesteps_450000/lz_101/ly_101/lx_300/"
#datadir = "data/lx_100/ly_100/radius_20/"
#datadir = "data/s12_0.02464/s02_0.015/s01_0.015/tau3_0.505/tau1_0.505/evaporationrate_0.0001/timesteps_450000/lz_101/ly_101/lx_300/"
HeaderFile = open(datadir+"Header.mat", 'rb')

LX=struct.unpack('=i', HeaderFile.read(4))[0]

LY=struct.unpack('=i', HeaderFile.read(4))[0]

LZ=struct.unpack('=i', HeaderFile.read(4))[0]

ndim=struct.unpack('=i', HeaderFile.read(4))[0]

t_zero = 0
tstart = 100000

tend = 100000#195000
tend2 = 0
struct.unpack('=i', HeaderFile.read(4))[0]
tinc = 10000#15000
struct.unpack('=i', HeaderFile.read(4))[0]

plot = True
slicepos=0

sliceaxis=1
if LY==1:
    sliceaxis=1
elif LX==1:
    sliceaxis=0

height = np.array([])
vol=np.array([])
vol2=np.array([[]])
fluxsum=np.array([])
fluxsum2=np.array([])
densityG = 1
vapourFrac = 0.5
diffusion = 0.008
densityL = 1
H = 98

def mlfit(x):
    return (1-(x/np.amax(x))**2)**(1/6-0.5)

def calc_R(xc, yc,x,y):
    """ calculate the distance of each 2D points from the center (xc, yc) """
    return np.sqrt((x-xc)**2 + (y-yc)**2)

def f_2(c,x,y):
    """ calculate the algebraic distance between the data points and the mean circle centered at c=(xc, yc) """
    Ri = calc_R(*c,x,y)
    #print(Ri)
    return Ri - Ri.mean()

def circleFit(c,LX,LY,h1,h2,w1,w2,offset):
    x=np.where(np.logical_and(c[w1:w2,h1:h2]>=0.45, c[w1:w2,h1:h2]<=0.55))[0]
    y=np.where(np.logical_and(c[w1:w2,h1:h2]>=0.45, c[w1:w2,h1:h2]<=0.55))[1]

    x_m=np.mean(x)
    y_m=np.mean(y)
    #print(x_m,y_m)
    center_estimate = x_m, y_m
    center_2, ier = optimize.leastsq(f_2, center_estimate,args=(x,y))

    xc_2, yc_2 = center_2
    Ri_2       = calc_R(*center_2,x,y)
    R_2        = Ri_2.mean()
    residu_2   = sum((Ri_2 - R_2)**2)
    #print(xc_2,yc_2)
    theta=90-np.arcsin(abs(yc_2-offset)/R_2)*180/np.pi
    print(theta)
    return theta,R_2,x,y,xc_2,yc_2

cangs=np.empty(int((tend-tstart)/tinc)+1)
vols = np.array([])
plot3d = False

print(tend,flush=True)
outDirName = "figures"
os.system("mkdir -p %s"%outDirName)
v = np.zeros((LX,LY,LZ,ndim))
flux=[0.001]
va=np.array([])
vE=np.array([])
vE2=np.array([])
sortedarrayold1=None
sortedperimsold1=None
sortedarrayold2=None
sortedperimsold2=None
sortedarrayold3=None
sortedperimsold3=None
sortedarrayold4=None
sortedperimsold4=None
sortedarrayold5=None
sortedperimsold5=None
sortedarrayold6=None
sortedperimsold6=None
xi0=np.array([])
xi1=np.array([])
xi2=np.array([])
xi3=np.array([])
xi4=np.array([])
xi5=np.array([])
xi6=np.array([])
xi7=np.array([])
xi8=np.array([])
sa=np.array([])
sa0=np.array([])
perimstddev=np.array([])
VV=np.array([])
coalescecount=0
ostwaldcount=0
cumulcoalesce=np.array([])
cumulostwald=np.array([])

def getCoalescence(test1,sortedarrayold,sortedperimsold):
    perims=np.array([])
    com=[]
    distr=np.zeros(len(test1.collections[0].get_paths()))
    for path in test1.collections[0].get_paths():
        passedzero=False
        count = 0
        first=list(path.iter_segments())[:][0]
        perimtemp = 0
        comx = 0
        comy = 0
        for i,j in path.iter_segments():
            #print(i)
            count+=1
            comx+=i[0]
            comy+=i[1]
            if (passedzero):
                perimtemp+=np.sqrt((i[0]-prev[0])**2+(i[1]-prev[1])**2)
                prev[0]=i[0]
                prev[1]=i[1]
            else:
                passedzero=True
                prev[0]=i[0]
                prev[1]=i[1]
        last=list(path.iter_segments())[:][-1]
        
        if last[0][0] != first[0][0] or last[0][1] != first[0][1]:
            continue
        perims=np.append(perims,perimtemp)
        com.append([comx/count,comy/count])
    com=np.array(com)


    sortedarrayx = np.dstack((com[:,0], perims))[0][np.dstack((com[:,0], perims))[0][:, 1].argsort()]
    sortedarrayy = np.dstack((com[:,1], perims))[0][np.dstack((com[:,1], perims))[0][:, 1].argsort()]
    sortedperims = sortedarrayx[:,1][sortedarrayx[:,1].argsort()]
    sortedarray = np.dstack((sortedarrayx[:,0],sortedarrayy[:,0]))[0]
    #ax.scatter(sortedarrayx[:,0][0],sortedarrayy[:,0][0],s=0.5,color="r")

    cutoffdist=2
    cutoffperim=4
    idx=0
    countcoalesce=0
    countostwald=0
    if sortedarrayold is not None:
        print(np.shape(sortedarrayold)[0]-np.shape(sortedarray)[0])
        print(np.shape(sortedperimsold),np.shape(sortedarrayold))
        diffregions=np.shape(sortedarrayold)[0]-np.shape(sortedarray)[0]
        
        for i in sortedarrayold:
            distvec=sortedarray[cdist(sortedarray, np.atleast_2d(i)).argmin()]-i
            distnum=np.sqrt(distvec[0]**2+distvec[1]**2)
            if countcoalesce+countostwald<diffregions and distnum>cutoffdist:
                if sortedperimsold[idx]<cutoffperim:
                    countostwald+=1
                else:
                    countcoalesce+=0.5
            idx+=1
            #print(distnum,sortedperimsold[idx])
        print("coalesce",countcoalesce)
        print("ostwald",countostwald)

    sortedarrayoldret=sortedarray
    sortedperimsoldret=sortedperims

    return countcoalesce,countostwald,sortedarrayoldret,sortedperimsoldret

times=np.zeros(8)
coalescebins=np.zeros(7)

for i in flux:
    
    for t in range(tstart,tend+1,tinc):
        print("t=%s"%t,flush=True)
        t_file =t+t_zero

        #file_name = "data/"+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"Pressure_t%li.mat"%t_file
        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = "data/"+"Humidity_t%li.mat"%t_file
        #file_name = datadir+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential_t%li.mat"%t_file
        file_name = datadir+"OrderParameter0_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        File = open(file_name, 'rb')

        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        #FileDensity = open(file_name, 'rb')

        #file_name = "data/"+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"Pressure_t%li.mat"%t_file
        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = "data/"+"Humidity_t%li.mat"%t_file
        #file_name = datadir+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential_t%li.mat"%t_file
        file_name = datadir+"OrderParameter1_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        FileOP1 = open(file_name, 'rb')

        #file_name = "data/"+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"Pressure_t%li.mat"%t_file
        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = "data/"+"Humidity_t%li.mat"%t_file
        #file_name = datadir+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential_t%li.mat"%t_file
        file_name = datadir+"OrderParameter2_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        FileOP2 = open(file_name, 'rb')

        #file_name = "data/"+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"Pressure_t%li.mat"%t_file
        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = "data/"+"Humidity_t%li.mat"%t_file
        #file_name = datadir+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential_t%li.mat"%t_file
        file_name = datadir+"OrderParameter3_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        FileOP3 = open(file_name, 'rb')

        #file_name = "data/"+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"Pressure_t%li.mat"%t_file
        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = "data/"+"Humidity_t%li.mat"%t_file
        #file_name = datadir+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential_t%li.mat"%t_file
        file_name = datadir+"OrderParameter4_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        FileOP4 = open(file_name, 'rb')

        #file_name = "data/"+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"Pressure_t%li.mat"%t_file
        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = "data/"+"Humidity_t%li.mat"%t_file
        #file_name = datadir+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential_t%li.mat"%t_file
        file_name = datadir+"OrderParameter5_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        FileOP5 = open(file_name, 'rb')

        #file_name = "data/"+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"Pressure_t%li.mat"%t_file
        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = "data/"+"Humidity_t%li.mat"%t_file
        #file_name = datadir+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential_t%li.mat"%t_file
        file_name = datadir+"OrderParameter6_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        FileOP6 = open(file_name, 'rb')

        file_name = datadir+"BoundaryLabels_t%li.mat"%t_file
        #file_name = "data/"+"Pressure_t%li.mat"%t_file
        #file_name = "data/"+"Density_t%li.mat"%t_file
        #file_name = "data/"+"Humidity_t%li.mat"%t_file
        #file_name = "data/"+"LaplacianOrderParameter_t%li.mat"%t_file
        #file_name = "data/"+"ChemicalPotential_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        FileSolid = open(file_name, 'rb')
    
        
        file_name = datadir+"Velocity_t%li.mat"%t_file

        File2 = open(file_name, 'rb')

        #file_name = datadir+"MixedGradientPressure_t%li.mat"%t_file

        #FileGP = open(file_name, 'rb')

        #file_name = "data/"+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"Pressure_t%li.mat"%t_file
        #file_name = datadir+"Density_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential_t%li.mat"%t_file
        #file_name = datadir+"OrderParameter_t%li.mat"%t_file
        #file_name = datadir+"ChemicalPotential0_t%li.mat"%t_file
        #file_name = datadir+"LaplacianOrderParameter_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        #File3 = open(file_name, 'rb')

        #file_name = datadir+"ChemicalPotential1_t%li.mat"%t_file
        #file_name = datadir+"LaplacianOrderParameter_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        #File4 = open(file_name, 'rb')

        #file_name = datadir+"ChemicalPotential2_t%li.mat"%t_file
        #file_name = datadir+"LaplacianOrderParameter_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        #File5 = open(file_name, 'rb')

        #file_name = datadir+"ChemicalPotential3_t%li.mat"%t_file
        #file_name = datadir+"LaplacianOrderParameter_t%li.mat"%t_file
        #file_name = "data/"+"BoundaryLabels_t%li.mat"%t_file

        #File6 = open(file_name, 'rb')

        #file_name = "data/"+"Density_t%li.mat"%t_file

        #File3 = open(file_name, 'rb')
        print(file_name)

        def coord_k(k, LY, LZ):
            """From a k value, determines its xk, yk, and zk."""    

            xk = math.floor(k/(LY*LZ))
            yk = math.floor((k - xk*LZ*LY)/LZ)
            zk = k - xk*LZ*LY - yk*LZ
            return xk, yk, zk

        NLatt=LX*LY*LZ

        rho = np.zeros((LX,LY,LZ))
        v = np.zeros((LX,LY,LZ,ndim))
        gradp = np.zeros((LX,LY,LZ,ndim))
        solid = np.zeros((LX,LY,LZ))

        dat=File.read()
        rho = np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8))
        dat=FileOP1.read()
        rho2 = np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8))
        dat=FileSolid.read()
        solid = np.ndarray((LX,LY,LZ),'=i',dat,0,(4*LY*LZ,4*LZ,4))
        dat=FileOP2.read()
        rho3 = np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8))
        dat=FileOP3.read()
        rho4 = np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8))
        dat=FileOP4.read()
        rho5 = np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8))
        dat=FileOP5.read()
        rho6 = np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8))
        dat=FileOP6.read()
        rho7 = np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8))

        """dat=File3.read()
        cp = np.array(np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8)))
        cp[np.where(solid!=0)]=np.average(cp[np.where(solid==0)])

        dat=File4.read()
        cp2 = np.array(np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8)))
        cp2[np.where(solid!=0)]=np.average(cp2[np.where(solid==0)])

        dat=File5.read()
        cp3 = np.array(np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8)))
        cp3[np.where(solid!=0)]=np.average(cp3[np.where(solid==0)])
        
        dat=File6.read()
        cp4 = np.array(np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8)))
        cp4[np.where(solid!=0)]=np.average(cp4[np.where(solid==0)])
        

        dat=FileDensity.read()
        density = np.ndarray((LX,LY,LZ),'=d',dat,0,(8*LY*LZ,8*LZ,8))"""

        #liquid = np.array(-lap[:,3,:,1]-lap[:,3,:,0])
        #liquid = rho[:,5,:,0]
        #####liquid = rho[:,5,:,0]
        #liquid = humid[:,:,0]
        #liquid = cp[:,5,:,0]+3*(0.003-0.002464)*lap[:,5,:,0]#1-rho[:,3,:,1]-rho[:,3,:,0]
        #liquid = np.array([np.gradient(liquid,axis=0),np.gradient(liquid,axis=1)])
        #liquid = np.array([np.gradient(liquid[0],axis=0),np.gradient(liquid[1],axis=1)])
        #liquid = liquid[0]+liquid[1]

        dat=File2.read()
        v = np.ndarray((LX,LY,LZ,ndim),'=d',dat,0,(ndim*8*LY*LZ,ndim*8*LZ,ndim*8,8))

        #dat=FileGP.read()
        #gradp = np.ndarray((LX,LY,LZ,ndim),'=d',dat,0,(ndim*8*LY*LZ,ndim*8*LZ,ndim*8,8))
        if (plot3d):
            if(t==tstart):
                liquid = np.array(rho[:,:,:,1])
                #liquid = np.concatenate((np.flip(np.array(liquid[:,:LY//2-1,:]),axis=1),np.array(liquid),np.flip(np.array(liquid[:,LY//2-1:,:]),axis=1)),axis=1)
                #liquid = np.concatenate((np.flip(liquid[:,:,0:LZ//2-1],axis=2),liquid,np.flip(liquid[:,:,LZ//2-1:],axis=2)),axis=2)
                liquid[:1,np.where(liquid[:1,:,:]>0.5)[1],np.where(liquid[:1,:,:]>0.5)[2]]=0

                liquid[np.where(liquid[:,:1,:]>0.5)[0],:1,np.where(liquid[:,:1,:]>0.5)[2]]=0
                liquid[np.where(liquid[:,:,:1]>0.5)[0],np.where(liquid[:,:,:1]>0.5)[1],:1]=0
                liquid[LX-2:,np.where(liquid[LX-2:,:,:]>0.5)[1],np.where(liquid[LX-2:,:,:]>0.5)[2]]=0

                liquid[np.where(liquid[:,LY-2:,:]>0.5)[0],LY-2:,np.where(liquid[:,LY-2:,:]>0.5)[2]]=0
                liquid[np.where(liquid[:,:,LZ-2:]>0.5)[0],np.where(liquid[:,:,LZ-2:]>0.5)[1],LZ-2:]=0

            liquid2 = np.array(rho[:,:,:,0])
            liquid2[:1,np.where(liquid2[:1,:,:]>0.5)[1],np.where(liquid2[:1,:,:]>0.5)[2]]=0

            liquid2[np.where(liquid2[:,:1,:]>0.5)[0],:1,np.where(liquid2[:,:1,:]>0.5)[2]]=0
            liquid2[np.where(liquid2[:,:,:1]>0.5)[0],np.where(liquid2[:,:,:1]>0.5)[1],:1]=0
            liquid2[LX-2:,np.where(liquid2[LX-2:,:,:]>0.5)[1],np.where(liquid2[LX-2:,:,:]>0.5)[2]]=0

            liquid2[np.where(liquid2[:,LY-2:,:]>0.5)[0],LY-2:,np.where(liquid2[:,LY-2:,:]>0.5)[2]]=0
            liquid2[np.where(liquid2[:,:,LZ-2:]>0.5)[0],np.where(liquid2[:,:,LZ-2:]>0.5)[1],LZ-2:]=0

            #liquid2[np.where(liquid2[:,:,:2]>0.333)[0],np.where(liquid2[:,:,:2]>0.333)[1],:2]=0
            print(np.sum(liquid2))
            vols = np.append(vols, np.sum(liquid2))
        else:
            #liquid = np.array(152000./907./50./(1./3.)/50.*cp2[:,:,LZ//2]-66000./907./50./(1./3.)/50.*cp[:,:,LZ//2]-8000./907./50./(1./3.)/50.*cp3[:,:,LZ//2]-78000./907./50./(1./3.)/50.*cp4[:,:,LZ//2])#-cp4[:,:,LZ//2])
            #liquid = np.array(148000./907./50./(1./3.)/50.*cp[:,:,LZ//2]-66000./907./50./(1./3.)/50.*cp2[:,:,LZ//2]-92000./907./50./(1./3.)/50.*cp3[:,:,LZ//2]+10000./907./50./(1./3.)/50.*cp4[:,:,LZ//2])
            #liquid = np.array(167500./907./50./(1./3.)/50.*cp3[:,:,LZ//2]-92000./907./50./(1./3.)/50.*cp[:,:,LZ//2]-8000./907./50./(1./3.)/50.*cp2[:,:,LZ//2]-67500./907./50./(1./3.)/50.*cp4[:,:,LZ//2])
            #print(np.amax(liquid))
            #liquid = np.array(cp[:,:,LZ//2])
            #liquid=np.array(1-rho3-rho2-rho)
            #liquid = np.array(rho3[:,:,LZ//2])
            #liquid=np.array(rho[:,:,LZ//2])*np.array(rho2[:,:,LZ//2])*(1-np.array(rho[:,:,LZ//2])-np.array(rho2[:,:,LZ//2]))
            slice=LZ//2
            if(LZ<slice):
                slice=0
            liquid = np.array(rho[:,:,slice])+ 0.8*np.array(rho2[:,:,slice])+0.6*np.array(rho3[:,:,slice])+0.4*np.array(rho4[:,:,slice])+0.2*np.array(rho5[:,:,slice])#*np.array(gh[:,LY//2,:,0])**2+np.array(gh[:,LY//2,:,1])**2+np.array(gh[:,LY//2,:,2])**2)
            #liquid = np.array(rho[:,:,LZ//2])+ 0.666*np.array(rho2[:,:,LZ//2])+0.333*np.array(rho3[:,:,LZ//2])
            #liquid = np.array(rho5[:,:,LZ//2])
            #
            #liquid = np.sqrt(np.array(gh[:,LY//2,:,0])**2+np.array(gh[:,LY//2,:,1])**2+np.array(gh[:,LY//2,:,2])**2)
            #liquid = np.array(solid[:,LY//2,:])
            #liquid = (np.sign(nTernaryLeeExtraPotentialp.array(go[:,LY//2,:,0,0])*(np.array(go[:,LY//2,:,0,0])+np.array(go[:,LY//2,:,1,0]))+np.array(go[:,LY//2,:,0,1])*(np.array(go[:,LY//2,:,0,1])+np.array(go[:,LY//2,:,1,1]))+np.array(go[:,LY//2,:,0,2])*(np.array(go[:,LY//2,:,0,2])+np.array(go[:,LY//2,:,1,2]))))*np.sqrt(np.abs(np.array(go[:,LY//2,:,0,0])*(np.array(go[:,LY//2,:,0,0])+np.array(go[:,LY//2,:,1,0]))+np.array(go[:,LY//2,:,0,1])*(np.array(go[:,LY//2,:,0,1])+np.array(go[:,LY//2,:,1,1]))+np.array(go[:,LY//2,:,0,2])*(np.array(go[:,LY//2,:,0,2])+np.array(go[:,LY//2,:,1,2]))))
            #liquid = np.sign(np.array(go[:,LY//2,:,0,2]))*np.sqrt(np.abs(go[:,LY//2,:,0,2]*(np.array(go[:,LY//2,:,0,2])+np.array(go[:,LY//2,:,1,2]))))*gh[:,LY//2,:,2]
        lxxx=100
        xi0 = np.append(xi0,np.sum(rho[:,:,:]**2*(1-rho[:,:,:])**2)*6*LX*LY/(LX*LY*LZ))
        xi1 = np.append(xi1,np.sum(rho2[:,:,:]**2*(1-rho2[:,:,:])**2)*6*LX*LY/(LX*LY*LZ))
        xi2 = np.append(xi2,np.sum(rho3[:,:,:]**2*(1-rho3[:,:,:])**2)*6*LX*LY/(LX*LY*LZ))
        xi3 = np.append(xi3,np.sum(rho4[:,:,:]**2*(1-rho4[:,:,:])**2)*6*LX*LY/(LX*LY*LZ))
        xi4 = np.append(xi4,np.sum(rho5[:,:,:]**2*(1-rho5[:,:,:])**2)*6*LX*LY/(LX*LY*LZ))
        xi5 = np.append(xi5,np.sum(rho6[:,:,:]**2*(1-rho6[:,:,:])**2)*6*LX*LY/(LX*LY*LZ))
        xi6 = np.append(xi6,np.sum(rho7[:,:,:]**2*(1-rho7[:,:,:])**2)*6*LX*LY/(LX*LY*LZ))
        #xi4 = np.append(xi4,np.sum((1-rho[:,:,:]-rho2[:,:,:]-rho3[:,:,:]-rho4[:,:,:])**2*(1-(1-rho[:,:,:]-rho2[:,:,:]-rho3[:,:,:]-rho4[:,:,:]))**2)*6*LX/(LX*LY))
        #xi4 = np.append(xi4,np.sum((1-rho[:,:,:]-rho2[:,:,:]-rho3[:,:,:])**2*(1-(1-rho[:,:,:]-rho2[:,:,:]-rho3[:,:,:]))**2)*6*LX/(LX*LY))
        xi7 = np.append(xi7,np.sum((1-rho[:,:,:]-rho2[:,:,:]-rho3[:,:,:]-rho4[:,:,:]-rho5[:,:,:]-rho6[:,:,:]-rho7[:,:,:])**2*(1-(1-rho[:,:,:]-rho2[:,:,:]-rho3[:,:,:]-rho4[:,:,:]-rho5[:,:,:]-rho6[:,:,:]-rho7[:,:,:]))**2)*6*LX*LY/(LX*LY*LZ))
        #print("xi0",(LX*LY)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6))
        #LLL = (lxxx*lxxx)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6)[-1]
        LLL = (LX*LY*LZ)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6)[-1]
        print(xi0[-1],xi1[-1],xi2[-1],xi3[-1],xi4[-1],xi5[-1],xi6[-1],xi7[-1])
        rho8 = 1-rho[:,:,:]-rho2[:,:,:]-rho3[:,:,:]-rho4[:,:,:]-rho5[:,:,:]-rho6[:,:,:]-rho7[:,:,:]

        lxx=LX
        lyy=LY
        lzz=LZ

        rhostep=rho[:lxx,:lyy,:lzz]>0.5
        STF=2*np.pi*(scipy.fft.fftn(rho[:lxx,:lyy,:lzz]>0.5)*(scipy.fft.ifftn(rho[:lxx,:lyy,:lzz]>0.5))+scipy.fft.fftn(rho2[:lxx,:lyy,:lzz]>0.5)*(scipy.fft.ifftn(rho2[:lxx,:lyy,:lzz]>0.5))+scipy.fft.fftn(rho3[:lxx,:lyy,:lzz]>0.5)*(scipy.fft.ifftn(rho3[:lxx,:lyy,:lzz]>0.5))+scipy.fft.fftn(rho4[:lxx,:lyy,:lzz]>0.5)*(scipy.fft.ifftn(rho4[:lxx,:lyy,:lzz]>0.5))+scipy.fft.fftn(rho5[:lxx,:lyy,:lzz]>0.5)*(scipy.fft.ifftn(rho5[:lxx,:lyy,:lzz]>0.5))+scipy.fft.fftn(rho6[:lxx,:lyy,:lzz]>0.5)*(scipy.fft.ifftn(rho6[:lxx,:lyy,:lzz]>0.5))+scipy.fft.fftn(rho7[:lxx,:lyy,:lzz]>0.5)*(scipy.fft.ifftn(rho7[:lxx,:lyy,:lzz]>0.5))+scipy.fft.fftn(rho8[:lxx,:lyy,:lzz]>0.5)*(scipy.fft.ifftn(rho8[:lxx,:lyy,:lzz]>0.5)))/NN
        STF=np.absolute(STF)
        STF[0,0]=0#np.average(STF[1:2,1:2,1:2])
        STF0=STF[:lxx//2,:lyy//2,:lzz//2]#/np.sum(STF[:lxx//2,:lxx//2])
        STF1=STF[:lxx//2,lyy//2:,:lzz//2]#/np.sum(STF[:lxx//2,lxx//2:])
        STF2=STF[lxx//2:,:lyy//2,:lzz//2]#/np.sum(STF[lxx//2:,:lxx//2])
        STF3=STF[lxx//2:,lyy//2:,:lzz//2]#/np.sum(STF[lxx//2:,lxx//2:])
        STF4=STF[:lxx//2,:lyy//2,lzz//2:]#/np.sum(STF[:lxx//2,:lxx//2])
        STF5=STF[:lxx//2,lyy//2:,lzz//2:]#/np.sum(STF[:lxx//2,lxx//2:])
        STF6=STF[lxx//2:,:lyy//2,lzz//2:]#/np.sum(STF[lxx//2:,:lxx//2])
        STF7=STF[lxx//2:,lyy//2:,lzz//2:]#/np.sum(STF[lxx//2:,lxx//2:])
        STF3D=np.concatenate((np.concatenate((np.concatenate((STF3,STF1),axis=0),np.concatenate((STF2,STF0),axis=0)),axis=1),np.concatenate((np.concatenate((STF3,STF1),axis=0),np.concatenate((STF2,STF0),axis=0)),axis=1)),axis=2)
        STF=STF3D.flatten()
        x = np.arange(0, np.shape(STF3D.real)[0], 1)
        y = np.arange(0, np.shape(STF3D.real)[1], 1)
        z = np.arange(0, np.shape(STF3D.real)[2], 1)
        xx, yy, zz = np.meshgrid(x, y, z)
        k=np.sqrt((xx-lxx//2)**2+(yy-lyy//2)**2+(zz-lzz//2)**2).flatten()*2*np.pi/lxx
        #STF=np.concatenate((np.concatenate((STF3,STF1),axis=0),np.concatenate((STF2,STF0),axis=0)),axis=1)
        STFCircAvg=np.zeros(int(np.amax(k/(2*np.pi/lxx)))+1)
        Count=np.zeros(int(np.amax(k/(2*np.pi/lxx)))+1)
        kCircAvg=np.zeros(int(np.amax(k/(2*np.pi/lxx)))+1)
        print("maxk",np.amax(k/(2*np.pi/lxx)))
        for i in range(0,len(k)):
            kCircAvg[int(k[i]/(2*np.pi/lxx))]=k[i]
            #print(len(k),int(k[i]),STF[i],STFCircAvg[int(k[i])],Count[int(k[i])])
            STFCircAvg[int(k[i]/(2*np.pi/lxx))]+=STF[i]
            Count[int(k[i]/(2*np.pi/lxx))]+=1
        
        #exit()
        for i in range(0,int(np.amax(k/(2*np.pi/lxx)))+1):
            if Count[i]>0:
                STFCircAvg[i]/=Count[i]
        
        STFCircAvg/=np.sum(STFCircAvg)
        sa0=np.append(sa0,(2*np.pi*scipy.integrate.simps(STFCircAvg,kCircAvg)/scipy.integrate.simps(STFCircAvg*kCircAvg,kCircAvg)))
        
        sa=np.append(sa,(sa0[-1]))
        print("l",sa0[-1])

        thetafit=0#circleFit(liquid,LX,LY,12,LY-1,0,LX-1,0)
        print(LLL)
        #dat=File3.read()
        #gh = np.ndarray((LX,LY,ndim),'=d',dat,0,(ndim*8*LY,ndim*8,8))
        print("LIQUID VOLUME",np.sum(rho[:,:,LZ//2]))
        File.close()
        FileOP1.close()
        FileOP2.close()
        FileOP3.close()
        FileOP4.close()
        FileOP5.close()
        FileOP6.close()
        FileSolid.close()
        File2.close()
        ##File3.close()
        print(np.array(rho2[LX//2,LY//2,LZ//2]))
        #####fig,ax=plt.subplots(1,1,figsize=(6,6))
        #fig = plt.figure()
        #ax = plt.axes(projection='3d')
        output = "%s/component_plot_%012d.png"%(outDirName,t)
        #rho3=2*0.01*(rho2-0.2)*(rho2-1)*(2*rho2-0.2-1)-0.0128*rho4
        if (not plot3d):
            #lxx0=0
            #lyy0=30
            #lxx=188
            #lyy=163
            lxx0=0
            lyy0=0
            lxx=LX
            lyy=LY
            #rgbv = np.zeros((lyy-lyy0,lxx-lxx0,3))
            rgbv = np.zeros((lxx,lyy,3))
            #rgbv[:,:] = np.flip(liquid).transpose()
            #rgbv[:,:,0] = 0/255*np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+0/255*np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()*(np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()>0)
            #rgbv[:,:,1] = 0/255*np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+0/255*np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+0/255*np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()*(np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()>0)
            #rgbv[:,:,2] = 255/255*np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+0/255*np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+0/255*np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+255/255*np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+0/255*np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()*(np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()>0)
            color=np.array([[41,3,110],[191,40,76],[86,218,82],[237,166,6],[86,218,82],[0,123,167]])/255
            color=np.array([[41,3,110],[191,40,76],[237,166,6],[237,166,6],[86,218,82],[0,123,167]])/255
            color=np.array([[237,166,6],[0,123,167],[191,40,76],[237,166,6],[86,218,82],[41,3,110]])/255
            #color=np.array([[41,3,110],[191,40,76],[237,166,6],[0,123,167],[237,166,6],[0,123,167]])/255
            color=np.array([[41,3,110],[191,40,76],[232,79,23],[237,166,6],[86,218,82],[0,123,167]])/255
            color=np.array([[0,123,167],[232,79,23],[41,3,110],[191,40,76],[86,218,82],[237,166,6]])/255
            rgbv[:,:,0] = color[0][0]*np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[1][0]*np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[2][0]*np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[3][0]*np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[4][0]*np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[5][0]*np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()*(np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()>0)
            rgbv[:,:,1] = color[0][1]*np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[1][1]*np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[2][1]*np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[3][1]*np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[4][1]*np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[5][1]*np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()*(np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()>0)
            rgbv[:,:,2] = color[0][2]*np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[1][2]*np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[2][2]*np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[3][2]*np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[4][2]*np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()*(np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2],1).transpose()>0)+color[5][2]*np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()*(np.flip((1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]),1).transpose()>0)
            #rgbv[:,:] = np.flip(np.log(STF3D[:,:,LZ//2])).transpose()
        #rgbv[:,:] = np.flip(liquid[:,:]).transpose()
        #print(np.sum(liquid2))
        #rgbv[:,:] = np.flip(rho.take(indices=slicepos,axis=sliceaxis)).transpose()
        #rgbv[:,:,1] = np.flip(rho.take(indices=slicepos,axis=sliceaxis)).transpose()
        #rgbv[:,:,2] = np.flip(rho.take(indices=slicepos,axis=sliceaxis)).transpose()
        
        """gradrho1x = np.gradient(rho, axis = 0)
        gradrho1y = np.gradient(rho, axis = 1)
        gradrho2x = np.gradient(rho2, axis = 0)
        gradrho2y = np.gradient(rho2, axis = 1)
        gradrho3x = np.gradient(rho3, axis = 0)
        gradrho3y = np.gradient(rho3, axis = 1)
        gradrho4x = np.gradient(rho4, axis = 0)
        gradrho4y = np.gradient(rho4, axis = 1)
        gradrho5x = np.gradient(rho5, axis = 0)
        gradrho5y = np.gradient(rho5, axis = 1)
        gradrho6x = np.gradient(rho6, axis = 0)
        gradrho6y = np.gradient(rho6, axis = 1)
        gradrho7x = np.gradient(rho7, axis = 0)
        gradrho7y = np.gradient(rho7, axis = 1)
        gradrho8x = np.gradient(rho8, axis = 0)
        gradrho8y = np.gradient(rho8, axis = 1)

        #im=ax.imshow(np.flip(rho0.take(indices=slicepos,axis=sliceaxis)).transpose(),interpolation='nearest',origin='upper')
        surfacearea = np.sum(2*(3/3)*(rho[:,:,:]**2*(1-rho[:,:,:])**2+rho2[:,:,:]**2*(1-rho2[:,:,:])**2-(rho[:,:,:]+rho2[:,:,:])**2*(1-rho[:,:,:]-rho2[:,:,:])**2
                            +rho[:,:,:]**2*(1-rho[:,:,:])**2+rho3[:,:,:]**2*(1-rho3[:,:,:])**2-(rho[:,:,:]+rho3[:,:,:])**2*(1-rho[:,:,:]-rho3[:,:,:])**2
                            +rho[:,:,:]**2*(1-rho[:,:,:])**2+rho4[:,:,:]**2*(1-rho4[:,:,:])**2-(rho[:,:,:]+rho4[:,:,:])**2*(1-rho[:,:,:]-rho4[:,:,:])**2
                            +rho[:,:,:]**2*(1-rho[:,:,:])**2+rho5[:,:,:]**2*(1-rho5[:,:,:])**2-(rho[:,:,:]+rho5[:,:,:])**2*(1-rho[:,:,:]-rho5[:,:,:])**2
                            +rho[:,:,:]**2*(1-rho[:,:,:])**2+rho6[:,:,:]**2*(1-rho6[:,:,:])**2-(rho[:,:,:]+rho6[:,:,:])**2*(1-rho[:,:,:]-rho6[:,:,:])**2
                            +rho[:,:,:]**2*(1-rho[:,:,:])**2+rho7[:,:,:]**2*(1-rho7[:,:,:])**2-(rho[:,:,:]+rho7[:,:,:])**2*(1-rho[:,:,:]-rho7[:,:,:])**2
                            +rho[:,:,:]**2*(1-rho[:,:,:])**2+rho8[:,:,:]**2*(1-rho8[:,:,:])**2-(rho[:,:,:]+rho8[:,:,:])**2*(1-rho[:,:,:]-rho8[:,:,:])**2
                            +rho2[:,:,:]**2*(1-rho2[:,:,:])**2+rho3[:,:,:]**2*(1-rho3[:,:,:])**2-(rho2[:,:,:]+rho3[:,:,:])**2*(1-rho2[:,:,:]-rho3[:,:,:])**2
                            +rho2[:,:,:]**2*(1-rho2[:,:,:])**2+rho4[:,:,:]**2*(1-rho4[:,:,:])**2-(rho2[:,:,:]+rho4[:,:,:])**2*(1-rho2[:,:,:]-rho4[:,:,:])**2
                            +rho2[:,:,:]**2*(1-rho2[:,:,:])**2+rho5[:,:,:]**2*(1-rho5[:,:,:])**2-(rho2[:,:,:]+rho5[:,:,:])**2*(1-rho2[:,:,:]-rho5[:,:,:])**2
                            +rho2[:,:,:]**2*(1-rho2[:,:,:])**2+rho6[:,:,:]**2*(1-rho6[:,:,:])**2-(rho2[:,:,:]+rho6[:,:,:])**2*(1-rho2[:,:,:]-rho6[:,:,:])**2
                            +rho2[:,:,:]**2*(1-rho2[:,:,:])**2+rho7[:,:,:]**2*(1-rho7[:,:,:])**2-(rho2[:,:,:]+rho7[:,:,:])**2*(1-rho2[:,:,:]-rho7[:,:,:])**2
                            +rho2[:,:,:]**2*(1-rho2[:,:,:])**2+rho8[:,:,:]**2*(1-rho8[:,:,:])**2-(rho2[:,:,:]+rho8[:,:,:])**2*(1-rho2[:,:,:]-rho8[:,:,:])**2
                            +rho3[:,:,:]**2*(1-rho3[:,:,:])**2+rho4[:,:,:]**2*(1-rho4[:,:,:])**2-(rho3[:,:,:]+rho4[:,:,:])**2*(1-rho3[:,:,:]-rho4[:,:,:])**2
                            +rho3[:,:,:]**2*(1-rho3[:,:,:])**2+rho5[:,:,:]**2*(1-rho5[:,:,:])**2-(rho3[:,:,:]+rho5[:,:,:])**2*(1-rho3[:,:,:]-rho5[:,:,:])**2
                            +rho3[:,:,:]**2*(1-rho3[:,:,:])**2+rho6[:,:,:]**2*(1-rho6[:,:,:])**2-(rho3[:,:,:]+rho6[:,:,:])**2*(1-rho3[:,:,:]-rho6[:,:,:])**2
                            +rho3[:,:,:]**2*(1-rho3[:,:,:])**2+rho7[:,:,:]**2*(1-rho7[:,:,:])**2-(rho3[:,:,:]+rho7[:,:,:])**2*(1-rho3[:,:,:]-rho7[:,:,:])**2
                            +rho3[:,:,:]**2*(1-rho3[:,:,:])**2+rho8[:,:,:]**2*(1-rho8[:,:,:])**2-(rho3[:,:,:]+rho8[:,:,:])**2*(1-rho3[:,:,:]-rho8[:,:,:])**2
                            +rho4[:,:,:]**2*(1-rho4[:,:,:])**2+rho5[:,:,:]**2*(1-rho5[:,:,:])**2-(rho4[:,:,:]+rho5[:,:,:])**2*(1-rho4[:,:,:]-rho5[:,:,:])**2
                            +rho4[:,:,:]**2*(1-rho4[:,:,:])**2+rho6[:,:,:]**2*(1-rho6[:,:,:])**2-(rho4[:,:,:]+rho6[:,:,:])**2*(1-rho4[:,:,:]-rho6[:,:,:])**2
                            +rho4[:,:,:]**2*(1-rho4[:,:,:])**2+rho7[:,:,:]**2*(1-rho7[:,:,:])**2-(rho4[:,:,:]+rho7[:,:,:])**2*(1-rho4[:,:,:]-rho7[:,:,:])**2
                            +rho4[:,:,:]**2*(1-rho4[:,:,:])**2+rho8[:,:,:]**2*(1-rho8[:,:,:])**2-(rho4[:,:,:]+rho8[:,:,:])**2*(1-rho4[:,:,:]-rho8[:,:,:])**2
                            +rho5[:,:,:]**2*(1-rho5[:,:,:])**2+rho6[:,:,:]**2*(1-rho6[:,:,:])**2-(rho5[:,:,:]+rho6[:,:,:])**2*(1-rho5[:,:,:]-rho6[:,:,:])**2
                            +rho5[:,:,:]**2*(1-rho5[:,:,:])**2+rho7[:,:,:]**2*(1-rho7[:,:,:])**2-(rho5[:,:,:]+rho7[:,:,:])**2*(1-rho5[:,:,:]-rho7[:,:,:])**2
                            +rho5[:,:,:]**2*(1-rho5[:,:,:])**2+rho8[:,:,:]**2*(1-rho8[:,:,:])**2-(rho5[:,:,:]+rho8[:,:,:])**2*(1-rho5[:,:,:]-rho8[:,:,:])**2
                            +rho6[:,:,:]**2*(1-rho6[:,:,:])**2+rho7[:,:,:]**2*(1-rho7[:,:,:])**2-(rho6[:,:,:]+rho7[:,:,:])**2*(1-rho6[:,:,:]-rho7[:,:,:])**2
                            +rho6[:,:,:]**2*(1-rho6[:,:,:])**2+rho8[:,:,:]**2*(1-rho8[:,:,:])**2-(rho6[:,:,:]+rho8[:,:,:])**2*(1-rho6[:,:,:]-rho8[:,:,:])**2
                            +rho7[:,:,:]**2*(1-rho7[:,:,:])**2+rho8[:,:,:]**2*(1-rho8[:,:,:])**2-(rho7[:,:,:]+rho8[:,:,:])**2*(1-rho7[:,:,:]-rho8[:,:,:])**2)
                            - 9/8 * (gradrho1x*gradrho1x+gradrho1y*gradrho1y+gradrho1x*gradrho2x+gradrho1y*gradrho2y+gradrho1x*gradrho3x+gradrho1y*gradrho3y+gradrho1x*gradrho4x+gradrho1y*gradrho4y+gradrho1x*gradrho5x+gradrho1y*gradrho5y+gradrho1x*gradrho6x+gradrho1y*gradrho6y+gradrho1x*gradrho7x+gradrho1y*gradrho7y+gradrho1x*gradrho8x+gradrho1y*gradrho8y
                                    +gradrho2x*gradrho1x+gradrho2y*gradrho1y+gradrho2x*gradrho2x+gradrho2y*gradrho2y+gradrho2x*gradrho3x+gradrho2y*gradrho3y+gradrho2x*gradrho4x+gradrho2y*gradrho4y+gradrho2x*gradrho5x+gradrho2y*gradrho5y+gradrho2x*gradrho6x+gradrho2y*gradrho6y+gradrho2x*gradrho7x+gradrho2y*gradrho7y+gradrho2x*gradrho8x+gradrho2y*gradrho8y
                                    +gradrho3x*gradrho1x+gradrho3y*gradrho1y+gradrho3x*gradrho2x+gradrho3y*gradrho2y+gradrho3x*gradrho3x+gradrho3y*gradrho3y+gradrho3x*gradrho4x+gradrho3y*gradrho4y+gradrho3x*gradrho5x+gradrho3y*gradrho5y+gradrho3x*gradrho6x+gradrho3y*gradrho6y+gradrho3x*gradrho7x+gradrho3y*gradrho7y+gradrho3x*gradrho8x+gradrho3y*gradrho8y
                                    +gradrho4x*gradrho1x+gradrho4y*gradrho1y+gradrho4x*gradrho2x+gradrho4y*gradrho2y+gradrho4x*gradrho3x+gradrho4y*gradrho3y+gradrho4x*gradrho4x+gradrho4y*gradrho4y+gradrho4x*gradrho5x+gradrho4y*gradrho5y+gradrho4x*gradrho6x+gradrho4y*gradrho6y+gradrho4x*gradrho7x+gradrho4y*gradrho7y+gradrho4x*gradrho8x+gradrho4y*gradrho8y
                                    +gradrho5x*gradrho1x+gradrho5y*gradrho1y+gradrho5x*gradrho2x+gradrho5y*gradrho2y+gradrho5x*gradrho3x+gradrho5y*gradrho3y+gradrho5x*gradrho4x+gradrho5y*gradrho4y+gradrho5x*gradrho5x+gradrho5y*gradrho5y+gradrho5x*gradrho6x+gradrho5y*gradrho6y+gradrho5x*gradrho7x+gradrho5y*gradrho7y+gradrho5x*gradrho8x+gradrho5y*gradrho8y
                                    +gradrho6x*gradrho1x+gradrho6y*gradrho1y+gradrho6x*gradrho2x+gradrho6y*gradrho2y+gradrho6x*gradrho3x+gradrho6y*gradrho3y+gradrho6x*gradrho4x+gradrho6y*gradrho4y+gradrho6x*gradrho5x+gradrho6y*gradrho5y+gradrho6x*gradrho6x+gradrho6y*gradrho6y+gradrho6x*gradrho7x+gradrho6y*gradrho7y+gradrho6x*gradrho8x+gradrho6y*gradrho8y
                                    +gradrho7x*gradrho1x+gradrho7y*gradrho1y+gradrho7x*gradrho2x+gradrho7y*gradrho2y+gradrho7x*gradrho3x+gradrho7y*gradrho3y+gradrho7x*gradrho4x+gradrho7y*gradrho4y+gradrho7x*gradrho5x+gradrho7y*gradrho5y+gradrho7x*gradrho6x+gradrho7y*gradrho6y+gradrho7x*gradrho7x+gradrho7y*gradrho7y+gradrho7x*gradrho8x+gradrho7y*gradrho8y
                                    +gradrho8x*gradrho1x+gradrho8y*gradrho1y+gradrho8x*gradrho2x+gradrho8y*gradrho2y+gradrho8x*gradrho3x+gradrho8y*gradrho3y+gradrho8x*gradrho4x+gradrho8y*gradrho4y+gradrho8x*gradrho5x+gradrho8y*gradrho5y+gradrho8x*gradrho6x+gradrho8y*gradrho6y+gradrho8x*gradrho7x+gradrho8y*gradrho7y+gradrho8x*gradrho8x+gradrho8y*gradrho8y))
        sa=np.append(sa,surfacearea)"""
        #print(v[228-5,195,0])
        #pts = np.where(1-rho[:,:,:,0]-rho[:,:,:,1]>0.5)
        #print(np.shape(pts))
        #print(pts)
        #X,Y,Z=np.meshgrid(np.linspace(0,101,102), np.linspace(0,300,301), np.linspace(0,101,102))
        #ax.voxels(X,Y,Z,rho[:,:,:,0])
        
        if plot == True:
            fig,ax=plt.subplots(1,1,figsize=(6,6))
            im=ax.imshow(rgbv,interpolation='spline16',origin='lower')
            #fig.colorbar(im)
            plt.axis('off')
            stepx=1
            stepz=1
            ax.set_aspect('equal')
            X,Z=np.meshgrid(np.linspace(0,LX-1,int((LX)/stepx)),np.linspace(0,LY-1,int((LY)/stepz)))
            
            idx=0
            prev=np.zeros(2)
            sumperim=0
            plotting = (rho[:,:,LZ//2]>0.1)*rho[:,:,LZ//2]/np.maximum(np.maximum(np.maximum(rho[:,:,LZ//2]+rho2[:,:,LZ//2],rho[:,:,LZ//2]+rho3[:,:,LZ//2]),np.maximum(rho[:,:,LZ//2]+rho4[:,:,LZ//2],rho[:,:,LZ//2]+rho5[:,:,LZ//2])),rho[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])
            #plotting = np.logical_and(np.logical_and(rho[:,:,LZ//2]>rho5[:,:,LZ//2],rho[:,:,LZ//2]>rho2[:,:,LZ//2]),np.logical_and(rho[:,:,LZ//2]>rho3[:,:,LZ//2],rho[:,:,LZ//2]>rho4[:,:,LZ//2]))
            test1=ax.contour((np.flip(np.flip(plotting).T,1)), levels=[0.5], colors="k",linewidths=2)
            plotting = (rho2[:,:,LZ//2]>0.1)*rho2[:,:,LZ//2]/np.maximum(np.maximum(np.maximum(rho2[:,:,LZ//2]+rho[:,:,LZ//2],rho2[:,:,LZ//2]+rho3[:,:,LZ//2]),np.maximum(rho2[:,:,LZ//2]+rho4[:,:,LZ//2],rho2[:,:,LZ//2]+rho5[:,:,LZ//2])),rho2[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])
            #plotting = np.logical_and(np.logical_and(rho[:,:,LZ//2]>rho5[:,:,LZ//2],rho[:,:,LZ//2]>rho2[:,:,LZ//2]),np.logical_and(rho[:,:,LZ//2]>rho3[:,:,LZ//2],rho[:,:,LZ//2]>rho4[:,:,LZ//2]))
            test2=ax.contour((np.flip(np.flip(plotting).T,1)), levels=[0.5], colors="k",linewidths=2)
            plotting = (rho3[:,:,LZ//2]>0.1)*rho3[:,:,LZ//2]/np.maximum(np.maximum(np.maximum(rho3[:,:,LZ//2]+rho[:,:,LZ//2],rho3[:,:,LZ//2]+rho2[:,:,LZ//2]),np.maximum(rho3[:,:,LZ//2]+rho4[:,:,LZ//2],rho3[:,:,LZ//2]+rho5[:,:,LZ//2])),rho3[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])
            #plotting = np.logical_and(np.logical_and(rho[:,:,LZ//2]>rho5[:,:,LZ//2],rho[:,:,LZ//2]>rho2[:,:,LZ//2]),np.logical_and(rho[:,:,LZ//2]>rho3[:,:,LZ//2],rho[:,:,LZ//2]>rho4[:,:,LZ//2]))
            test3=ax.contour((np.flip(np.flip(plotting).T,1)), levels=[0.5], colors="k",linewidths=2)
            plotting = (rho4[:,:,LZ//2]>0.1)*rho4[:,:,LZ//2]/np.maximum(np.maximum(np.maximum(rho4[:,:,LZ//2]+rho[:,:,LZ//2],rho4[:,:,LZ//2]+rho2[:,:,LZ//2]),np.maximum(rho4[:,:,LZ//2]+rho3[:,:,LZ//2],rho4[:,:,LZ//2]+rho5[:,:,LZ//2])),rho4[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])
            #plotting = np.logical_and(np.logical_and(rho[:,:,LZ//2]>rho5[:,:,LZ//2],rho[:,:,LZ//2]>rho2[:,:,LZ//2]),np.logical_and(rho[:,:,LZ//2]>rho3[:,:,LZ//2],rho[:,:,LZ//2]>rho4[:,:,LZ//2]))
            test4=ax.contour((np.flip(np.flip(plotting).T,1)), levels=[0.5], colors="k",linewidths=2)
            plotting = (rho5[:,:,LZ//2]>0.1)*rho5[:,:,LZ//2]/np.maximum(np.maximum(np.maximum(rho5[:,:,LZ//2]+rho[:,:,LZ//2],rho5[:,:,LZ//2]+rho2[:,:,LZ//2]),np.maximum(rho5[:,:,LZ//2]+rho4[:,:,LZ//2],rho5[:,:,LZ//2]+rho3[:,:,LZ//2])),rho5[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])
            #plotting = np.logical_and(np.logical_and(rho[:,:,LZ//2]>rho5[:,:,LZ//2],rho[:,:,LZ//2]>rho2[:,:,LZ//2]),np.logical_and(rho[:,:,LZ//2]>rho3[:,:,LZ//2],rho[:,:,LZ//2]>rho4[:,:,LZ//2]))
            test5=ax.contour((np.flip(np.flip(plotting).T,1)), levels=[0.5], colors="k",linewidths=2)
            plotting = ((1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])>0.1)*(1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])/np.maximum(np.maximum(np.maximum(rho[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2],rho2[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2]),np.maximum(rho4[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2],rho5[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])),rho3[:,:,LZ//2]+1-rho[:,:,LZ//2]-rho2[:,:,LZ//2]-rho3[:,:,LZ//2]-rho4[:,:,LZ//2]-rho5[:,:,LZ//2])
            #plotting = np.logical_and(np.logical_and(rho[:,:,LZ//2]>rho5[:,:,LZ//2],rho[:,:,LZ//2]>rho2[:,:,LZ//2]),np.logical_and(rho[:,:,LZ//2]>rho3[:,:,LZ//2],rho[:,:,LZ//2]>rho4[:,:,LZ//2]))
            test6=ax.contour((np.flip(np.flip(plotting).T,1)), levels=[0.5], colors="k",linewidths=2)
            #test1=ax.contour((np.flip(np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2]).T,1))**(1/4), levels=[0.5], colors="k",linewidths=1)#,linestyles = 'dashed')
            #test1=ax.contour((np.flip(np.flip(rho[lxx0:lxx,lyy0:lyy,LZ//2]).T,1))**(1/4), levels=[0.5**(1/3)], colors="k",linewidths=1)#,linestyles = 'dashed')
            #test2=ax.contour((np.flip(np.flip(rho2[lxx0:lxx,lyy0:lyy,LZ//2]).T,1))**(1/4), levels=[0.5**(1/3)], colors="k",linewidths=1)
            #test3=ax.contour((np.flip(np.flip(rho3[lxx0:lxx,lyy0:lyy,LZ//2]).T,1))**(1/4), levels=[0.5**(1/3)], colors="k",linewidths=1)#,linestyles = 'dashed')
            N=len(test1.collections[0].get_paths())#+len(test2.collections[0].get_paths())#+len(test3.collections[0].get_paths())
            coalescecountold=coalescecount
            """if (t==tstart):
                numinit = len(test1.collections[0].get_paths())+len(test2.collections[0].get_paths())+len(test3.collections[0].get_paths())+len(test4.collections[0].get_paths())+len(test5.collections[0].get_paths())+len(test6.collections[0].get_paths())
            if test1.collections[0].get_paths():
                c1,o1,sortedarrayold1,sortedperimsold1=getCoalescence(test1,sortedarrayold1,sortedperimsold1)
                coalescecount+=c1
                ostwaldcount+=o1
            if test2.collections[0].get_paths():
                c2,o2,sortedarrayold2,sortedperimsold2=getCoalescence(test2,sortedarrayold2,sortedperimsold2)
                coalescecount+=c2
                ostwaldcount+=o2
            if test3.collections[0].get_paths():
                c3,o3,sortedarrayold3,sortedperimsold3=getCoalescence(test3,sortedarrayold3,sortedperimsold3)
                coalescecount+=c3
                ostwaldcount+=o3
            if test4.collections[0].get_paths():
                c4,o4,sortedarrayold4,sortedperimsold4=getCoalescence(test4,sortedarrayold4,sortedperimsold4)
                coalescecount+=c4
                ostwaldcount+=o4
            if test6.collections[0].get_paths():
                c6,o6,sortedarrayold6,sortedperimsold6=getCoalescence(test6,sortedarrayold6,sortedperimsold6)
                coalescecount+=c6
                ostwaldcount+=o6
            if LLL>350 and LLL<=400:
                if (times[0]==0):
                    times[0]=t
                coalescebins[0]+=coalescecount-coalescecountold
            elif LLL>400 and LLL<=450:
                if (times[1]==0):
                    times[1]=t                
                coalescebins[1]+=coalescecount-coalescecountold
            elif LLL>450 and LLL<=500:
                if (times[2]==0):
                    times[2]=t
                coalescebins[2]+=coalescecount-coalescecountold
            elif LLL>500 and LLL<=550:
                if (times[3]==0):
                    times[3]=t
                coalescebins[3]+=coalescecount-coalescecountold
            elif LLL>550 and LLL<=600:
                if (times[4]==0):
                    times[4]=t
                coalescebins[4]+=coalescecount-coalescecountold
            elif LLL>600 and LLL<=650:
                if (times[5]==0):
                    times[5]=t
                coalescebins[5]+=coalescecount-coalescecountold
            elif LLL>650 and LLL<=700:
                if (times[6]==0):
                    times[6]=t
                coalescebins[6]+=coalescecount-coalescecountold
            elif LLL>700:
                if (times[7]==0):
                    times[7]=t"""
            """for path in test1.collections[0].get_paths():
                passedzero=False
                for i,j in path.iter_segments():
                    if (passedzero):
                        perims[idx]+=np.sqrt((i[0]-prev[0])**2+(i[1]-prev[1])**2)
                        prev[0]=i[0]
                        prev[1]=i[1]
                    else:
                        passedzero=True
                distr[idx]=perims[idx]
                idx+=1
            for path in test2.collections[0].get_paths():
                passedzero=False
                for i,j in path.iter_segments():
                    if (passedzero):
                        perims[idx]+=np.sqrt((i[0]-prev[0])**2+(i[1]-prev[1])**2)
                        prev[0]=i[0]
                        prev[1]=i[1]
                    else:
                        passedzero=True
                idx+=1
            for path in test3.collections[0].get_paths():
                passedzero=False
                for i,j in path.iter_segments():
                    if (passedzero):
                        perims[idx]+=np.sqrt((i[0]-prev[0])**2+(i[1]-prev[1])**2)
                    else:
                        passedzero=True
                idx+=1"""
            #print(perims)
            #print(np.mean(perims))
            #print("perim",np.std(perims))#/np.mean(perims))
            #perimstddev=np.append(perimstddev,np.std(perims))
            #ax.contour((np.flip(np.flip(rho4[lxx0:lxx,lyy0:lyy,LZ//2]).T,1))**(1/4), levels=[0.5**(1/3)], colors="k",linewidths=1)
            #ax.contour((np.flip(np.flip(rho5[lxx0:lxx,lyy0:lyy,LZ//2]).T,1))**(1/4), levels=[0.5**(1/3)], colors="k",linewidths=1)#,linestyles = 'dashed')
            #ax.contour((np.flip(np.flip(1-rho[lxx0:lxx,lyy0:lyy,LZ//2]-rho2[lxx0:lxx,lyy0:lyy,LZ//2]-rho3[lxx0:lxx,lyy0:lyy,LZ//2]-rho4[lxx0:lxx,lyy0:lyy,LZ//2]-rho5[lxx0:lxx,lyy0:lyy,LZ//2]).T,1))**(1/4), levels=[0.5**(1/3)], colors="k",linewidths=1)
            #ax.quiver(X.T,Z.T,np.flip(np.flip(-v[0:LX:stepx,0:LY:stepz,0,0],0),1),np.flip(v[0:LX:stepx,0:LY:stepz,0,1]),width=0.0008,headwidth=7.5,headlength=7.5)
            #plt.scatter(thetafit[2],80-(thetafit[3]+10))
            plt.savefig(output, dpi=300, format='png')
            plt.close(fig)
        
        stepx=1
        stepz=1
        print("V ",np.average(np.sqrt(v[:,:,:,0]**2+v[:,:,:,1]**2)))#np.sqrt(v[:,:,0]**2+v[:,:,1]**2)))
        VV=np.append(VV,np.average(np.sqrt(v[:,:,:,0]**2+v[:,:,:,1]**2)))
        if t==tstart:
            vol0=np.sum(rho[1:LX-1,1:LY-1,1:LZ-1])
            vol=np.append(vol,0)
        else:
            vol=np.append(vol,(np.sum(rho[1:LX-1,1:LY-1,1:LZ-1]))-vol0)
        #print(gh[int(LX/2),51,1])
        va = np.append(va,np.amax(np.sqrt(v[:,:,:,0]**2+v[:,:,:,1]**2)))
        vE = np.append(vE,np.sum((v[:,:,:,0]**2+v[:,:,:,1]**2)))
        #np.append(va,np.amax(np.amax(np.sqrt(v[:,:,:,0]**2+v[:,:,:,1]**2))-np.average(v[:,:,:,0])))#np.amax(v[:,:,:,0]))
        print("Cumulative Coalescence:",coalescecount,"Cumulative Ostwaldt:",ostwaldcount)
        cumulcoalesce=np.append(cumulcoalesce,coalescecount)
        cumulostwald=np.append(cumulostwald,ostwaldcount)
#print([perimstddev[i] for i in range(len(perimstddev))])
fig, ax = plt.subplots(1, 1, figsize = (3.75, 2.5))
#plt.plot([141.13755131293678, 145.91502921995607, 309.23101623618396, 421.04436915648404, 529.7399681009791, 628.9137150695228, 724.1348585770422, 819.2456582958515, 913.3346267329997, 1007.6249047721108, 1087.2148955614991])
#plt.plot([161.34045122784778, 172.28032345388928, 232.83862514495877, 353.20972640981694, 423.58218731490257, 496.128782587542, 562.7759972552604, 625.478607001083, 688.140516493578, 736.9622120442783, 779.7721127248582])
#plt.plot([185.71319685993151, 206.06828491295903, 203.72891809155635, 313.2406784657352, 384.3416842172082, 436.8976576430653, 484.8531339495799, 529.5708108977047, 570.8509924532208, 612.1935438940419, 647.2967542741594])
tplot=np.linspace(0,165000,(165000-0)//(tinc)+1)
tplot2=np.linspace(0,250000,(250000-0)//(tinc)+1)
tplot3=np.linspace(0,860000,(860000-0)//(tinc)+1)
print([((sa)[i]) for i in range((tend-tstart)//tinc+1)])
#print([(((LX*LY*LZ)/sa)[i]) for i in range((tend-tstart)//tinc+1)])
#plt.plot(np.log(tplot),np.log([178.36100167895523, 180.92474826171375, 184.2095383334083, 293.40792364384293, 390.69930138111823, 460.6435274011591, 529.8208745560789, 597.6378446117933, 666.5080121784921, 729.5317873848996, 787.9547562941887, 851.8741603503687, 913.9080867664051, 967.5017686811593, 1016.6191528311812, 1056.277130750988, 1104.1838998868454, 1156.3152895149155, 1207.5333389762222, 1259.6317819303147, 1304.162402508269, 1344.8570967080748, 1382.8167756871119, 1414.7919446714411, 1456.5727763955033, 1511.7170821119341, 1566.6051488965136, 1616.0790473575457, 1671.2731892748404, 1737.8043408775338]),label="N=5")
#plt.plot(np.log(tplot),np.log([197.64733791312815, 211.51001971682618, 211.03318920398394, 212.26733115877843, 287.10845172601154, 386.1678417176985, 435.50759059911843, 480.8979381048564, 526.3154735060515, 570.197706892095, 611.8928997066857, 650.7735149622908, 692.4013422872185, 733.3797103796827, 775.146956147123, 809.9976748101441, 846.5048695888256, 885.353361991858, 924.3952495067374, 953.3031397435395, 977.8061226500179, 1002.3871149561861, 1025.9550980768772, 1048.7892562942993, 1070.7547084091923, 1092.4455081675449, 1114.2546862444306, 1131.8446045449255, 1150.4977455285084, 1178.5947892021725]),label="N=6")
#plt.plot(np.log(tplot),np.log([221.4297276011715, 245.95788754212674, 245.6940398927734, 244.82823430386327, 242.93263793376286, 270.0618737972841, 375.60590640479137, 425.98080784635647, 457.0830731679805, 487.42139552929757, 517.8081326536003, 547.038217540581, 576.7092139466126, 606.3941849013808, 633.669426082304, 658.8337165960769, 682.2075760634485, 704.8694245107383, 725.7630996496865, 746.9612733719331, 767.2991487609913, 787.8492994814395, 807.2873552870772, 826.2184909517423, 843.0976100605867, 859.0145798243096, 873.6079198627165, 889.5445191908957, 904.5159471934041, 920.948707932493]),label="N=7")
#plt.plot(np.log(tplot),np.log(np.array([247.08688143951403, 281.94924240261213, 281.7989734466547, 281.4241659969636, 280.46336742957186, 277.86586123278073, 278.31494244057257, 328.07473016553627, 416.12205534045086, 452.7312767173284, 476.0823698418658, 497.58668523053797, 519.4348652353766, 541.5790817045336, 563.4268916310946, 585.3825432112964, 607.3432771788205, 629.4487404457739, 651.229432225819, 671.5010696256344, 691.2051961800181, 708.4228423213465, 724.4444909026375, 740.3493402375459, 756.357481214764, 772.2994099994527, 786.5845622351532, 800.8798522263462, 814.6059998321571, 828.526593477185])),label="N=8")
#plt.plot(np.log(tplot),np.log((LX*LY*LZ)/sa))
ax.set_xscale("log")
ax.set_yscale("log")
#ax.scatter(tplot[10:],(5/5)**(1/3)*np.array([28.062383378035747, -8.105343091164897, -12.5719227536552, 12.544441338161459, 10.949218342074591, 11.805235000734568, 12.99619832660561, 14.258218115205977, 15.623920907957906, 16.87046627787154, 18.037424225420313, 19.33037920676946, 20.612379394146163, 21.715559872687578, 22.72625021622159, 23.527989168085075, 24.497845289930822, 25.591374402899557, 26.685892321605557, 27.798064948987793, 28.744065416626324, 29.597374546374684, 30.387814739914557, 31.076029223251318, 31.970315521797556, 33.14628157287076, 34.335031534506086, 35.379265340400494, 36.55374769084913, 37.97493373286709, 39.00626948879742, 39.73170421253462, 40.47507469910928, 41.6420462766713])[10:],color="#eda606",s=10,edgecolors='#1c1c1c',lw=1/4)
#ax.scatter(tplot[10:],(6/5)**(1/3)*np.array([-8.89527223411792, -3.109367599990046, -3.1872964982172904, -3.9604954889371475, 89.1071912431351, 12.211831858249983, 11.772177862791994, 12.197087895025224, 12.816244688027297, 13.478033177498661, 14.194075792971782, 14.862277741161142, 15.570164478737906, 16.301573103014064, 17.081657931054828, 17.73148946332322, 18.408790078938708, 19.16040099913769, 19.90798645474466, 20.445066548515854, 20.870102773152627, 21.33854122800141, 21.798744741745608, 22.23333372705113, 22.650099689477617, 23.070208974295625, 23.504606980359206, 23.84704721858149, 24.2017976282291, 24.743387681087512, 25.36105068705189, 25.9145902586559, 26.530218765243973, 27.04447229810713])[10:], color="#007ba7",s=10,edgecolors='#1c1c1c',lw=1/4)
#ax.scatter(tplot[10:],(7/5)**(1/3)*np.array([-3.9278959362216304, -2.0481376631784123, -2.058096389270511, -2.0939053406094352, -2.311892911247413, -5.77909257728696, 18.420046202678236, 12.505751802001322, 12.096130336715358, 12.244890153313952, 12.522656081858875, 12.857982202955201, 13.257500554047603, 13.66223197057936, 14.049353656106575, 14.41913570183288, 14.796959750377825, 15.15930560060951, 15.506651418715057, 15.867658084090623, 16.20673987948529, 16.543366260685524, 16.86370967314655, 17.196017155371173, 17.484260107237798, 17.757825105257723, 18.017118341535028, 18.316106332604548, 18.587675569184775, 18.881184137236403, 19.178605435426412, 19.52625578339063, 19.896724060816265, 20.246842860546096])[10:], color="#56da52",s=10,edgecolors='#1c1c1c',lw=1/4)
#ax.scatter(tplot[10:],(8/5)**(1/3)*np.array([-2.601470083852361, -1.5928020924622668, -1.5952045298906143, -1.6013035243000795, -1.6178210341877888, -1.6818783298515319, -2.1754563599511703, -10.804499111676341, 16.72574721326115, 12.798228367821508, 12.324878334611734, 12.300695765557796, 12.401779941740985, 12.597060131185962, 12.833393836843378, 13.105960794528077, 13.381168140451807, 13.669823315203447, 13.939452290466964, 14.215854764660639, 14.508078632552133, 14.751230569053853, 15.001074493992148, 15.24851713276027, 15.481649912056687, 15.724995047942173, 15.954679770640869, 16.18685827753034, 16.413950138202424, 16.637894257315505, 16.857359055719886, 17.08913267112691, 17.29161338224301, 17.488808448330715])[10:], color="#e84f17",s=10,edgecolors='#1c1c1c',lw=1/4)
#ax.scatter(tplot[10:],(4/4)**(1/3)*np.array([0.1261787714118463, 0.7080470915358581, 0.7642712364737186, 1.1774241561904666, 1.588062667522976, 1.9068811916767807, 2.344794370022225, 2.796998297821469, 3.289300096175396, 3.660490775738577, 4.150643018115627, 4.437335565288989, 4.321032439348469, 4.554708985048187, 5.046081395577901, 5.548813442586159, 6.962314886844273, 7.2156445881871285, 6.263180365314831, 5.518916645445096, 4.803950151061326, 4.437776614953046, 4.40658922892325, 4.476029518171285, 4.579816924997664, 4.7099040391185625, 4.795715458807787, 4.769644987220143, 4.806830034033174, 4.748498306439416, 4.63134219121565, 4.740797784821977, 4.836780414017182, 4.882445260594681])[10:], color="#eda606",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=4")

#ax.scatter(tplot[10:],(5/4)**(1/3)*np.array([0.12493884187370838, 0.8594980834181524, 0.7499982836898151, 0.8103389893066111, 1.0462688454259816, 1.2941978404321568, 1.5604562115613663, 1.863523534458785, 2.0964161094656584, 2.281320886698171, 2.441999142303392, 2.5826158387726745, 2.7495647029030397, 2.841209390957272, 2.8928854696428234, 2.9579543754091486, 3.044662036083765, 3.227288299122299, 3.4564369676385533, 3.643358245731, 3.752656123552655, 3.8862443748178723, 3.9955283882945243, 4.107675232472788, 4.263496303983983, 4.454770755238324, 4.7913951738159275, 5.126358685408518, 5.404674344758135, 5.591384021629054, 5.534834823701724, 5.417068013227635, 5.324019474129167, 5.34609662984856])[10:], color="#eda606",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=5")
#ax.scatter(tplot[10:],(6/4)**(1/3)*np.array([0.12600003525731462, 1.0249405024182794, 0.9358342034297176, 0.822792703167153, 0.8468276458498505, 1.0045420718154434, 1.1801460962606294, 1.3731720043922293, 1.5789863214904207, 1.7858586650538855, 2.060146564225119, 2.290855983023415, 2.465668083390753, 2.6288531199219705, 2.7529257873040716, 2.8844596345988465, 3.0482500271951394, 3.2408569455677347, 3.4541320548322503, 3.6638846732035573, 3.7791282163310833, 3.8772757880812008, 3.8926073058028505, 3.9608460908087424, 4.1066889643991304, 4.241013723371828, 4.375112896139351, 4.513077459002105, 4.641887249235765, 4.780807275409866, 4.872782153453527, 4.946857533099389, 4.857442196252741, 4.753715737573229])[10:], color="#007ba7",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=6")
#ax.scatter(tplot[10:],(7/4)**(1/3)*np.array([0.12575334521323042, 1.1514130291151508, 1.086112313822936, 1.0165759346475058, 0.8989078527278439, 0.8685223896895575, 0.9809903123408277, 1.1047443462576618, 1.2172529309423081, 1.3303713437708165, 1.4366702814362369, 1.5429784840497411, 1.6499221075983856, 1.7696852873362416, 1.8940166922092894, 1.9968398128510647, 2.0826421664486277, 2.1737889813444866, 2.250446145699114, 2.3017676672498273, 2.3443957611260156, 2.393631443311947, 2.4512825672550993, 2.5187435799820883, 2.5864306687564182, 2.647575179670207, 2.7047711014512448, 2.7527243112558306, 2.7972449847234206, 2.8396808573798547, 2.873933377781111, 2.9151973630363215, 2.9534283859161423, 2.9871290873779768])[10:], color="#56da52",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=7")
#ax.scatter(tplot[10:],(8/4)**(1/3)*np.array([0.12563229866531941, 1.235277270038363, 1.1999455119111064, 1.1472611825464731, 1.095889210551225, 1.0039325639894423, 0.8971272746169353, 0.952158125308552, 1.0689587631040276, 1.1854367547858495, 1.2792958028324608, 1.3642697097873204, 1.4483173430764142, 1.5345494275679779, 1.63557266023896, 1.7201368910232213, 1.7892931918332133, 1.8552222177267235, 1.9359723575805363, 2.0143993224778707, 2.105515920876008, 2.1766132478002684, 2.2331899193925495, 2.284233878109576, 2.3164840343190853, 2.3492924795365715, 2.387903211587031, 2.4371897808133323, 2.501030411872842, 2.550722221132967, 2.591352887598425, 2.6277662195831732, 2.6700728084965157, 2.720263387276719])[10:], color="#e84f17",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=8")
#ax.plot(tplot[10:],(tplot**(1/3)/np.exp(3.1))[10:],label=r"$L\propto t^{1/3}$",color="k")
#ax.plot(tplot[10:],(tplot**(3/3)/np.exp(9.3))[10:],label=r"$L\propto t$",color="k")
print(np.size(tplot[2:]),np.size(np.array([0.1252441811667829, 0.7308352796541713, 1.4347931465523291, 2.1572797554567704, 2.724435617906393, 3.110063260181959, 3.8216567685581646, 4.6979262899559195, 5.46376327046186, 6.282599843424017, 7.523298054012853, 8.157711499321262])[2:]))
#ax.scatter(tplot[2:],(5/4)**(1/3)*np.array([0.1252441811667829, 0.7308352796541713, 1.4347931465523291, 2.1572797554567704, 2.724435617906393, 3.110063260181959, 3.8216567685581646, 4.6979262899559195, 5.46376327046186, 6.282599843424017, 7.523298054012853, 8.157711499321262])[2:], color="#eda606",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=5")
#ax.scatter(tplot3[2:],(6/4)**(1/3)*np.array([0.12527506696671534, 0.783246262133247, 1.0606824626138769, 1.657021185640291, 2.364541908796516, 2.8623041951328, 3.5172663020984136, 4.135547501981413, 4.478092240877541, 4.94085884557772, 5.337408311921347, 5.340406943015019, 5.577419622076822, 5.574599317627605])[2:], color="#007ba7",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=6")
#ax.scatter(tplot[2:],(7/4)**(1/3)*np.array([0.12552112404525492, 0, 0.9078357292346539, 1.1837995923586215, 1.5027124861880021, 1.856392730775905, 2.1142292725008356, 2.284636384591939, 2.5384075436285958, 2.7985941592375094, 2.994456110506239, 3.2015365029095406])[2:], color="#56da52",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=7")
#ax.scatter(tplot2[2:],(8/4)**(1/3)*np.array([0.12535471147785737, 0, 1.004696473625827, 1.047746011703585, 1.2929358519421257, 1.565299588094091, 1.7845245648281811, 2.0309010441595743, 2.1809893143924057, 2.3142172219752615, 2.493276484123906, 2.629567291285857, 2.7636006316866, 2.8873918503735934, 3.089006621482223, 3.2306159083532076, 3.272438337572264])[2:], color="#e84f17",s=10,edgecolors='#1c1c1c',lw=1/4,label="N=8")

A= [2.309313305274944, 14.572851777858785, 19.20979615535115, 25.844355686720135, 31.95345527776347, 36.96518232414162, 41.43426630981256, 46.68930371056927, 51.14500418972082, 53.49229882603798, 55.85063283568264, 55.63254805097062, 57.3026586753021, 59.28509101857606, 60.3612886972289, 62.37749377991091, 64.7828038021572, 66.57828437581264, 68.32508754961385, 73.53892197745432, 81.69279813370193, 81.94576444604137, 82.60594300609901, 82.70393269516505, 85.01107977261206, 87.35113622016986, 90.78224193011572, 91.90960194675425, 95.26266898739739, 104.41934042261646, 110.23072493416205, 115.4558900249212, 118.78037405110506, 117.30305486749383, 113.6690281810105, 118.31508798446743, 122.3786108430537, 124.98159207178233, 127.49356889324828, 129.27817979359145, 128.68467041106967, 128.67799427139448, 130.25286994038473, 139.1925439284857]
B= [17.221430179487015, 15.74704791840037, 22.62869621809839, 28.735812129645353, 34.817682868375115, 38.81676527334943, 43.97296558319741, 48.763058649330524, 52.56484702376531, 54.906143567507776, 55.87335169612812, 56.171946539956046, 58.511030486766245, 59.905970523927145, 60.92460229788565, 63.79290653199495, 65.60179304221319, 67.91930876328658, 69.91771092403567, 78.84813112666134, 82.67752594145126, 82.35209761492362, 82.09432432839374, 83.41808822433144, 86.7791623873332, 88.85149199903361, 91.2351097823044, 93.77720841249248, 99.6069287298852, 107.67313458659088, 113.3029852346676, 117.38310989142788, 118.27752387254813, 114.78311955767992, 114.64960972306494, 121.0100562219543, 123.41186343806272, 127.1535293500303, 127.56201918832537, 129.4062705101821, 128.56097643408154, 128.50981586503065, 135.04690058444936]
n7 = [ ]
for element in zip(A, B):
        n7.extend(element)
n7=[2.3192179939266038, 2.3192179939266038, 15.085376323530792, 14.935535593995263, 17.658472177014232, 21.00383671253888, 24.21545147472498, 27.20052298723555, 30.543926653337415, 33.3901025201895, 35.570840953431265, 37.46984355653181, 40.096886983363476, 42.658116839624, 45.242187702342015, 47.281978245221474, 49.74854549193398, 51.27330137602627, 52.23298554366624, 53.59624956422464, 54.546002601180035, 54.61856753881796, 54.497156841741564, 55.05394231263984, 56.22163721747777, 57.4750495827521, 58.27792744378201, 58.92125520306314, 59.385167803252656, 59.94216655836109, 61.34200012347825, 62.69228634961038, 63.64249870463119, 64.39753748397023, 65.36564837000202, 66.68429315044379, 67.08115817158567, 68.62249026159718, 72.21186394363322, 77.46455827683793, 80.27121787265276, 81.174431136155, 80.6147061847474, 81.0976077936867, 81.38039703073349, 80.85290656243649, 81.41739303171683, 82.15074708889814, 83.70587157842999, 85.45080861088378, 85.99851992278877, 87.50919852477747, 89.41249347092256, 89.90887775890518, 90.61574283160569, 92.52517493784215, 94.0478604748458, 98.32898190471467, 103.00536013826637, 106.17596278513757, 108.67081419462312, 111.7200805031276, 113.8449186153955, 115.74901555104205, 117.1198243512843, 116.62500350401957, 115.6471016040425, 113.1505031743775, 112.04201071970385, 113.04242997246698, 116.70589846041041, 119.36159649257135, 120.66338723090495, 121.69481810536688, 123.2296900580679, 125.39152157428634, 125.69555274812677, 125.8810152350675, 127.6417326245348, 127.81707897393734, 127.17816619545856, 127.07158260322173, 127.16284847865731, 126.9992375894261, 128.75616518470045, 133.4764263619378, 137.52363453053835]
print("HERE",len(n7),len(tplot3))
A= [2.2974733810818386, 2.2974733810818386, 15.729545060654077, 19.68483195645035, 23.722311540974548, 27.419121338959524, 30.373335703964532, 32.909382942559546, 35.23136254303245, 37.368907229668416, 39.37954380909289, 40.956995254609005, 42.61046454156868, 44.392527009623166, 46.08700899685579, 47.92214120019873, 49.96763706326337, 51.32934818422276, 52.86338988572991, 54.291581957173065, 55.711341482678705, 56.85647396499489, 58.08911223384832, 59.83889897480248, 61.08194132769539, 62.2559222390277, 62.980293614040235, 63.55400312737867, 64.46166141813259, 65.55358109191461, 66.21867003682821, 66.58747437545483, 67.13776834654054, 67.54977166135706, 68.28392480959289, 68.78285981143978, 69.13593320317486, 69.44275512661746, 70.18802348464787, 70.57730780277247, 70.9246930603321, 71.25575748924001, 71.43714935617544, 71.62104762302499]
B= [2.2974733810818386, 18.091986152801407, 17.607172775338896, 21.760938756752854, 25.637800185762686, 29.00518096296165, 31.683819918731082, 34.1260617303097, 36.26598323788711, 38.43871210602829, 40.251546973776904, 41.846344813185645, 43.45658044967973, 45.345729523155626, 47.05843346057895, 48.89311007370569, 50.688498466735794, 52.03137889280453, 53.665693879469295, 55.056312766589464, 56.27379339372582, 57.37534009153567, 59.06649064831526, 60.539243996911324, 61.728442480662935, 62.67416999690688, 63.2503251591871, 64.03440207528386, 64.98485183665098, 65.92386272345743, 66.4209600469469, 66.87519944889137, 67.28664905816534, 67.9942091812468, 68.48896438952872, 69.01790324875954, 69.23635368532581, 69.88489378698726, 70.33727622869561, 70.77336248554212, 71.10987875550997, 71.35095049458631, 71.51222122598087]
n8 = [ ]
for element in zip(A, B):
        n8.extend(element)
ax.scatter((1/50/6/(3*3))*tplot3[2:-66],1/((4/9)**(1/3)*(1+0.740*np.sqrt(1/5)))*np.array([2.3141517342556726, 13.355094472944778, 15.178371113131343, 22.343558901376078, 29.913688794737123, 36.10336809900009, 42.662122994241045, 49.87629102638336, 59.13295600948457, 68.91951242281769, 79.05164514885628, 89.96874520035593, 103.2419065263364, 113.67936036703311, 118.99388853357652, 134.26834405518065, 146.24842758874013, 169.53618665597978, 179.77371627717622, 170.27163307339592, 168.20618907256846, 163.9477603472039, 156.27516612233944, 159.13817753068207, 142.3679221115982, 123.13963931383766, 115.49370460919285, 112.53344688984434, 111.79690524214534, 112.24320253775869, 114.47238468467023, 116.98793113086722, 119.21211472862291, 120.78268320081376, 121.86299035452969, 122.59223646259699, 123.09488369330556, 123.44758413187809, 123.66073271647734, 123.80441809873257, 123.90451950905447, 123.96528275783629, 123.98305342035562, 123.9834629328864, 123.98375189644644, 123.95533168403043])[2:-25], color="#eda606",s=16,lw=1/4,label="N=5")
ax.scatter((1/50/6/(3*3))*tplot3[2:-28],1/((4/9)**(1/3)*(1+0.740*np.sqrt(1/6)))*np.array([2.316055049032043, 2.316055049032043, 13.674939456297368, 16.954667426340215, 21.790036657037078, 26.794001791052924, 31.507084166826186, 35.99659335391318, 41.11775193738124, 46.58820209274906, 50.97828526146578, 57.04156511673117, 64.48461972227985, 69.98722539472502, 71.99992150889574, 69.95774996388565, 72.58312617177263, 73.59091790256974, 76.99424665717015, 81.04142509372069, 85.79066251123942, 87.57675723491195, 87.25902841639193, 90.41324437462033, 96.329836879996, 101.5865117715135, 109.19398479604257, 113.51267834314368, 116.07063654656939, 118.69759300964871, 122.2090697185158, 130.41266963884033, 132.28950389657666, 129.0817594935919, 121.2096603612166, 123.81570644869082, 128.9601946061542, 132.05352900064784, 135.08064338940866, 135.9330797742661, 133.09694311162013, 129.88283612028238, 130.86985014234418, 135.71311229270268, 144.3821779592343, 156.9313002921453, 165.41425088357036, 168.90252348495028, 168.76329572820484, 168.6470927197762, 169.30300313641678, 169.92347658782538, 168.55929431125665, 166.2548229441689, 163.94465430248326, 162.82384831170117, 162.09684312014616, 160.76589217265897, 159.32414422985073])[2:], color="#007ba7",s=16,lw=1/4,label="N=6")
ax.scatter((1/50/6/(3*3))*tplot3[2:],1/((4/9)**(1/3)*(1+0.740*np.sqrt(1/7)))*np.array(n7)[2:], color="#56da52",s=16,lw=1/4,label="N=7")
ax.scatter((1/50/6/(3*3))*tplot3[2:-1],1/((4/9)**(1/3)*(1+0.740*np.sqrt(1/8)))*np.array(n8)[2:], color="#e84f17",s=16,lw=1/4,label="N=8")
print(tplot3[5:12])#(5/5)**(2/3)*
#ax.scatter(tplot3[5:24],(12/5)**(2/3)*np.array([0.40772321223057495,0.6813466660907519,0.8090396811471948,0.7759359997438083,0.7725960073960552, 0.811424013573892, 0.861913464350479,0.913612320223822, 0.962624288298033, 1.0101484808492316, 1.054109252229062, 1.0990522040687363, 1.1417200569169959,1.1815304187467106, 1.2185932153046908, 1.2485007093027445, 1.277991034206036, 1.3098532758152652, 1.3376968786972083]), color="#e84f17",s=16,lw=1/4,label="N=8")

ax.plot((1/50/6/(3*3))*tplot3[2:-66],1/((4/9)**(1/3)*(1+0.740*np.sqrt(1/5)))*np.array([2.3141517342556726, 13.355094472944778, 15.178371113131343, 22.343558901376078, 29.913688794737123, 36.10336809900009, 42.662122994241045, 49.87629102638336, 59.13295600948457, 68.91951242281769, 79.05164514885628, 89.96874520035593, 103.2419065263364, 113.67936036703311, 118.99388853357652, 134.26834405518065, 146.24842758874013, 169.53618665597978, 179.77371627717622, 170.27163307339592, 168.20618907256846, 163.9477603472039, 156.27516612233944, 159.13817753068207, 142.3679221115982, 123.13963931383766, 115.49370460919285, 112.53344688984434, 111.79690524214534, 112.24320253775869, 114.47238468467023, 116.98793113086722, 119.21211472862291, 120.78268320081376, 121.86299035452969, 122.59223646259699, 123.09488369330556, 123.44758413187809, 123.66073271647734, 123.80441809873257, 123.90451950905447, 123.96528275783629, 123.98305342035562, 123.9834629328864, 123.98375189644644, 123.95533168403043])[2:-25], color="#eda606",lw=1)
ax.plot((1/50/6/(3*3))*tplot3[2:-28],1/((4/9)**(1/3)*(1+0.740*np.sqrt(1/6)))*np.array([2.316055049032043, 2.316055049032043, 13.674939456297368, 16.954667426340215, 21.790036657037078, 26.794001791052924, 31.507084166826186, 35.99659335391318, 41.11775193738124, 46.58820209274906, 50.97828526146578, 57.04156511673117, 64.48461972227985, 69.98722539472502, 71.99992150889574, 69.95774996388565, 72.58312617177263, 73.59091790256974, 76.99424665717015, 81.04142509372069, 85.79066251123942, 87.57675723491195, 87.25902841639193, 90.41324437462033, 96.329836879996, 101.5865117715135, 109.19398479604257, 113.51267834314368, 116.07063654656939, 118.69759300964871, 122.2090697185158, 130.41266963884033, 132.28950389657666, 129.0817594935919, 121.2096603612166, 123.81570644869082, 128.9601946061542, 132.05352900064784, 135.08064338940866, 135.9330797742661, 133.09694311162013, 129.88283612028238, 130.86985014234418, 135.71311229270268, 144.3821779592343, 156.9313002921453, 165.41425088357036, 168.90252348495028, 168.76329572820484, 168.6470927197762, 169.30300313641678, 169.92347658782538, 168.55929431125665, 166.2548229441689, 163.94465430248326, 162.82384831170117, 162.09684312014616, 160.76589217265897, 159.32414422985073])[2:], color="#007ba7",lw=1)
ax.plot((1/50/6/(3*3))*tplot3[2:],1/((4/9)**(1/3)*(1+0.740*np.sqrt(1/7)))*np.array(n7)[2:], color="#56da52",lw=1)
ax.plot((1/50/6/(3*3))*tplot3[2:-1],1/((4/9)**(1/3)*(1+0.740*np.sqrt(1/8)))*np.array(n8)[2:], color="#e84f17",lw=1)

ax.set_xticks([1e1,5e1,1e2])
ax.get_xaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.set_xticklabels([r"$10$",r"$50$",r"$100$"])

ax.set_yticks([5e1,1e2])
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.set_yticklabels([r"$50$",r"$100$"])

ax.plot((1/50/6/(3*3))*tplot3[2:],(tplot3**(1/3)/np.exp(0.22))[2:],linestyle='--', dashes=(5, 1),label=r"$L\propto t^{1/3}$",color="k")
#ax.plot(tplot2[2:],(tplot2**(2/3)/np.exp(7.13))[2:],linestyle=':', dashes=(5, 1),label=r"$L\propto t^{2/3}$",color="k")
ax.plot((1/50/6/(3*3))*tplot3[2:],(tplot3**(3/3)/np.exp(7.15))[2:],label=r"$L\propto t$",color="k")
plt.ylim([15.,176])
plt.xlim([(1/50/6/(3*3))*1.8e4,(1/50/6/(3*3))*8.6e5])
#ax.set_ylim([12,40])
#ax.set_xticklabels(["0","1e4","1e5","1e6","1e7"])
ax.tick_params(which="both",direction='in')
plt.xlabel(r"$(tM/D^2)$")#^{\frac{1}{3}}$")
plt.ylabel(r"$L/a_0$")
ax.legend(frameon=False, loc='lower right',labelspacing=0.1,borderpad=0.1,borderaxespad=0.2,columnspacing=0.5,ncol=2)
plt.subplots_adjust(bottom=0.17,top=0.93, right=0.95,left=0.22)
plt.savefig("Llog.png", dpi=400, format='png')
plt.savefig("Llog.pdf", dpi=400, format='pdf')
fig, ax = plt.subplots(1, 1, figsize = (3.75, 2.5))

#ax.scatter(tplot[10:],(5/5)**(1/3)*np.array([28.062383378035747, -8.105343091164897, -12.5719227536552, 12.544441338161459, 10.949218342074591, 11.805235000734568, 12.99619832660561, 14.258218115205977, 15.623920907957906, 16.87046627787154, 18.037424225420313, 19.33037920676946, 20.612379394146163, 21.715559872687578, 22.72625021622159, 23.527989168085075, 24.497845289930822, 25.591374402899557, 26.685892321605557, 27.798064948987793, 28.744065416626324, 29.597374546374684, 30.387814739914557, 31.076029223251318, 31.970315521797556, 33.14628157287076, 34.335031534506086, 35.379265340400494, 36.55374769084913, 37.97493373286709, 39.00626948879742, 39.73170421253462, 40.47507469910928, 41.6420462766713])[10:],color="#eda606",s=10,edgecolors='#1c1c1c',lw=1/4)
#ax.scatter(tplot[10:],(6/5)**(1/3)*np.array([-8.89527223411792, -3.109367599990046, -3.1872964982172904, -3.9604954889371475, 89.1071912431351, 12.211831858249983, 11.772177862791994, 12.197087895025224, 12.816244688027297, 13.478033177498661, 14.194075792971782, 14.862277741161142, 15.570164478737906, 16.301573103014064, 17.081657931054828, 17.73148946332322, 18.408790078938708, 19.16040099913769, 19.90798645474466, 20.445066548515854, 20.870102773152627, 21.33854122800141, 21.798744741745608, 22.23333372705113, 22.650099689477617, 23.070208974295625, 23.504606980359206, 23.84704721858149, 24.2017976282291, 24.743387681087512, 25.36105068705189, 25.9145902586559, 26.530218765243973, 27.04447229810713])[10:], color="#007ba7",s=10,edgecolors='#1c1c1c',lw=1/4)
#ax.scatter(tplot[10:],(7/5)**(1/3)*np.array([-3.9278959362216304, -2.0481376631784123, -2.058096389270511, -2.0939053406094352, -2.311892911247413, -5.77909257728696, 18.420046202678236, 12.505751802001322, 12.096130336715358, 12.244890153313952, 12.522656081858875, 12.857982202955201, 13.257500554047603, 13.66223197057936, 14.049353656106575, 14.41913570183288, 14.796959750377825, 15.15930560060951, 15.506651418715057, 15.867658084090623, 16.20673987948529, 16.543366260685524, 16.86370967314655, 17.196017155371173, 17.484260107237798, 17.757825105257723, 18.017118341535028, 18.316106332604548, 18.587675569184775, 18.881184137236403, 19.178605435426412, 19.52625578339063, 19.896724060816265, 20.246842860546096])[10:], color="#56da52",s=10,edgecolors='#1c1c1c',lw=1/4)
#ax.scatter(tplot[10:],(8/5)**(1/3)*np.array([-2.601470083852361, -1.5928020924622668, -1.5952045298906143, -1.6013035243000795, -1.6178210341877888, -1.6818783298515319, -2.1754563599511703, -10.804499111676341, 16.72574721326115, 12.798228367821508, 12.324878334611734, 12.300695765557796, 12.401779941740985, 12.597060131185962, 12.833393836843378, 13.105960794528077, 13.381168140451807, 13.669823315203447, 13.939452290466964, 14.215854764660639, 14.508078632552133, 14.751230569053853, 15.001074493992148, 15.24851713276027, 15.481649912056687, 15.724995047942173, 15.954679770640869, 16.18685827753034, 16.413950138202424, 16.637894257315505, 16.857359055719886, 17.08913267112691, 17.29161338224301, 17.488808448330715])[10:], color="#e84f17",s=10,edgecolors='#1c1c1c',lw=1/4)
#ax.plot(tplot[10:],(5/5)**(1/3)*np.array([28.062383378035747, -8.105343091164897, -12.5719227536552, 12.544441338161459, 10.949218342074591, 11.805235000734568, 12.99619832660561, 14.258218115205977, 15.623920907957906, 16.87046627787154, 18.037424225420313, 19.33037920676946, 20.612379394146163, 21.715559872687578, 22.72625021622159, 23.527989168085075, 24.497845289930822, 25.591374402899557, 26.685892321605557, 27.798064948987793, 28.744065416626324, 29.597374546374684, 30.387814739914557, 31.076029223251318, 31.970315521797556, 33.14628157287076, 34.335031534506086, 35.379265340400494, 36.55374769084913, 37.97493373286709, 39.00626948879742, 39.73170421253462, 40.47507469910928, 41.6420462766713])[10:],label="N=5", color="#eda606",lw=1,zorder=-1)
#ax.plot(tplot[10:],(6/5)**(1/3)*np.array([-8.89527223411792, -3.109367599990046, -3.1872964982172904, -3.9604954889371475, 89.1071912431351, 12.211831858249983, 11.772177862791994, 12.197087895025224, 12.816244688027297, 13.478033177498661, 14.194075792971782, 14.862277741161142, 15.570164478737906, 16.301573103014064, 17.081657931054828, 17.73148946332322, 18.408790078938708, 19.16040099913769, 19.90798645474466, 20.445066548515854, 20.870102773152627, 21.33854122800141, 21.798744741745608, 22.23333372705113, 22.650099689477617, 23.070208974295625, 23.504606980359206, 23.84704721858149, 24.2017976282291, 24.743387681087512, 25.36105068705189, 25.9145902586559, 26.530218765243973, 27.04447229810713])[10:],label="N=6", color="#007ba7",lw=1,zorder=-1)
#ax.plot(tplot[10:],(7/5)**(1/3)*np.array([-3.9278959362216304, -2.0481376631784123, -2.058096389270511, -2.0939053406094352, -2.311892911247413, -5.77909257728696, 18.420046202678236, 12.505751802001322, 12.096130336715358, 12.244890153313952, 12.522656081858875, 12.857982202955201, 13.257500554047603, 13.66223197057936, 14.049353656106575, 14.41913570183288, 14.796959750377825, 15.15930560060951, 15.506651418715057, 15.867658084090623, 16.20673987948529, 16.543366260685524, 16.86370967314655, 17.196017155371173, 17.484260107237798, 17.757825105257723, 18.017118341535028, 18.316106332604548, 18.587675569184775, 18.881184137236403, 19.178605435426412, 19.52625578339063, 19.896724060816265, 20.246842860546096])[10:],label="N=7", color="#56da52",lw=1,zorder=-1)
#ax.plot(tplot[10:],(8/5)**(1/3)*np.array([-2.601470083852361, -1.5928020924622668, -1.5952045298906143, -1.6013035243000795, -1.6178210341877888, -1.6818783298515319, -2.1754563599511703, -10.804499111676341, 16.72574721326115, 12.798228367821508, 12.324878334611734, 12.300695765557796, 12.401779941740985, 12.597060131185962, 12.833393836843378, 13.105960794528077, 13.381168140451807, 13.669823315203447, 13.939452290466964, 14.215854764660639, 14.508078632552133, 14.751230569053853, 15.001074493992148, 15.24851713276027, 15.481649912056687, 15.724995047942173, 15.954679770640869, 16.18685827753034, 16.413950138202424, 16.637894257315505, 16.857359055719886, 17.08913267112691, 17.29161338224301, 17.488808448330715])[10:],label="N=8", color="#e84f17",lw=1,zorder=-1)
ax.scatter(tplot,[0.1153344438321198, 0.15829451358163515, 0.15878023838391597, 0.15765404644532335, 0.15871611443299607, 0.16339241266348759, 0.17026917008403214, 0.17185638513924428, 0.17220713244908128, 0.1675772648266023, 0.16759394153254306, 0.1697241360603769, 0.1701852787223737, 0.17067825480949383, 0.17515482798059337, 0.17822856858797928, 0.17963054344703253, 0.1794367685576461, 0.1803560571449828, 0.18067547974788772, 0.17997693366709022, 0.1787487227341399, 0.17833657596150285, 0.1786898310247327, 0.17889069147965952, 0.17908518047743854, 0.1798257531370271, 0.1802011250323993, 0.18082364294491368, 0.18118665237120668, 0.18112846869839436, 0.18154785137021331, 0.18247599337905562, 0.18292119268576273])
ax.set_ylim([12,40])
ax.tick_params(which="both",direction='in')
plt.xlabel(r"$Time$")#^{\frac{1}{3}}$")
plt.ylabel(r"$LN^{1/3}$")
ax.legend(frameon=False, loc='upper left',labelspacing=0.3,borderpad=0.1,borderaxespad=0.3)
plt.subplots_adjust(bottom=0.17,top=0.93, right=0.95,left=0.22)
plt.savefig("L.png", dpi=400, format='png')
plt.savefig("L.pdf", dpi=400, format='pdf')

print([VV[i] for i in range(len(VV))])
if times[7]==0:
    times[7]=tend
coalescencefrequency=np.zeros(7)
coalescencefrequency[0]=coalescebins[0]/(times[1]-times[0])
coalescencefrequency[1]=coalescebins[1]/(times[2]-times[1])
coalescencefrequency[2]=coalescebins[2]/(times[3]-times[2])
coalescencefrequency[3]=coalescebins[3]/(times[4]-times[3])
coalescencefrequency[4]=coalescebins[4]/(times[5]-times[4])
coalescencefrequency[5]=coalescebins[5]/(times[6]-times[5])
coalescencefrequency[6]=coalescebins[6]/(times[7]-times[6])
matplotlib.rc('axes',edgecolor='#1c1c1c')
print("coalescencefreq",coalescencefrequency)
#[0.00576923 0.00473684 0.00272727 0.0013     0.00175926 0.00054348 0.00057692]
#[0.00621622 0.0025     0.00142857 0.00101124 0.00034884 0.00015789 0.00026786]

#[0.0016,0.00082609,0.00059006,0.00035714,0.00018456,-0.,0.]
fig, ax = plt.subplots(1, 1, figsize = (3.75, 2.5))
ax.stairs(np.array([0.00445946,0.00169118,0.00109524,0.00089888,0.0002907,0.00010526,0.00017857])[1:],fill=False,color="#bf284c",zorder=-2,edgecolor="#bf284c")
ax.stairs(np.array([0.00576923,0.00473684,0.00272727,0.0013,0.00175926,0.00054348,0.00057692])[1:],fill=False,color="#29036e",zorder=-3,edgecolor="#29036e")
ax.stairs(np.array([0.0016,0.00082609,0.00059006,0.00035714,0.00018456,-0.,0.])[1:],fill=False,color="#eda606",zorder=-1,edgecolor="#eda606")
ax.stairs(np.array([8.25688073e-04,3.57142857e-04,2.90697674e-04,1.69491525e-04,1.17845118e-04,1.26353791e-04,5.20833333e-05])[1:],fill=False,color="#007ba7",zorder=0,edgecolor="#007ba7")

st6=np.array([8.25688073e-04,8.25688073e-04,3.57142857e-04,3.57142857e-04,2.90697674e-04,2.90697674e-04,1.69491525e-04,1.69491525e-04,1.17845118e-04,1.17845118e-04,1.26353791e-04,1.26353791e-04,5.20833333e-05,5.20833333e-05])[2:]
st5=np.array([0.0016,0.0016,0.00082609,0.00082609,0.00059006,0.00059006,0.00035714,0.00035714,0.00018456,0.00018456,6.04838710e-05,6.04838710e-05,3.66300366e-05,3.66300366e-05])[2:]
st4=np.array([0.00445946,0.00445946,0.00169118,0.00169118,0.00109524,0.00109524,0.00089888,0.00089888,0.0002907,0.0002907,0.00010526,0.00010526,0.00017857,0.00017857])[2:]
st3=np.array([0.00576923,0.00576923,0.00473684,0.00473684,0.00272727,0.00272727,0.0013,0.0013,0.00175926,0.00175926,0.00054348,0.00054348,0.00057692,0.00057692])[2:]

#ax.stairs(np.array([0.00421875,0.00224138,0.00103659,0.00145833,0.0003629,0.0001634,0.00013308])[1:],fill=False,color="#bf284c",zorder=-2,edgecolor="#bf284c")
#ax.stairs(np.array([0.00473684,0.00272727,0.0013,0.00175926,0.00054348,0.00057692,0.00032258])[1:],fill=False,color="#29036e",zorder=-3,edgecolor="#29036e")
#ax.stairs(np.array([0.00336735,0.0015,0.0008046,0.00069444,0.00052419,0.00028302,0.00028205])[1:],fill=False,color="#eda606",zorder=-1,edgecolor="#eda606")
#ax.stairs(np.array([1.41025641e-03,1.56716418e-03,6.54761905e-04,4.28571429e-04,4.16666667e-04,2.45398773e-04,9.80392157e-05])[1:],fill=False,color="#007ba7",zorder=0,edgecolor="#007ba7")

stx=np.array([0,1,1,2,2,3,3,4,4,5,5,6])

ax.fill_between(stx,st3,st4,zorder=-4,color="#29036e",alpha=0.5)
ax.fill_between(stx,st4,st5,zorder=-4,color="#bf284c",alpha=0.5)
ax.fill_between(stx,st5,st6,zorder=-4,color="#eda606",alpha=0.5)
ax.fill_between(stx,st6,0,zorder=-4,color="#007ba7",alpha=0.5)
#plt.plot((LX*LY)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6)/(LX*LY/10000),cumulostwald)
ax.legend(frameon=False, loc='upper right',labelspacing=0.3,borderpad=0.1,borderaxespad=0.3)
ax.tick_params(which="both",direction='in')
ax.set_xticks(np.arange(0, 7, 1))
ax.set_xticklabels(["350","400","450","500","550","600","650"],rotation=0)
plt.xlabel(r"$L$")
plt.ylabel(r"$Coalescence\enspace Frequency\enspace$")
plt.subplots_adjust(bottom=0.17,top=0.93, right=0.95,left=0.22)
for spine in ax.spines.values():
    spine.set_linestyle("--")
plt.savefig("coalescencefrequency.pdf", dpi=400, format='pdf')

plt.figure()
plt.plot((LX*LY)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6)/(LX*LY/10000),cumulcoalesce,label="Cumulative Coalescence")
plt.plot((LX*LY)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6)/(LX*LY/10000),cumulostwald,label="Cumulative Ostwaldt")
#plt.plot((LX*LY)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6),label="Cumulative Ostwaldt")
plt.legend()
plt.savefig("coalescence.png", dpi=200, format='png')
plt.savefig("coalescence.pdf", dpi=400, format='pdf')

plt.figure()
#plt.plot(xi0,label="xi0")
#plt.plot(xi1,label="xi1")
#plt.plot(xi2,label="xi2")
#plt.plot(xi3,label="xi3")
#plt.plot(xi4,label="xi4")
#plt.plot(xi5,label="xi5")
plt.plot(np.linspace(tstart,tend,(tend-tstart)//tinc+1)**(1/3),((LX*LY)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6))*3/3)
plt.legend()
plt.savefig("xi.png", dpi=200, format='png')
#print([((LX*LY)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6)[i]) for i in range((tend-tstart)//tinc+1)])
#print([((490*490)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6)[i]) for i in range((tend-tstart)//tinc+1)])
print("l",[((LX*LY*LZ)/(xi0+xi1+xi2+xi3+xi4+xi5+xi6+xi7)[i]) for i in range((tend-tstart)//tinc+1)])
#print([((LX*LY)/(xi0)+(LX*LY)/xi1+(LX*LY)/xi2+(LX*LY)/xi6)[i]*9/16 for i in range((tend-tstart)//tinc+1)])#(LX*LY)/xi3+(LX*LY)/xi4+(LX*LY)/xi5+

#6074.587256590144, 23260.86286894172, 29369.742837179147, 32399.25250795772, 33988.386906628606, 35748.9431731057, 36906.64868979183, 37740.63470749342, 38498.41071219652, 38853.32569265035, 39682.33875646981, 40544.78991325219, 41420.16667954798, 42116.67213634681, 42568.42246152808, 42829.52324566366, 43348.379655080425, 43849.04507190625, 44414.73829539873, 45023.22049182344, 45464.85122371241, 45959.71791176852, 46661.25675720203, 47293.13982047945, 48253.762442335465, 48755.56533364566, 49888.446159605315, 50191.04121603331, 50723.12438003479, 51037.396050912124, 51449.90390521678, 51668.904665658556, 51917.643094546656, 52376.598111976666, 52582.462698627365, 52685.61454729421, 52791.36453993028, 53058.415054141675, 53588.68138216394, 54326.90826887979, 54894.45095310762, 55393.66036497336, 55585.931426301424, 56098.47555982515, 56584.45720980133, 56709.522936155496, 56904.19787427389, 57587.683358162525, 57820.44969412738, 58612.63833901701, 58968.81194181852

fig, ax = plt.subplots(1, 1, figsize = (3.75, 2.5))
tplot=np.linspace(tstart,tend,(tend-tstart)//tinc+1)
tplot2=np.linspace(tstart+5000,tend,(tend-tstart)//tinc+1)
tplot2=np.linspace(0,200,201)
tplot4=np.linspace(0,800,41)
tplot3=np.linspace(0,250,251)
#plt.plot(tplot2**(2/3),(LX*LY)/xi0,label="xi0")
#plt.plot(tplot2**(2/3),(LX*LY)/xi1,label="xi1")
#plt.plot(tplot2**(2/3),(LX*LY)/xi2,label="xi2")
#plt.plot(tplot2**(2/3),(LX*LY)/xi3,label="xi3")
#plt.plot(tplot2**(2/3),(LX*LY)/xi4,label="xi4")
#plt.plot(tplot2**(2/3),(LX*LY)/xi5,label="xi5")
#plt.plot(tplot**(2/3),32.5*(tplot**(2/3)/5000)-0.5,label=r"$\propto(t+t0)^{2/3}$")
#ax.set_xscale("log")
#ax.set_yscale("log")
#plt.plot(tplot**(1/3),32.5*(tplot**(1/3)/115)-3.6,label=r"$\propto(t+t0)^{1/3}$")
#ax.plot((tplot2**(1/3))[:-20],(LX*LY)/(xi0+xi1+xi2+xi3+xi4+xi5)[:-20],label="N=6")

#ax.plot((tplot2)[1:],[534.2893976244453, 590.3165305160227, 585.1454859244817, 590.0546005675424, 712.1119547270408, 894.4407659525041, 991.4445857698485, 1045.0131518777412, 1084.4513997350946, 1117.5770064299415, 1147.049107065426, 1174.8980190547315, 1201.0716239457631, 1226.4409559579635, 1247.7682976435503, 1265.5481505692883, 1285.4564981239541, 1302.7347193719522, 1323.4369729138125, 1344.0281923095442, 1360.1366994788607, 1377.485809670384, 1399.29803007348, 1419.6807940482497, 1439.0677963410178, 1458.5988251011458, 1476.0719236312539, 1493.5935415236129, 1510.9051979730152, 1526.2280423342704, 1540.7027471066071, 1556.8044955798223, 1570.8107288703297, 1585.046526902111, 1598.1883878439435, 1610.5518698516205, 1624.0739701865798, 1637.9188394921093, 1650.3276216455351, 1662.1698434302032, 1674.6303860274895, 1685.9555663469675, 1695.7285826058069, 1708.0396422577476, 1719.2841155307517, 1730.7246248708873, 1741.931341796529, 1751.5267477579182, 1760.6743080375124, 1773.1395219929948, 1784.2345609062759, 1795.9998417323575, 1807.3559941125534, 1819.207040531732, 1828.1514424862137, 1837.2014422536915, 1846.7698985605534, 1857.7821775444538, 1869.6842896492362, 1881.6846940203345, 1891.3838666709723, 1899.729200784022, 1910.6232843215514, 1918.8187911273849, 1927.300695841823, 1935.1065776839778, 1942.7292397077586, 1949.8549464432556, 1956.4501226591087, 1963.2275004320586, 1970.9677073858293, 1980.988568223003, 1989.112448341307, 1996.7746707959386, 2005.2307703150045, 2015.4363451422994, 2024.927894860643, 2033.8623175439773, 2046.8525304334146, 2056.3592288387295, 2064.386076548184, 2071.812585939758, 2077.710697901067, 2083.3809049908673, 2089.441500356133, 2094.2942268023194, 2100.500410648567, 2106.1463756805806, 2111.7563428121093, 2117.035573521386, 2127.7521010396567, 2138.11732599446, 2146.98741506429, 2153.9603074074776, 2162.170344477232, 2171.350206453632, 2181.2978713626567, 2192.62898462335, 2201.062325148165, 2206.218993138578, 2211.6114979114177, 2216.7674985131043, 2220.8675819389073, 2225.455630513428, 2230.3584292417295, 2234.7699082191416, 2240.939064323723, 2246.9766958780738, 2253.1017020289282, 2259.7591164518594, 2266.139354113631, 2273.00193992344, 2279.8506006114244, 2287.8206354739154, 2297.3282057049937, 2308.3966372479804, 2317.3822262406375, 2323.9733154806345, 2331.1753005023625, 2335.9181643768998, 2340.30198200178, 2344.800754252675, 2349.829624893346, 2353.9105696855427, 2358.3163862213482, 2362.0413256332995, 2365.768857578371, 2370.9420055923174, 2375.278151921499, 2379.811584064165, 2385.9380738465393, 2391.91930550314, 2397.4474295168447, 2404.1394946502087, 2410.181365674805, 2416.2731657425916, 2421.3607534730454, 2426.4364964329757, 2434.3900996754896, 2443.2112742328386, 2450.2910926777868, 2455.794168529331, 2460.615083122494, 2467.641090933744, 2474.5236522370597, 2482.1819022774866, 2487.923326404451, 2492.8508556939373, 2497.664767465802, 2505.2715212434696, 2513.7130175950483, 2521.7069262871296, 2526.9817166072535, 2531.4968711042125, 2536.3541124638527, 2542.5382285012192, 2549.463879738228, 2557.5130982320916, 2565.3416313480393, 2572.3685514851636, 2577.541008337709, 2582.9245511356935, 2589.5113904649374, 2595.300947690522, 2603.8246789385603, 2609.3380819156123, 2616.573076665139, 2622.3747072258093, 2627.43916282554, 2631.768936459574, 2637.8419253907737, 2644.540560960525, 2651.2129030534356, 2656.3974077512294, 2659.8182068438605, 2662.491759669519, 2666.003340063296, 2669.187052481316, 2674.3473190840436, 2680.8824894500085, 2686.035204825535, 2690.1824004331315, 2693.5133175611945, 2697.654490884409, 2703.4019475366713, 2712.08907737774, 2717.4354663793006, 2722.9589309057164, 2728.098902389774, 2731.2887205826614, 2736.139500257758, 2740.9181626843765, 2745.1887300052767, 2748.851149936623, 2751.523253785487, 2753.5186779564415, 2756.4988878259865, 2759.880195641781, 2764.2694154444575, 2769.522640338656, 2774.509276602281][1:],label="N=7", color="#56da52",lw=1)
#ax.plot((tplot2)[1:],[465.2337385333284, 495.44673138275033, 500.4829011220834, 645.2433780045267, 832.4062454544483, 911.8907311762084, 959.9116415451605, 999.6079864909367, 1031.2865052752702, 1064.2718818469348, 1094.4053598736728, 1121.084328304906, 1148.8379495446034, 1173.992246618283, 1196.9109145637724, 1220.5270663509978, 1245.0495822082232, 1270.609143793295, 1287.9961598779435, 1308.281248855902, 1327.6113387092178, 1348.5943699508216, 1372.4893657498108, 1391.9150993294631, 1410.1199521566655, 1426.1441182309984, 1445.0398588930966, 1460.7029602425173, 1478.760109325488, 1497.7496482418123, 1512.1856209393875, 1524.5897655351616, 1538.081194515567, 1551.3816422776913, 1564.8701336458792, 1577.5940528006422, 1590.8798255279562, 1603.3585737040673, 1614.1318871320982, 1625.6290156208377, 1638.2662113276822, 1649.3280391449048, 1663.2734266665013, 1678.015819615661, 1691.9466775425096, 1704.1164982937078, 1720.3962834165932, 1734.306070198555, 1746.5436143156533, 1756.8715817430787, 1767.3541338182422, 1778.4462616576973, 1788.1393090133136, 1799.2474461319161, 1809.5464732068867, 1820.7539376812986, 1830.7583960753252, 1839.4376595102594, 1847.3506398618672, 1855.314183476405, 1865.037640782196, 1875.0158307976292, 1884.906619395246, 1895.4416609717057, 1903.3444597517846, 1915.1121124148544, 1925.4866135205732, 1933.9843014185326, 1942.9383705837008, 1951.4150263925599, 1958.683091377423, 1965.0740529304467, 1972.0026981078975, 1980.0735692717672, 1989.117490895844, 1998.4103862255777, 2006.7728856932727, 2013.286466347772, 2019.1120127046709, 2025.1678252572726, 2032.9408867068219, 2040.3219142420237, 2045.540231421263, 2049.5889232987747, 2053.321950224956, 2059.0415646673378, 2065.8471819576453, 2073.731205168939, 2082.073515965021, 2089.936336001531, 2098.3575118587246, 2107.3920999188517, 2114.7095540781925, 2121.0693256758154, 2128.8404601198863, 2137.177370862355, 2144.257977175816, 2154.7975398232943, 2166.4785686378914, 2176.531950114236, 2183.1195628256255, 2190.3793765631467, 2196.8460978534526, 2202.8510270777706, 2209.2176902151086, 2214.6123848850425, 2223.2492327012483, 2231.447881165515, 2237.5080654512058, 2243.937347738565, 2248.655794937189, 2255.3486146830883, 2262.1065148280127, 2269.4660418869116, 2278.221906374749, 2285.81683883901, 2292.0871473645543, 2297.4397718384753, 2307.50293666876, 2321.109365302458, 2330.2069325428956, 2337.539408918204, 2343.2044543734037, 2347.577326474137, 2351.8182372440083, 2355.2992098012105, 2361.8053140455195, 2369.063564610033, 2375.057021069549, 2382.174131319576, 2388.731597196662, 2393.418627258206, 2398.5470491488677, 2403.9375877068746, 2412.4346711901876, 2418.504175327321, 2424.7116247595636, 2430.82371996588, 2439.198505194939, 2447.3539352514144, 2453.461043815418, 2458.4136457950553, 2462.8512300077923, 2466.117441085649, 2469.7319016178885, 2474.1315542952207, 2483.098110082594, 2493.8073907221965, 2502.6551782948877, 2509.060009083543, 2515.4996428834133, 2522.436371767528, 2531.210982090578, 2536.344607405126, 2539.8200902119597, 2542.486478704509, 2544.8973943434153, 2547.941172243471, 2550.1535552163687, 2553.0958345754416, 2557.098885112474, 2560.2615809779118, 2564.765871084192, 2569.9350802129993, 2575.0265868724464, 2579.4869376343613, 2582.1269853533527, 2585.31710349082, 2590.497456193827, 2596.2584826425405, 2601.296704221243, 2604.8864202911873, 2607.4962148105965, 2610.0118311901797, 2612.824082000927, 2617.6806714026293, 2624.9196846987356, 2630.7828961280225, 2635.055342434022, 2640.339315318688, 2648.841614289788, 2655.894734786405, 2661.1746254877335, 2668.351165647462, 2672.9255652935913, 2676.284646477702, 2679.5527409237266, 2684.164137721446, 2690.2021111881127, 2697.6980126356834, 2703.655478529936, 2707.5904489331565, 2710.8373495467686, 2713.7785394750854, 2719.610973765852, 2723.569863658654, 2726.7595118256995, 2731.9934220251353, 2736.9976664406963, 2741.636398629788, 2744.6091266106087][1:],label="N=6", color="#007ba7",lw=1)
#ax.plot((tplot2)[1:],[405.40004807227774, 413.38637869768036, 537.2602537773473, 762.9373401906753, 849.1317846819253, 897.0368407778457, 933.139697045237, 967.066940867874, 997.2668832116881, 1034.5964387669042, 1067.48711228563, 1093.3118260645902, 1117.7665804252592, 1145.1914349767778, 1173.7531826664508, 1198.3306781498782, 1222.5414179876157, 1245.6292409270675, 1267.9384692404751, 1289.796830006092, 1316.6114940103205, 1344.143084348604, 1363.1845002883197, 1384.6137971118849, 1406.2647715796695, 1429.7448145817552, 1454.0460553345995, 1477.0413990863299, 1494.1013249813645, 1508.8617729602154, 1524.5582717359484, 1543.3151633233965, 1562.0583949278077, 1579.0400134524305, 1595.0822953486718, 1607.8500688771865, 1620.3907736207257, 1636.150261163637, 1649.516903097289, 1659.5653640824048, 1670.5100939180766, 1681.2327182332303, 1695.2635884168276, 1706.5055166761088, 1715.0516163997058, 1725.984324783906, 1738.0895353203787, 1750.222263618178, 1767.9064584922678, 1783.7777474219893, 1796.2308819161383, 1804.4468185245776, 1815.5022894604817, 1826.7366257530177, 1836.577958160567, 1850.00528019004, 1863.8938379057704, 1877.5661032227015, 1892.0564848077042, 1905.6210648012268, 1918.3437277221788, 1931.8475949282456, 1944.7896318930066, 1954.1112918784222, 1964.3214168861261, 1972.8499887329967, 1982.6025468795049, 1991.5186845851943, 2001.04604403923, 2010.316475229076, 2017.7163611191997, 2026.9462471305746, 2035.1059561572533, 2041.7627740493772, 2048.9387208834983, 2055.1263950906823, 2065.8201803770207, 2073.663227569023, 2081.9579229665433, 2089.7836023963405, 2097.428650156544, 2106.849378612686, 2116.977331465266, 2129.837590585036, 2136.9573775453455, 2143.2812572062417, 2149.3414876486886, 2154.686535996358, 2163.102444520707, 2169.649934989963, 2174.995607646907, 2178.614776553012, 2184.7109711506387, 2191.158422732409, 2196.7254531845783, 2201.127514481204, 2204.185877208721, 2207.0463429162774, 2212.8660553294885, 2218.4233072095067, 2225.26987197533, 2230.963498155021, 2238.1463322907357, 2245.6237298511646, 2253.074184212301, 2258.0230801653306, 2263.7479985296445, 2269.012802669528, 2274.9551204826294, 2281.1642141747693, 2288.9553788071385, 2294.052003106308, 2298.648315316724, 2304.844050556184, 2308.664139648133, 2312.9057276482627, 2316.878556739321, 2321.5725250327314, 2326.7504052237923, 2331.45600649096, 2334.5525028641605, 2340.5244540277863, 2352.8893322478516, 2362.545957203184, 2369.2080774691094, 2378.9736687171066, 2389.4688169760243, 2395.7493519862187, 2400.16186295367, 2404.758412445758, 2412.3812168774307, 2417.497545238805, 2421.6225721799087, 2424.7622844622233, 2427.290359757956, 2431.8434577753856, 2436.0693274083255, 2439.170997248326, 2442.0108515842126, 2444.5615503834165, 2446.63527853837, 2451.7884681170945, 2457.1294512917516, 2461.154235798773, 2465.392131046495, 2468.413809129833, 2476.635006173233, 2484.931840569276, 2491.883616584886, 2496.5066162631715, 2499.669073290784, 2503.01237682956, 2505.5645625419943, 2508.6213381123994, 2511.1180065956864, 2513.524275861297, 2516.6862567650032, 2518.76380641681, 2522.899389914985, 2526.2612025016438, 2529.7603321193915, 2533.2155151938755, 2535.636399206251, 2537.420065622275, 2538.9756510116877, 2541.4176872227517, 2544.4235532541634, 2547.4138925116185, 2552.016849228932, 2556.2969981654855, 2559.2860522272567, 2562.0272426883394, 2567.1239784718673, 2570.1751389044925, 2573.759728821436, 2577.190215667492, 2579.408297109906, 2580.963800992875, 2586.1586872521716, 2590.279266993621, 2594.775951382531, 2597.67853847071, 2600.852439784329, 2603.1843202135137, 2605.137844771043, 2606.8224258704995, 2608.4670423532843, 2610.7626603446406, 2616.325648044942, 2621.9035986684653, 2629.0865899903533, 2636.2141527812855, 2641.573377235707, 2645.1202817613444, 2647.660205202417, 2649.828232075359, 2651.642383993023, 2653.3767591557757, 2655.027351425602, 2656.4586601744454, 2657.651472107309][1:],label="N=5", color="#eda606",lw=1)
###ax.plot((tplot3**(1/3))[1:],[337.8528745554208, 344.4851291952236, 448.1110900370777, 635.7228861056792, 706.8934823495306, 746.4893655312144, 777.7443859102989, 807.3028058622294, 832.4466371427808, 863.0345861033564, 890.0691168317594, 911.4404560964641, 931.8181529765093, 954.599219152455, 979.5186317287476, 1000.74218635533, 1020.443267051354, 1039.3980553830852, 1057.9678289754072, 1076.1070329574566, 1098.9014885907095, 1122.656730529748, 1139.0536261866791, 1156.3293567738583, 1174.3129166547387, 1193.529927431458, 1213.3606251654608, 1231.6836583693664, 1245.3600661188382, 1257.2754704882532, 1270.4687713492833, 1285.510458046407, 1301.4035852039844, 1316.1580630054739, 1329.5346302819346, 1340.6830161596374, 1350.8802198113644, 1363.0652527305851, 1373.6127479369545, 1381.7970567513844, 1391.4428234187596, 1401.1313326629343, 1412.89956994204, 1422.6837582242315, 1429.9889828141352, 1439.1779830073895, 1449.3733515559443, 1459.3022697481156, 1473.061232826715, 1485.5961381695383, 1495.1643725102872, 1501.4318307334793, 1509.966394356931, 1518.395110253491, 1526.348369603676, 1536.9186293005123, 1548.370569117853, 1560.4850884297418, 1572.5683353123386, 1584.0869095581488, 1594.7141889285035, 1605.137323265849, 1616.1200535658336, 1624.0639220040177, 1632.1391615390003, 1638.5413614602837, 1647.0176748886242, 1655.013817532439, 1662.9015805165147, 1670.4465709928786, 1676.5117543843785, 1684.2203145792353, 1690.645237100474, 1695.8019068088436, 1701.3771463321, 1706.5150159591676, 1716.6729123744942, 1723.4165315414464, 1730.5576125190864, 1737.211187291351, 1743.4751640303957, 1752.026898709271, 1761.280853764262, 1772.5503296521497, 1778.629019545014, 1783.7365136129547, 1788.297859111493, 1792.370320232502, 1798.6886694107197, 1803.7877058454728, 1808.6070100372642, 1811.7186350248037, 1817.7801908757447, 1824.140669607765, 1829.1039381952523, 1832.9585102123176, 1835.614515935047, 1838.354663393692, 1844.0014454410034, 1848.2424078203474, 1853.1205615856231, 1857.0769072175951, 1863.1528675259624, 1869.4228327709486, 1875.5545913345134, 1879.5443237020877, 1883.8264693525264, 1887.647356405883, 1891.7031519717225, 1895.9779647943378, 1902.1496842893198, 1906.5386204467468, 1910.2910842883643, 1916.3283451734806, 1920.2665942729934, 1924.0574273640534, 1927.4054619175188, 1931.264506611031, 1935.443403729955, 1939.1927442120345, 1941.8020880580589, 1947.1622808318925, 1956.6117499608522, 1963.6283960360277, 1968.3112272587362, 1977.0084377569556, 1986.5328199007708, 1991.7898755199496, 1995.3654613447493, 1999.028255275336, 2005.8593868181322, 2010.0691926348545, 2013.2763115348337, 2015.756673866215, 2017.786790972735, 2021.22485588839, 2024.5645382795358, 2027.2784079137825, 2030.4872799834168, 2033.2006518887886, 2035.126714783829, 2039.5871974987817, 2044.3017953178044, 2047.6122508334247, 2050.9461401071176, 2053.7324996907137, 2061.522555920276, 2068.317381545011, 2073.551816933972, 2076.9191573721077, 2079.147554304598, 2081.582795595026, 2083.641005745363, 2086.1115678249507, 2088.140739471612, 2090.402663515249, 2093.66034678838, 2095.4839548473983, 2098.5694619434757, 2101.025367361242, 2103.5244547924417, 2106.096503501107, 2107.9734269870596, 2109.3643894953266, 2110.6178578380573, 2112.498312963257, 2114.758211431164, 2117.1563252932133, 2121.464302415672, 2124.774852488222, 2127.0894248389473, 2129.0973850514806, 2132.8840255822365, 2135.079724370362, 2137.569419852246, 2140.144204421945, 2141.9037588734136, 2143.249142287401, 2147.2139596346997, 2150.559897783281, 2154.9182616816843, 2157.328915065213, 2159.776549153857, 2161.671370470053, 2163.222371563247, 2164.5129327969435, 2165.748255877525, 2167.4373151036443, 2171.541386808436, 2175.8683732884215, 2181.4852811324918, 2187.550349733146, 2192.0701962006915, 2194.7727364997018, 2196.6895681433766, 2198.364475938554, 2199.8628366965568, 2201.373784350306, 2202.7655810395927, 2203.962262980812, 2204.910019286339, 2206.108193252876, 2208.177379519825, 2211.5722847060683, 2214.581377084794, 2218.528414232787, 2221.2343667898326, 2224.196060161942, 2227.3348596733713, 2229.7103119472063, 2231.609498473706, 2233.117247672917, 2234.5949755872794, 2236.065896704248, 2237.310599670053, 2238.412864462797, 2239.429900469515, 2240.4477425829336, 2242.6258884493377, 2245.967148158124, 2248.365674642526, 2250.023898239697, 2251.4277713899746, 2257.4436208140414, 2262.1903426042463, 2265.1374684039197, 2267.0766467378285, 2268.564523568913, 2269.8449159516244, 2271.0315179266627, 2272.117472797082, 2273.0955311485836, 2276.2451477482778, 2279.697822909146, 2284.668358532166, 2287.626357305304, 2289.8036783382545, 2291.479526062733, 2293.1515807322403, 2295.504782903494, 2298.7212525681334, 2307.0914860709054, 2317.2511589673722, 2324.2438393499783, 2328.3817685906824, 2332.4131715362546, 2341.288938841706, 2352.5290160012532, 2362.620858344396, 2368.4139320534546, 2372.6696738015166][1:],label="N=5", color="#eda606",lw=1)
#ax.plot((tplot2)[1:],[359.11053369656724, 380.6746928524581, 662.3808072681408, 768.0121034089252, 832.2581823142299, 889.093893902244, 935.0039659370221, 971.4909133470977, 1016.630945971961, 1062.0516360613556, 1099.773783947157, 1141.9351515102726, 1174.2859838823622, 1203.4321174322943, 1231.2172610563903, 1258.6832322161188, 1286.4080199516814, 1310.5554441770655, 1326.743230449358, 1345.5554062735678, 1363.39289404154, 1376.6966928704187, 1392.8258691379815, 1409.423065557228, 1427.6485248264557, 1450.7544334175068, 1468.9380703422585, 1486.5445633457325, 1504.3968683161206, 1516.7389705583332, 1536.401754265435, 1552.2182289240704, 1570.3079962168958, 1585.05100535213, 1604.121870736563, 1625.1249855846042, 1644.2472056226547, 1661.045437577574, 1676.2932764778852, 1693.8315339583542, 1709.3199409431404, 1723.6975686840572, 1738.733979589293, 1755.6848432651934, 1771.544064805567, 1784.708017781712, 1792.2871245048307, 1802.1857921988706, 1817.819997169964, 1839.25468789476, 1854.4914490930796, 1871.7294090584228, 1881.6823147925795, 1889.8167102342925, 1900.2980325140222, 1911.5126547547873, 1922.105624717736, 1934.1179932693785, 1950.7725012126875, 1964.0845789290995, 1976.69983915955, 1989.0673034478662, 1999.0361667165814, 2005.588230626698, 2021.9943301625228, 2035.4901473558787, 2044.131577563203, 2049.9987650890757, 2057.65581341256, 2063.952327538693, 2070.308155916012, 2074.6071420198164, 2080.7597946821907, 2091.329046513095, 2102.485192513477, 2117.100595522327, 2128.737720531832, 2134.226686308679, 2141.876480058034, 2152.250938839898, 2161.0948180656706, 2169.811241311065, 2176.725639953194, 2182.936521906371, 2189.977553341773, 2194.5555897438007, 2199.499149578834, 2205.642075996435, 2210.790239627168, 2214.8732183848015, 2219.607184930349, 2223.1899251965324, 2225.817134085144, 2229.6930869754697, 2232.709088885315, 2242.127641061245, 2249.284365068699, 2253.6263475535097, 2257.818266597061, 2261.191825536122, 2263.725397232785, 2268.992513863183, 2279.760378684005, 2287.685173576266, 2292.8757770038555, 2297.3049068143628, 2302.4632424278066, 2305.767164290797, 2309.9673145784814, 2315.093462453983, 2321.500113719133, 2327.69756643829, 2331.3599561472347, 2335.9786563030016, 2338.8475306447403, 2343.1198836766557, 2348.0163263724676, 2363.773596438262, 2375.617520588686, 2384.4453676119642, 2389.319629483984, 2394.621076682891, 2399.796133042521, 2409.0737730231895, 2422.7586749292254, 2431.6865262458105, 2441.7851524861103, 2456.9379595077503, 2467.8315537175304, 2473.8914124865387, 2483.2232068117323, 2494.9044452542053, 2503.125536481197, 2508.2752595334227, 2511.2184843976133, 2513.9123142633584, 2517.958757428888, 2520.9943381456, 2525.14497865706, 2529.648625361402, 2538.2292193742505, 2545.514849007913, 2550.456263117637, 2554.0214757859253, 2556.8734396176883, 2559.612744948184, 2563.9902789549374, 2568.4751785451726, 2572.7830087742595, 2580.772604162629, 2585.0987861117883, 2590.804455165229, 2595.5317224912396, 2601.230721548402, 2607.3266770430655, 2613.495255793769, 2620.6820062998077, 2626.0919068029352, 2629.8841191408815, 2632.78860905565, 2640.0210626120656, 2647.97097625154, 2655.4834350179867, 2659.639596914493, 2662.801803570657, 2667.549064655174, 2670.2299087155516, 2674.859186186968, 2679.5940203758905, 2685.552627269892, 2691.919413696248, 2694.724156616405, 2696.8467582613553, 2699.359742777391, 2701.908165738288, 2706.625416719503, 2709.94076631667, 2712.1898880113936, 2714.1622492595448, 2715.9438467594186, 2717.4700705566574, 2727.541497302872, 2733.287329383452, 2736.6456702334845, 2742.2242146807716, 2750.5940602905885, 2759.0715557342396, 2766.008132658082, 2770.21835582348, 2773.5152730501363, 2775.869671134179, 2777.5483196309483, 2779.2584677108844, 2780.515352954133, 2781.758585636699, 2788.1807266258566, 2797.578222984859, 2814.286406335939, 2824.6247681449686, 2831.0827421718623, 2835.323135917791][1:],label="N=4", color="#bf284c",lw=1)
#ax.plot((tplot2)[1:],[337.58413241089363, 501.58480310030995, 734.4422319933294, 864.3117399603462, 969.6283326247528, 1066.9354830583582, 1148.7940214761463, 1221.4176922626095, 1271.8751677103153, 1316.3452962487092, 1366.1211172685005, 1410.631485862303, 1452.6105975147696, 1489.5171893225704, 1529.7595813923451, 1567.4326983665778, 1595.1051177153615, 1616.4894792704165, 1641.5374021556459, 1673.306868497996, 1699.9154460442298, 1714.529540050819, 1726.386853974506, 1737.4911216138291, 1756.1484770543932, 1774.0448852529046, 1800.1692223031107, 1816.5172222692152, 1829.03685536297, 1841.5663028909942, 1857.824187713738, 1890.03764824792, 1917.1988889998852, 1929.010110173664, 1946.7144128974567, 1965.2517382867818, 1986.0706748491657, 2003.523401395999, 2011.559175004397, 2021.8613500108315, 2030.9712143523316, 2047.4908016277577, 2061.2830761166706, 2074.2911653004758, 2086.261104971294, 2096.6533646978182, 2107.091700028247, 2116.877850834166, 2125.6982356849544, 2130.959673902776, 2137.3068451261734, 2143.778448408747, 2155.997701837172, 2171.9384937913924, 2187.5062512457675, 2205.0546117929716, 2216.6300687090175, 2224.905979845556, 2240.321632418496, 2250.583396461429, 2257.5189446501363, 2264.1203888397617, 2276.2446695357253, 2294.9658726169478, 2316.0070009889437, 2332.440460157678, 2340.89613371217, 2354.982566938815, 2361.9542607276903, 2374.33999636358, 2382.1057442612264, 2387.1025489655967, 2390.3254692894566, 2392.9783583919166, 2394.9642625956476, 2396.83911448376, 2403.3085798985862, 2408.7747160380854, 2413.0006904245133, 2419.4451649553985, 2426.00710001232, 2430.284531679873, 2433.1604898345518, 2435.6922436511636, 2437.6821610615216, 2439.3795345024005, 2440.9901955410287, 2442.484877180477, 2443.6387983380405, 2444.7985952684676, 2450.3913458152456, 2456.212897129224, 2460.463968167559, 2463.274440748982, 2465.123407643664, 2472.2870682007665, 2478.8938671376327, 2486.710510318399, 2492.3514786070573, 2495.7457773197657, 2498.1889254987695, 2500.0044901741658, 2501.649323864079, 2503.230188681922, 2504.604261331906, 2505.799893665108, 2506.844650342944, 2507.6008142646883, 2519.079432264751, 2536.616308380843, 2551.554478461688, 2559.3054657470193, 2577.0796358531634, 2588.2678405958495, 2594.536002480914, 2598.354634394196, 2601.0093662392064, 2602.404151866357, 2607.6575399543144, 2614.578065807075, 2622.4023262806995, 2628.740589864319, 2631.916294636262, 2634.035076199578, 2635.527810922549, 2635.586735293991, 2649.3405159645886, 2659.505665084396, 2674.11983130937, 2681.6137093503617, 2685.9697522384413, 2688.5362076211377, 2690.6133528268874, 2698.6818176611505, 2706.2336110959495, 2715.6534505110826, 2722.2953481471286, 2733.5179199596078, 2742.3750619052616, 2748.378029939666, 2754.2000580547146, 2762.2944221688126, 2766.0943458256047, 2768.553792866161, 2770.3371634121995, 2772.0432135278174, 2773.5447734828704, 2774.9515093398504, 2776.3092936718253, 2777.6241262953727, 2778.9938879377737, 2780.3966200676073, 2781.7899172668194, 2783.1188279948083, 2784.305744160311, 2784.8965038637716, 2794.814797618475, 2803.3584812759377, 2808.9700725802686, 2812.826526622496, 2815.8540301861544, 2818.0864391666187, 2819.9097903514066, 2821.7120618557965, 2823.324215194816, 2824.7520198839456, 2825.664358793131, 2834.2845485288867, 2842.1757123729762, 2847.6554334454067, 2851.590903780433, 2854.5545202126673, 2857.0381251138247, 2859.237625876273, 2860.9801731632683, 2862.6334969724476, 2864.2280479948545, 2865.7323085527123, 2867.0175637640755, 2867.8911889525857, 2875.3963642767385, 2888.4516146130204, 2897.7420921496837, 2902.8262383460506, 2906.10463760586, 2908.6436465245883, 2910.933768321068, 2912.824126349759, 2914.697525748491, 2916.3950313269415, 2917.585225343534, 2928.256420123754, 2942.103538184309, 2951.3490889005707, 2956.0417946053158, 2959.190498946777, 2964.879200753107, 2975.348336337008, 2994.9967059615055, 3005.9888379582408, 3013.7363652465624][1:],label="N=3", color="#29036e",lw=1)

#ax.plot((tplot4)[1:]**(1/3),[337.58413241089363, 1186.6861725591764, 1528.4495645465615, 1749.5775731345414, 1846.0187766365993, 1904.0569274100292, 1951.548566152435, 1988.3396922376091, 2053.4675641423873, 2125.727558963366, 2145.787751109425, 2195.850767141649, 2220.3125696982124, 2251.6346462188326, 2315.7312636493684, 2377.0161248611607, 2440.9497876619134, 2448.253945620124, 2485.563796114262, 2521.0470999971712, 2546.654234827897, 2587.4490117339997, 2626.0327966728764, 2661.9791127838225, 2674.713765257771, 2698.59074783763, 2726.5729736737317, 2760.2180737076656, 2769.3055697567834, 2795.2359293900554, 2821.4160835046955, 2826.1340079281053, 2893.0049232167044, 2932.7194769113644, 3032.311258198716, 3053.5184147342575, 3059.810051635492, 3065.477986144705, 3100.28012763118, 3112.8436046831594, 3120.2020557338747, 3126.951723429081, 3134.0783299763452, 3141.333081987712, 3147.508091794456, 3215.0172837209775, 3273.3704682486277, 3331.582841123167, 3363.5192423510534, 3401.336233105025, 3485.0706527066923, 3519.08214140231, 3524.974975213714, 3529.824054991709, 3534.3968545001794, 3539.1655519239857, 3544.001588631284, 3548.9647935820103, 3553.736657864625, 3604.909819664862, 3643.572857123821, 3765.2105471890554, 3775.631550879394, 3779.958789615428, 3783.9715191797795, 3787.848594894696, 3791.8153321139685, 3796.072059731985, 3800.265020500565, 3804.881116629587, 3809.4681192310118, 3814.0312487278793, 3818.8580976785697, 3823.7982170448095, 3829.1610373704916, 3834.79958382697, 3840.427857719125, 3846.3185700548547, 3852.7852806392393, 3859.104311259377, 3910.2894437134214, 3973.61924722785, 4029.620072018697, 4056.8192868956867, 4084.008289052566, 4151.487954753563, 4165.24309787055, 4223.102067442707, 4255.3344345214855, 4261.934075079219, 4265.603976676663, 4269.269920899019, 4272.719506225049, 4276.297550188778, 4280.041576084476, 4283.743492916506, 4287.388027541819, 4291.384530512519, 4295.544090265671, 4299.784253442567, 4303.996176841742][1:],label="N=3", color="#56da52",lw=1)
#ax.plot((tplot4)[1:]**(1/3),[359.11053369656724, 922.6892485761996, 1142.8388823632315, 1277.652554887098, 1423.637063295447, 1539.5066334850212, 1621.0734689333856, 1682.2726521966924, 1762.0295710604596, 1816.3647650957525, 1883.649990503168, 1967.571561124883, 2022.4027215742744, 2096.670770112037, 2141.604991194814, 2201.8621273273416, 2261.7176110746723, 2337.146531806876, 2388.8301294328185, 2418.440149211, 2449.2658029070985, 2481.3681563164305, 2512.3819799001085, 2530.595530844123, 2545.988811221516, 2583.2537596923953, 2598.5354252950347, 2614.2321593838706, 2634.7630939275064, 2673.3445284902955, 2720.0375287270062, 2764.5908934214203, 2798.462569127637, 2817.577151248153, 2836.84809305943, 2865.3532023854, 2874.5224139001516, 2898.8707616611327, 2917.9914958011627, 2944.5139359340246, 3002.535765698643, 3031.5120781489823, 3037.6963385314093, 3047.360520649459, 3054.4352767326677, 3062.680483708155, 3082.246884436837, 3088.9670533222575, 3094.479542308307, 3101.9922104416446, 3128.2464080066225, 3141.326824578551, 3166.6652836308253, 3171.4737963104717, 3175.616290817179, 3184.5514319347535, 3187.556751189449, 3193.851559972461, 3197.338610507812, 3200.0810245897833, 3214.1515613606634, 3226.3753297259454, 3235.9032255662655, 3240.7325742077915, 3243.6967651325936, 3246.7048548592734, 3249.6338456640497, 3252.7422189380713, 3255.8203763277183, 3273.198949260113, 3285.5288881876477, 3310.986625534829, 3329.0728818470457, 3354.0334404429777, 3359.3916267856903, 3402.5631222025863, 3409.3230903527065, 3416.9807564321086, 3428.2414039542973, 3432.586740955137, 3456.549448084379, 3462.214904320003, 3466.20951493671, 3474.1982973044624, 3482.177535079249, 3485.7815192343905, 3503.9298119907808, 3539.519143239472, 3544.5682894285064, 3547.7992395736223, 3553.1972625566414, 3558.493090688325, 3561.7845839431075, 3564.8565678464893, 3567.9417760502165, 3571.159500715608, 3574.435672766138, 3577.848114553991, 3581.3454523841406, 3603.7333234909747, 3632.4419450300434][1:],label="N=4", color="#007ba7",lw=1)
#ax.plot((tplot4)[1:]**(1/3),[405.40004807227774, 902.7276605730586, 1082.5974975844483, 1221.7605010851432, 1339.1699503878078, 1443.566882790525, 1537.973864080204, 1610.237288642792, 1690.614615771139, 1759.6132904798358, 1816.664837730838, 1869.7834510084592, 1907.8424883171326, 1945.0041466908726, 1991.8765267654417, 2028.1145413811369, 2057.3513501648463, 2094.0795020342684, 2123.8687776594966, 2152.9475476814896, 2195.8963314681687, 2239.764139165281, 2264.9057814553844, 2278.4954483832344, 2310.6453914846256, 2327.0671307715406, 2341.102870389711, 2363.9259779887957, 2386.835906881167, 2407.8236776720987, 2435.26293281112, 2448.820182910981, 2465.9263451472802, 2497.6572067704774, 2524.529987159068, 2576.626212761797, 2601.012931477312, 2623.0564031276795, 2641.011474066382, 2653.090642791316, 2676.0310151313756, 2701.404844123769, 2717.3036877136597, 2737.0497200515006, 2747.2277397963203, 2764.6867724870326, 2797.6203379053563, 2822.34014304275, 2852.9644232572355, 2874.423393506762, 2886.664317704812, 2910.5839454816314, 2944.4901693891475, 2958.487514258105, 2990.851530414995, 3010.710584928933, 3019.960781114197, 3031.2364140727273, 3040.0276185464063, 3067.7976750078737, 3080.773642540688, 3099.3232220842165, 3114.2116290730437, 3122.833680723268, 3128.894619098622, 3137.057670341527, 3145.327378784842, 3157.959755527112, 3182.049132487894, 3256.5179147811436, 3284.4830366225615, 3306.3627425121717, 3321.3080430353584, 3332.192285370556, 3339.1026850885023, 3350.8106123965963, 3368.2244227421297, 3376.302061943823, 3401.162070314061, 3418.9994642913816, 3430.0674421633794, 3441.11461975183, 3485.4906290970903, 3507.249719912497, 3537.0781554627447, 3549.737287923781, 3558.023896964484, 3568.872833779688, 3592.287784899966, 3616.157598648297, 3623.4265626161127, 3629.631981071002, 3647.8540928933803, 3666.637013177113, 3680.777438956606, 3692.7381392506213, 3697.1574395877283, 3701.0465420970736, 3704.401440312438, 3723.455693770889, 3735.2703900544457][1:],label="N=5", color="#eda606",lw=1)
#ax.plot((tplot4)[1:]**(1/3),[465.2337385333284, 906.02724206967, 1102.0732269805972, 1236.0581818693609, 1346.8310735122577, 1437.6291153843727, 1513.9562510525511, 1582.122010507925, 1648.5669033522083, 1709.3752846257632, 1762.558444411869, 1810.8116330300531, 1851.8646004384975, 1901.0457077698109, 1951.9506327062115, 1999.8109208360784, 2045.0595997835371, 2081.625221970942, 2125.2242170283853, 2162.572624636211, 2201.917855585015, 2223.885143407287, 2241.889227722702, 2261.157833810619, 2295.2783048177157, 2323.8147346494306, 2352.5750763029155, 2379.360926770795, 2410.203126750051, 2442.1521509306767, 2471.420560668247, 2493.942396610337, 2529.703403122097, 2571.9678170078437, 2610.1784017622113, 2640.598583123152, 2653.6413486138467, 2678.413018509441, 2697.1873803570097, 2710.941132041026, 2728.8054341261955, 2758.7484310935197, 2786.468801951297, 2818.101594980961, 2858.2896204765475, 2884.3870654022126, 2911.0595954326586, 2923.8702962613584, 2936.7838527850363, 2955.758334182694, 2979.040255539629, 2997.9657099373735, 3015.411022238883, 3030.186695793527, 3038.4163583116024, 3069.4197783701043, 3080.2976314048437, 3105.6578562730633, 3127.236239354272, 3143.8303284564836, 3154.204231272923, 3160.859029384091, 3171.1202005229884, 3193.3831042072757, 3208.794370853756, 3225.5167419650825, 3234.0266375329757, 3249.6072286302983, 3272.15320908989, 3286.367815761532, 3300.1259668331486, 3311.5983878393067, 3322.496441121768, 3336.0128362776545, 3343.6827396135523, 3362.2047297963077, 3386.4805693836397, 3406.465061341468, 3420.4313646647624, 3428.4472784820277, 3438.120205689715, 3454.8504153248814, 3460.471396739403, 3464.8945869163454, 3474.1141034311536, 3479.8615928297772, 3487.4688534389447, 3491.6009272968204, 3511.3192213827015, 3520.8522796241714, 3532.4074601244547, 3541.9201809297824, 3554.619783369831, 3560.09857024358, 3571.4956174928175, 3578.1522977294876, 3584.896246374882, 3588.447264452714, 3591.3984349585653, 3594.281801661848, 3598.9263562090246][1:],label="N=6", color="#bf284c",lw=1)
#ax.plot((tplot4)[1:-17]**(1/3),[534.2893976244453, 861.9575808761343, 1139.5188381649118, 1264.8123244171668, 1365.3890734778083, 1456.7400444720158, 1531.1032564158195, 1603.5690194723304, 1669.8148225004902, 1718.7001838636033, 1762.196066241713, 1805.2768068132675, 1848.6117424763172, 1904.2206519534275][1:],label="N=7", color="#29036e",lw=1)

#ax.plot((tplot4)[1:]**(1/3),[674.9539628753349, 3011.8496459200423, 3649.7070046628487, 3936.847992844641, 4112.722602876297, 4273.7439793989415, 4423.952377853376, 4594.880584445827, 4749.38054750221, 4867.04119484635, 5042.883172501103, 5162.268825169996, 5265.676939895689, 5380.706116511117, 5477.212708938991, 5520.403053711123, 5646.096777883659, 5754.578186434075, 5844.525587738441, 5916.609414597386, 6017.882907865301, 6131.107516173767, 6233.7702225460625, 6297.10364486947, 6369.497124821112, 6501.1373905123555, 6591.593462005152, 6797.025858654876, 6877.359775680371, 6969.280868938477, 7013.047938613586, 7124.5875298593055, 7190.941617155891, 7253.475678011007, 7272.752198824792, 7361.151238067384, 7422.075717968725, 7445.055150188139, 7489.6381378028955, 7571.46698665027, 7675.696168120057][1:],label="N=3", color="#56da52",lw=1)
#ax.plot((tplot4)[1:-7]**(1/3),[718.3631134937551, 2295.7892005149956, 2864.917898180613, 3253.5795624097755, 3529.6557966716146, 3755.4956438799627, 4019.6144510354684, 4209.1386102010065, 4417.352255048715, 4566.471998156113, 4676.539159475182, 4758.240560520063, 4854.618790943711, 4976.35851106358, 5072.273741129766, 5193.527073662151, 5315.3233912587, 5402.530707790466, 5481.8457362275685, 5590.5909243062815, 5682.373883678182, 5755.466378709406, 5851.502960368259, 5941.675274606872, 6020.562921806275, 6111.6233902684635, 6175.383125458419, 6235.973688908484, 6275.098988302932, 6335.796723564818, 6399.778963888306, 6505.03248858628, 6563.922020147627, 6616.519368057715][1:],label="N=4", color="#007ba7",lw=1)
#ax.plot((tplot4)[1:]**(1/3),[810.9644136482846, 2168.503877284122, 2718.5365611549505, 3090.8050654470094, 3371.5589728468626, 3606.485811268927, 3812.000811758635, 4011.714659647549, 4165.713731844287, 4302.428117190627, 4406.453580289636, 4508.480738908732, 4602.432767329685, 4717.504459599985, 4809.088516578271, 4896.806424422171, 4988.248369999253, 5097.237096619679, 5194.392336484033, 5297.423207772893, 5407.5781797333475, 5503.246689452704, 5589.241500621328, 5672.903532306062, 5763.656399446039, 5845.093824279983, 5930.911100391984, 6009.781665296665][1:],label="N=5", color="#eda606",lw=1)
#ax.plot((tplot4)[1:-20]**(1/3),[930.4301722772692, 2199.7535641412596, 2678.113651880188, 3043.05149688263, 3312.930083221276, 3542.8556054858777, 3732.8863801681987, 3913.3556937678077, 4084.4762501578516, 4235.607139876712, 4356.49982065143, 4491.014429941823, 4588.582529424702, 4700.443007108417, 4819.400674728293, 4948.055335797649, 5062.302890108144, 5157.844787289949, 5253.349132850962, 5321.769716269214, 5406.050913541791][1:],label="N=6", color="#bf284c",lw=1)

#tplot4=np.linspace(0,700,36)
#ax.plot((tplot4)[1:]**(1/3),[674.9539628753349, 3277.870803023319, 3814.5527258352686, 4293.438360877208, 4737.575243324492, 5101.094584192948, 5352.944099089675, 5497.636244745078, 5620.114154704332, 5833.964013849509, 5999.201045083858, 6173.2665852289265, 6361.687558455933, 6553.314164390081, 6714.463518121011, 6833.5432857915075, 6966.319592813638, 7080.705357917852, 7166.404309987634, 7294.982216291692, 7329.795973000914, 7475.990222340601, 7729.8697010834385, 7950.76355299285, 8075.720631360653, 8196.885023364715, 8224.188805421927, 8267.322378773308, 8350.484884749278, 8393.265717297583, 8467.76940202725, 8512.249749888151, 8586.112879378801, 8612.666847777426, 8634.614714892756, 8691.006088062446][1:],label="N=3", color="#56da52",lw=1)
#ax.plot((tplot4)[1:-6]**(1/3),[718.3631134937551, 2734.791709719403, 3381.219135030796, 3803.2248066438174, 4178.859451519958, 4561.644964563649, 4860.657032949433, 5130.387439947549, 5351.336044095291, 5530.301893622142, 5694.4759376862685, 5829.032793418165, 5937.651066016978, 6071.331995510136, 6223.598631209233, 6332.9295380040185, 6423.058645463108, 6521.705160403791, 6636.306134588617, 6745.359844848327, 6858.544661767206, 6973.994134723412, 7044.148931291963, 7127.140972504212, 7256.842974413694, 7372.87704428096, 7466.386949439357, 7575.112758162209, 7681.481350041487, 7811.336583529956][1:],label="N=4", color="#007ba7",lw=1)
#ax.plot((tplot4)[1:-14]**(1/3),[810.9644136482846, 2655.3238179569003, 3308.1289618520887, 3753.2568554114773, 4087.2346427126818, 4382.888337801356, 4634.92709887916, 4856.186708216751, 5045.635272282992, 5215.541474327125, 5380.272385426949, 5517.197507554739, 5642.8803995311755, 5790.17504356018, 5914.663450333525, 6042.240024464639, 6158.516905998968, 6298.806550582167, 6418.790243606101, 6513.561641186846, 6614.1093991355465, 6727.734823953795][1:],label="N=5", color="#eda606",lw=1)
#ax.plot((tplot4)[1:-16]**(1/3),[930.4301722772692, 2657.3655334085006, 3256.411765817182, 3691.089822671533, 4023.7801750325757, 4312.244508246723, 4570.666857069354, 4803.417080702643, 5012.212030509971, 5206.509388693683, 5383.30705787138, 5524.951957583506, 5679.2168745715435, 5817.859469382532, 5953.3865648352785, 6077.115625667773, 6228.507744174454, 6339.828945194333, 6443.929931349593, 6561.481501594926][1:],label="N=6", color="#bf284c",lw=1)

tplot4=np.linspace(0,1000,51)
y3=np.array([674.9539628753349, 2584.4954088698664, 3263.1656393718636, 3599.8495721242693, 3776.4072345856366, 3972.083530380295, 4100.64286352402, 4193.370306731824, 4277.372600033706, 4316.752748626866, 4408.931855216845, 4504.936745706281, 4602.224704874067, 4679.587748811906, 4729.74146612127, 4758.622464054738, 4816.2351104002555, 4871.515868550631, 4934.203211007586, 5001.878044623475, 5050.75358230446, 5106.204428700453, 5184.077523370392, 5254.69662144528, 5361.397046035319, 5417.025062479965, 5543.106292138492, 5576.691839026604, 5635.8152668221255, 5670.786218747169, 5716.310118127378, 5740.666400911477, 5768.05125284688, 5818.93866622039, 5841.979611394654, 5853.452131826226, 5865.207729115469, 5894.471557001842, 5953.631083907685, 6035.7295047489115, 6099.219752554644, 6154.624544764531, 6175.995609660539, 6232.7572715167835, 6287.131519930801, 6301.02857111241, 6322.62710136034, 6398.224063940823, 6423.933631588366, 6511.742980349052, 6551.150370983004])[:-22]
y4=np.sqrt(4/3)*np.array([621.9044622119081, 1636.950788765813, 2028.4090612724149, 2309.429726570186, 2506.845424009009, 2676.4481649855556, 2836.8638318058793, 2957.683766376401, 3081.39933474016, 3186.025349249893, 3283.3674846677786, 3364.7357643406067, 3449.463858570995, 3527.477923777301, 3588.4597167225297, 3661.558074832036, 3746.7645766447886, 3803.7158735147927, 3854.1801541802747, 3898.3772827096054, 3954.209876401413, 4003.818452406568, 4038.2037384158343, 4079.99640018725, 4119.56696921106, 4161.223579513129, 4196.162822875273, 4249.765780961085, 4289.244529683128, 4333.850476185154, 4365.941507443651, 4408.532018425831, 4462.437195119347, 4513.689009720094, 4556.192397437356, 4578.974346059498, 4610.051520597321, 4642.908834314023, 4707.1889954076005, 4775.057306950435, 4815.4642773537, 4869.960280068469, 4897.274172375941, 4927.093548029771])[:-15]
y5=np.sqrt(5/3)*np.array([628.754054885537, 1392.0986012603107, 1707.5903693124496, 1955.080170644416, 2125.014066632074, 2288.192832446203, 2421.573784541969, 2540.2488778037455, 2638.4844463713057, 2743.069248016417, 2832.0905991203113, 2903.416545205233, 2975.88821465354, 3042.0300103755417, 3100.671639856432, 3160.90260644135, 3217.8872673351657, 3282.6264765500882, 3349.6432930391184, 3400.14996264622, 3441.24068151748, 3485.7931982671216, 3522.8972748563806, 3559.9475992482035, 3600.6792499682606, 3644.7414638753603, 3678.309875285089, 3713.8052814713087, 3749.0487993826887, 3784.8832218466405, 3817.5201991937065, 3862.299256463881, 3904.344396850504, 3946.3500695492207])[:-5]
y6=np.sqrt(6/3)*np.array([658.8306133177196, 1253.9455935970739, 1542.6248621341836, 1733.207846137969, 1892.5114679032868, 2029.0497503132312, 2133.26101657288, 2238.585448929371, 2327.509684311573, 2413.728213800321, 2481.4931252299434, 2556.7550004552063, 2633.976935387999, 2695.711397933712, 2754.043485869611, 2809.7321630293304, 2872.3467027433103, 2917.285188233451, 2961.732745223818, 3004.6078980394313, 3043.9795883718944, 3081.6783563234967, 3118.3948471425388, 3151.1379976330613, 3190.060340431063, 3233.972990906389, 3274.7401480773146, 3316.508488157555, 3351.9455196363147])[:]
ax.scatter((tplot4)[:-22],y3, color="#29036e",s=10,edgecolors='#1c1c1c',lw=1/4)#"#56da52"
ax.scatter((tplot4)[:-22],y4, color="#bf284c",s=10,edgecolors='#1c1c1c',lw=1/4)#"#007ba7"
ax.scatter((tplot4)[:-22],y5, color="#eda606",s=10,edgecolors='#1c1c1c',lw=1/4)
ax.scatter((tplot4)[:-22],y6, color="#007ba7",s=10,edgecolors='#1c1c1c',lw=1/4)
ax.plot((tplot4)[:-22],y3,label="N=3", color="#29036e",lw=1,zorder=-1)
ax.plot((tplot4)[:-22],y4,label="N=4", color="#bf284c",lw=1,zorder=-1)
ax.plot((tplot4)[:-22],y5,label="N=5", color="#eda606",lw=1,zorder=-1)
ax.plot((tplot4)[:-22],y6,label="N=6", color="#007ba7",lw=1,zorder=-1)
ax.set_xlim([0,tplot4[-23]])
ax.set_ylim([621.9044622119081,5900])
#rect = matplotlib.patches.Rectangle([0,621.9044622119081], width=tplot4[-22], height=3351.9455196363147-621.9044622119081,zorder=-2,color="#56da52",alpha=0.25)
#ax.add_patch(rect)
rect = matplotlib.patches.Rectangle([0,3351.9455196363147+10], width=tplot4[-22], height=3351.9455196363147,zorder=-2,color="white",alpha=1)
ax.add_patch(rect)
ax.fill_between((tplot4)[:-22],10000,y3,zorder=-3,color="#29036e",alpha=0.5)
ax.fill_between((tplot4)[:-22],y3,y4,zorder=-3,color="#bf284c",alpha=0.5)
ax.fill_between((tplot4)[:-22],y4,y5,zorder=-3,color="#eda606",alpha=0.5)
ax.fill_between((tplot4)[:-22],y5,y6,zorder=-3,color="#007ba7",alpha=0.5)
ax.plot([0,621.9044622119081],[3351.9455196363147,3351.9455196363147],zorder=-1.5,color="#1c1c1c",linestyle='--', dashes=(5, 1),lw=0.75)
#tplot5=np.linspace(0,20000,201)
#ax.plot((tplot5)[:],np.array([364.9617752376267, 367.7162647141003, 370.32115277771504, 372.8355620727341, 375.3213650292048, 377.8178756089163, 380.33561306255825, 382.8467598218314, 385.3486327797784, 387.81817041990945, 390.2580332965715, 392.68351794399115, 395.0934225065039, 397.4804593767778, 399.8553593003893, 402.19788581736333, 404.4567392276444, 406.60184138871693, 408.62960891053586, 410.52592875512687, 412.26862856356263, 413.8685195871168, 415.34759119489865, 416.7116823993276, 417.96745923793276, 419.1307442123969, 420.223375170366, 421.26902985242543, 422.28138683552856, 423.2713143985569, 424.25964408560793, 425.27311230925557, 426.3293813783947, 427.4332525355029, 428.5958428620889, 429.84110276483625, 431.18450700025664, 432.61284234978444, 434.10045348614057, 435.63843103245034, 437.22833044857884, 438.8789528321057, 440.6173430443017, 442.45181233480633, 444.33894171794424, 446.2210612088671, 448.0580390668161, 449.81999949954775, 451.4992038603342, 453.1008499606336, 454.608864003873, 456.00521461953065, 457.3004214586927, 458.5170024326153, 459.665474917872, 460.75325661350354, 461.80768481286117, 462.8720203783627, 463.977789790191, 465.13547988021634, 466.3519984250369, 467.634538115825, 468.9698153248869, 470.3282306456818, 471.6865185168737, 473.0216868768519, 474.315381921109, 475.5600662507644, 476.74842967389804, 477.878914495784, 478.9551946180428, 479.9777276484758, 480.94229335509056, 481.840406834907, 482.6662346697605, 483.43265317076623, 484.17538617752, 484.93289409099907, 485.72590947492495, 486.5581590493575, 487.4265907186208, 488.3266905429364, 489.24670809555704, 490.16163918392255, 491.04984239428506, 491.8995508950271, 492.69427179561654, 493.42165376820975, 494.0942551342106, 494.7398958091007, 495.379557726048, 496.02300114122033, 496.6737116887172, 497.32785188747613, 497.97342003616023, 498.5964306173244, 499.1882109841587, 499.7482207804088, 500.282698856536, 500.8035534857045, 501.3298740406017, 501.89088501563845, 502.52456771746387, 503.26251259550577, 504.10721561160244, 505.02912204019873, 505.98201654636574, 506.92296601880815, 507.83092539958835, 508.6954876164369, 509.5170067837673, 510.29529461085, 511.01342936817105, 511.680559666416, 512.3165291995304, 512.904841930919, 513.4294576392281, 513.9036737569782, 514.3406803289294, 514.7418461358392, 515.1104218483786, 515.449751615471, 515.7563594676079, 516.0256944331235, 516.2653627779572, 516.5015455445673, 516.7700924026105, 517.1006181298903, 517.5045887328611, 517.9748538174194, 518.4984478808318, 519.0753994051387, 519.7236857814577, 520.4762081432091, 521.3725071479652, 522.4420217426086, 523.6891452698083, 525.0868948869418, 526.5893705345719, 528.1433411457165, 529.7000692331957, 531.249090938692, 532.827639055263, 534.4662470885755, 536.152791516198, 537.8562156676683, 539.5646001960582, 541.2930056153696, 543.0324925550357, 544.7796243884138, 546.5618004292932, 548.3559267929794, 550.1148608547581, 551.8594903257988, 553.661789733604, 555.5127025081455, 557.3448575206145, 559.1541801908185, 560.9253205898912, 562.6238200463016, 564.2387181455462, 565.7590687219339, 567.216991905932, 568.6866016831143, 570.1957361661526, 571.7025064889015, 573.1712323307113, 574.5754948227689, 575.8915781726329, 577.0995770853029, 578.206176061771, 579.2611685992397, 580.2561846847261, 581.1808729054708, 582.0313626636269, 582.7962219551116, 583.5162996263879, 584.2194178387795, 584.8696951039813, 585.4425077583726, 585.9724801829068, 586.5047022543765, 587.0549607091076, 587.6247128519975, 588.230658576177, 588.8935452864225, 589.6153235974533, 590.3826290981357, 591.1872561483314, 592.0314208712725, 592.9110284055928, 593.815876300487, 594.7400154192802, 595.6789639120245, 596.6175956410171, 597.53621586596, 598.4234927231151, 599.2743948052602, 600.0835988948714, 600.8460298441315, 601.5630874378395])[:],label="N=3", color="#56da52",lw=1)
#ax.plot((tplot5)[:],np.array([270.0170959180152, 272.03535844878263, 274.0191488342689, 275.9817342952103, 277.92529996778217, 279.8447997336043, 281.73569658049917, 283.6041520315496, 285.4727854517304, 287.360951189655, 289.2691357521924, 291.1824956214843, 293.07276983333765, 294.9194072403458, 296.7259772559983, 298.4896993747431, 300.1987904185726, 301.8563786697038, 303.4621351152031, 305.02018790468367, 306.54968614359353, 308.0481587427092, 309.4956824226824, 310.89133134815347, 312.2561973033912, 313.6112574624122, 314.97039004237934, 316.34389334278404, 317.7422033848947, 319.1796855309925, 320.6701409031912, 322.2211886864396, 323.8337074424015, 325.4964222513379, 327.1880195512141, 328.88667270644237, 330.5655586550964, 332.1989234259115, 333.76937949080104, 335.26138048366244, 336.6634085901457, 337.9753146236483, 339.2093520197249, 340.3803469950847, 341.5000112937869, 342.57966895375665, 343.6330806801894, 344.6676352031933, 345.67372844993105, 346.639376657612, 347.56742492630605, 348.47218180366144, 349.37136113686574, 350.2814774612277, 351.2107819443607, 352.1556875048082, 353.1078781547524, 354.0601272983753, 355.00433003879647, 355.92943002326825, 356.8247011805395, 357.6874014715042, 358.5298368497969, 359.3753828096444, 360.25658627724647, 361.2064152242208, 362.22198961956235, 363.26219760761234, 364.2852860199652, 365.266547832388, 366.1954564297912, 367.06575041806093, 367.8724610795068, 368.61667580609105, 369.3094524830804, 369.9694029516019, 370.6208764737773, 371.2918171156097, 372.00330446587196, 372.75849861930817, 373.54389047478753, 374.33732445431184, 375.11598642005373, 375.86445545710365, 376.5812660407677, 377.2756534494756, 377.95502159744973, 378.61909462885427, 379.26432009476264, 379.8885211531363, 380.4906597174701, 381.0680951705383, 381.6166034572652, 382.1351600371935, 382.6318162896045, 383.12458206948816, 383.6347384798711, 384.17677638888773, 384.753296965215, 385.3585771537478, 385.9853982059723, 386.6264829576142, 387.2746456018402, 387.925777246672, 388.5754285619529, 389.2191003301189, 389.8612928732488, 390.51565856959013, 391.1943530569746, 391.8989345212838, 392.62376876479726, 393.3673290196802, 394.1279720955605, 394.8927504384698, 395.6478994634369, 396.3902098898146, 397.1174223593533, 397.82578168698393, 398.51965394512644, 399.2092611294976, 399.8994756451482, 400.5868115979463, 401.26554701717055, 401.93082072542194, 402.5787380151145, 403.2075223558658, 403.81899377553066, 404.41658420406065, 405.00228690732183, 405.57756432968614, 406.14569716695314, 406.70990500261144, 407.26833508001806, 407.8145690806449, 408.34269064674305, 408.8468505611731, 409.32222734465483, 409.77179083155625, 410.20739689213787, 410.6458005236078, 411.1068024676382, 411.60922400862705, 412.1589182561601, 412.7425842329525, 413.34063420220355, 413.9393652845418, 414.52899663507304, 415.0984646212866, 415.6389085150614, 416.14799620796003, 416.62573508417887, 417.0740056926601, 417.49936999456014, 417.908895444145, 418.30722099319695, 418.697301928667, 419.07975563800454, 419.4531165185816, 419.81651462016464, 420.17170847657565, 420.52343796599274, 420.87966992793616, 421.2500676863763, 421.641132102826, 422.05309554761163, 422.47855811602534, 422.9078191326267, 423.33902951955935, 423.7698237685328, 424.19924214535513, 424.6356073295114, 425.0866259155081, 425.55615307443554, 426.0487810824709, 426.56196547785316, 427.07970646719224, 427.58557300000746, 428.0750392404106, 428.5458832189197, 428.99691690477283, 429.43451854181285, 429.86700552491374, 430.3061099078117, 430.77140080289695, 431.27349264443257, 431.7997948094711, 432.32629813647145, 432.84112600549423, 433.35029791596816, 433.8687142450607, 434.4072825980631, 434.96776674316516, 435.5448053438139, 436.1280296321147, 436.70204611114997, 437.2539325122316, 437.77659050202124, 438.269430559339, 438.73727926407247, 439.18631903930736, 439.62120248598166])[:],label="N=4", color="#007ba7",lw=1)


#plt.plot((tplot2**(1/3))[5:],2600/6*(tplot2**(1/3))[5:],color="k",ls="--")
#ax.scatter((tplot2**(1/3))[:-20],[413.223525137484, 611.0084967076606, 884.0497091783697, 1048.2181360705126, 1176.3288878208687, 1272.7144525171443, 1357.0851759733866, 1436.6488918803782, 1519.1366130287172, 1600.2527406762547, 1671.6164299133857, 1726.141928322334, 1773.7358541177834, 1816.220727784976, 1858.1773844253134, 1893.2442539183423, 1921.3386279860251, 1953.2357382194373, 1981.55114946886, 2011.0647421744754, 2043.0735913412427, 2069.13318710096, 2087.001556993665, 2107.651018430937, 2137.1655904574777, 2165.1615176334, 2190.4185931032007, 2209.926478445731, 2227.906544383558, 2246.2592247909583, 2265.1856356159287, 2283.7568329892933, 2295.9278583759306, 2306.734566343834, 2317.0806624772736, 2327.758878099521, 2341.5607401239204, 2354.8476957990165, 2369.063619599371, 2381.9365831109594, 2391.52543349951, 2398.8306162098797, 2408.30141104324, 2425.320884045105, 2442.761094614011, 2455.3383267149097, 2479.419870531994, 2498.840928346626, 2513.2444210772564, 2523.822762137554, 2532.8819853645305, 2545.7813646687946, 2553.770356958771, 2561.678839168406, 2570.2901229837134, 2575.822088115576, 2579.408825583696, 2582.406908366529, 2585.0527092338416, 2587.493190043535, 2589.4986318110246, 2591.279706832712, 2593.9460523080975, 2601.936058907569, 2617.9461586278303, 2629.4722657831903, 2635.6996752298865, 2643.053460538654, 2649.9265413446788, 2658.942608153631, 2673.4860549971304, 2683.2833310132473, 2689.1993123352436, 2695.8721000459473, 2700.7329193713213, 2709.276413239051, 2721.3568921332826, 2731.43424112233, 2740.319404962158, 2749.811872156318, 2762.996219912786, 2776.9716991542314, 2789.22664239047, 2802.8637111908347, 2813.430302624705, 2820.6659882544786, 2828.916340063937, 2840.387914403817, 2865.6219994027297, 2888.9849306094015, 2910.475834348905, 2927.516391299662, 2937.6095392159677, 2943.165493189559, 2950.0139730247, 2959.315824453709, 2972.305529579623, 2981.036586795214, 2993.5624959462343, 3007.820517148259, 3020.160846007806, 3030.046711753302, 3042.3270012877815, 3050.2560968383955, 3064.268593425514, 3075.9189574808993, 3096.171643322166, 3115.0679038135268, 3128.6323131117347, 3136.667254247393, 3145.402444059667, 3155.7470180802934, 3164.3836359537872, 3171.5416035168573, 3181.1939337785075, 3186.728083258672, 3190.176685947178, 3192.643087444577, 3194.5801097146104, 3195.7265784014025, 3208.297989079902, 3222.864305838396, 3238.552714160534, 3247.1461639432346, 3257.2257188984236, 3266.5123879306857, 3277.7703267507277, 3288.3845110946954, 3297.753356860063, 3313.27907500726, 3321.416297569762, 3326.6684487682146, 3336.0585725725223, 3349.165708063363, 3360.77799288062, 3367.5362894521854, 3371.9274008341404, 3380.9255351749816, 3392.30994501652, 3398.7451383674666, 3403.5694102538846, 3413.8694657604706, 3423.4128758955217, 3428.3226135889627, 3431.33704938902, 3432.555663716066, 3442.563793028209, 3449.365975420086, 3460.4328088531934, 3472.4493265931296, 3481.5283046323816, 3486.4842982833975, 3489.7991789605576, 3492.341037201061, 3494.300838842605, 3495.7929925225435, 3496.445197744714, 3504.9913908832223, 3520.105888623564, 3532.923948655596, 3539.7153078338056, 3543.8067395903927, 3547.1229466452332, 3549.6911172435953, 3551.6803629214455, 3553.4381223832534, 3555.012467526308, 3560.9562696048683, 3571.0353633141, 3584.8223364953406, 3595.5797609178167, 3603.076566120483, 3607.9856219687135, 3622.7138473084706, 3637.214167218797, 3648.3358989648264, 3657.7847004653854, 3664.9844909409753, 3669.820034169375, 3673.8149264579024, 3676.6484105573572, 3678.758761830069, 3681.0322741693662, 3682.9357100075645, 3684.8439015188173, 3686.494314596217, 3688.089212751762, 3689.7385719124572, 3691.4073017480573, 3692.9952454600793, 3700.252806814963, 3707.244566715595, 3713.0684347353017, 3722.9405154119627, 3738.0769933983156, 3755.1696961358048, 3770.857756354529, 3792.217839902103, 3809.7707650390216, 3820.000900443304, 3827.51933158219, 3832.604909569796, 3844.395015361385, 3855.850507534121, 3862.697754468919, 3866.785797537624, 3873.1486240028125, 3886.45251292986, 3893.2058258807774, 3897.623964940009, 3901.1812474221288, 3903.4726860789347, 3906.306283013779, 3914.8278292537, 3934.709568732851, 3946.7535420501013, 3955.724248770735, 3962.259497633242, 3967.3253660777705, 3970.9016469217595, 3974.5459255516635, 3977.106675079257, 3979.3540368151007, 3981.113855504691, 3983.078718128403, 3984.649449329066, 3987.2337810611434, 4001.3929595345066, 4012.942618246197, 4028.047515768311, 4039.2756891381887, 4052.7869094655534, 4067.9864156187714, 4082.7061702917063, 4091.3250716522266, 4098.1144662605175, 4103.598721066644, 4108.256728993842, 4112.015862755103, 4115.429128984612, 4118.727553666871, 4125.872910882375, 4131.947444705587, 4133.748207933953, 4145.766000049629, 4157.758346072291, 4164.71957093977, 4170.338080616328, 4174.859268032168, 4177.9631305532575, 4180.4769721][:-20], color="#29036e",s=5,edgecolors='black',lw=1/4,zorder=10)
#ax.scatter((tplot2**(1/3))[:-20],[380.5973160382626, 402.72217730038193, 705.3136113185647, 832.247951696108, 898.0496309679602, 953.1232639157755, 1001.8799944093577, 1048.5444844615731, 1082.837653022919, 1117.9929233312967, 1150.7466241425132, 1187.1419019981083, 1218.344644954655, 1253.4088826337806, 1279.0889377899057, 1306.4347971999114, 1330.5459195568615, 1356.8504384267023, 1383.6958513831992, 1407.3431861185281, 1441.422638628419, 1469.457610120854, 1494.0025898991262, 1514.6492889866747, 1538.312290409658, 1563.2231609013832, 1579.8450461341647, 1600.0025385638796, 1615.6789865530855, 1628.1097779640852, 1646.2822671702772, 1664.0774608650115, 1681.5733082875713, 1700.5651992795679, 1718.6953546899072, 1737.988842120456, 1754.6621876378974, 1768.1518258086069, 1781.1803616845702, 1795.5547434575897, 1807.0800857405388, 1816.9116151612511, 1826.25702403153, 1840.1612524064026, 1853.5731185750576, 1865.1163348514397, 1873.9276344356429, 1883.5447274686148, 1890.7631188718576, 1899.973345337498, 1909.6774681538477, 1920.6406769276975, 1932.9127593998762, 1946.9797545416025, 1963.0786891252262, 1980.287399961025, 1989.1404478763623, 2000.3546417953798, 2009.8940985138297, 2017.0067009100335, 2029.3528824067491, 2042.9214552949827, 2059.5308608059263, 2070.8059151545544, 2077.2656547045335, 2084.333839418873, 2094.3927696774062, 2106.246933856762, 2118.0045285196534, 2128.354915951755, 2140.751479857907, 2151.0664208235457, 2164.04511787939, 2172.9497124351137, 2186.1119033654204, 2200.5220695381463, 2215.393252994903, 2224.2262087202807, 2232.8294868579096, 2240.644514895954, 2250.37134346671, 2262.4798546947595, 2271.5942783458972, 2278.7953184458697, 2285.035656101074, 2293.4355001361973, 2299.127082729943, 2306.6913463829783, 2318.994336473413, 2330.940330745744, 2341.036072184059, 2347.775135048125, 2354.7708716575353, 2361.364826832916, 2367.079883785115, 2376.825646612329, 2388.758609857966, 2401.0174881930484, 2413.8900839299945, 2430.148409399664, 2445.025172626662, 2451.8774917166015, 2455.835644763909, 2461.5848946232727, 2468.284580525383, 2473.129291914443, 2476.7604913690257, 2480.0813136067163, 2483.077821431518, 2487.4588359211684, 2491.051167802534, 2493.7705007221334, 2495.9894189802108, 2498.0079383725147, 2500.1295396224896, 2502.255922507071, 2506.8971889034306, 2511.7374038454886, 2521.123631464194, 2527.358187909405, 2531.6581178598367, 2537.573751998433, 2544.101383223134, 2551.5443046620835, 2558.8525312039606, 2564.8372383055366, 2573.0724933482256, 2584.6872344433755, 2596.0141392102737, 2604.9484241653827, 2613.1614675664464, 2618.9579017396745, 2635.5023745715553, 2646.824873446926, 2654.814876242508, 2660.6053522318975, 2667.0843255449577, 2672.1440439484236, 2680.0205249516102, 2687.528948741268, 2694.6684409217733, 2704.6677396732443, 2714.796669687806, 2723.5497050801278, 2729.440847391804, 2736.2084794160974, 2743.182263347794, 2751.2645987639157, 2760.634743697515, 2768.931700147536, 2773.999228684381, 2782.905624395995, 2790.8893232019986, 2797.1618562153194, 2801.7059394088265, 2805.8005193590757, 2809.320097438741, 2814.015564087491, 2818.1036028030658, 2822.95320850349, 2825.848089186052, 2827.8641270451176, 2832.8664133926077, 2837.3170329371133, 2840.4075585839696, 2842.6763288512198, 2844.415164876515, 2846.002673887071, 2847.551187161137, 2848.987964666972, 2850.3926497841635, 2851.8256862525386, 2853.3058567327066, 2854.7986615039063, 2856.268701261047, 2857.715609915327, 2859.1445140917226, 2860.518753670061, 2863.006799417955, 2867.3565169242024, 2870.754079470141, 2878.3068238931487, 2883.9793664423773, 2887.6327357336013, 2890.412368254885, 2892.803997871234, 2895.843079417361, 2899.681036979293, 2902.198476447548, 2910.729582146213, 2917.967265430518, 2922.1583158444228, 2925.078604001463, 2933.537476646688, 2940.580241028493, 2944.9756776659574, 2948.5599716164584, 2952.83014208567, 2956.89022219687, 2959.8804798532924, 2967.5205005523944, 2973.3257124996007, 2978.3795238181665, 2982.513656651686, 2985.999206941063, 2988.780948769699, 2991.0684764996595, 3002.598971428903, 3008.518424659035, 3013.5635416840882, 3017.8276746813867, 3020.7881293670343, 3023.262174182482, 3026.361322888321, 3030.4019209327475, 3032.589214197466, 3034.6146400831826, 3039.478581589043, 3051.8852227164452, 3060.878148448811, 3066.155468924813, 3069.805379566864, 3072.1728066460446, 3077.139518778224, 3082.4203620766375, 3087.619945368939, 3095.989840784608, 3100.651078023532, 3103.6491168618613, 3105.5744487130028, 3107.33913596333, 3108.9438826451083, 3110.403467045112, 3111.948459300179, 3115.02250708194, 3119.586904272147, 3122.828269076117, 3125.4974762928996, 3127.5014130292193, 3129.3420265574596, 3131.2369534351055, 3132.8038282958782, 3134.732098872551, 3136.8702200844677, 3138.911744101864, 3140.8786411587666, 3144.5975699307237, 3148.2303213260548, 3150.5444246897036, 3152.3415071775066, 3153.8650481271557][:-20], color="#bf284c",s=5,edgecolors='black',lw=1/4,zorder=10)
#ax.scatter((tplot2**(1/3))[:-20],[320.75101350208, 326.87935996352576, 428.10202616726224, 603.7656959383899, 666.2756898959805, 705.864447726846, 736.8408218649402, 766.9325892463431, 792.6054358631989, 818.3146625075443, 843.4472895862747, 869.252112324803, 893.1230111996723, 917.8374576692981, 940.967990799486, 966.4334750004942, 995.4622949982484, 1020.6432018685058, 1037.1154089055726, 1053.053930110742, 1066.7587663147895, 1081.8125935542107, 1099.0200067479082, 1113.403070691268, 1127.000075674534, 1137.9606685063945, 1151.3905951268923, 1165.3469223649536, 1178.8919326938735, 1192.306643829831, 1203.5584169301028, 1214.9997697761735, 1224.4738741154108, 1233.0212505562947, 1243.4032110784347, 1253.5061986530534, 1261.8931249133639, 1273.1328892889755, 1286.1595112380123, 1297.7498171327536, 1309.8397841000224, 1321.2808962409085, 1334.1061541383644, 1345.3303735308084, 1356.991821400139, 1371.6025324518691, 1380.3874854892615, 1389.7503408947664, 1400.6683209176058, 1410.7027239199845, 1420.5023712113202, 1432.6467668088376, 1443.5300420856674, 1451.07775347482, 1456.6017779919894, 1465.37768528787, 1472.6221170775582, 1482.338457804316, 1490.6639058967316, 1497.8526415399367, 1503.3686981362628, 1509.546523527425, 1517.7618747226206, 1526.1017048719689, 1533.628716591429, 1538.9487019718213, 1548.290729645431, 1557.7345627196007, 1566.202128217659, 1573.036289972916, 1577.1867652941635, 1581.871397277781, 1586.7497034397632, 1594.1333629251053, 1599.9779944099864, 1603.6432773580084, 1607.1429949647434, 1610.2494714511429, 1613.717056288272, 1618.3389462276773, 1621.9577814882837, 1626.349152224873, 1632.6582118632048, 1637.4566740354182, 1641.4654265240297, 1647.4304490820373, 1654.0001927654514, 1658.8263809146304, 1663.4709648972423, 1666.6803622452571, 1670.837985632396, 1676.2269401428225, 1681.8015439811286, 1688.3086863588023, 1694.8765969797287, 1700.603779049752, 1704.7128925731915, 1708.030532739568, 1715.5851011586058, 1721.6204769326732, 1726.8184594431464, 1730.1462334308992, 1732.6846640187766, 1735.5009473451416, 1739.2326728177075, 1743.80557009633, 1747.0420049030456, 1751.654086134781, 1756.6808177459666, 1759.5363924287383, 1763.0914399112803, 1769.064991109476, 1777.0180836143397, 1783.2136959118675, 1787.80357596795, 1791.4154547652995, 1797.3664549067837, 1801.3069061830677, 1804.8467499637434, 1812.670071429552, 1819.2050737312168, 1829.4020844691292, 1837.9600889164262, 1846.6262234577605, 1850.9188024782334, 1854.6203018416309, 1859.268937454297, 1862.6327666118764, 1865.5530489349032, 1868.7315128213047, 1871.2746898808346, 1873.0986647908353, 1884.6236381137137, 1892.650946066266, 1897.9568251783276, 1901.869144656343, 1907.0466108330281, 1910.578184708079, 1912.8481720729535, 1916.1548970454614, 1918.9210119315567, 1921.0537604479282, 1924.547992393728, 1929.8279699484362, 1933.958962513656, 1937.9055300331086, 1940.8568183876866, 1944.59979228374, 1951.3889581225499, 1957.2011521249376, 1962.470206402892, 1965.7298786417052, 1967.9975963942038, 1969.7817071922957, 1971.4004299712926, 1976.1146981064092, 1980.406095883155, 1982.6795912532089, 1984.5866897148023, 1986.4730394237279, 1988.1890976469185, 1990.837843154444, 1992.6379451793161, 1994.3741393333694, 1997.0861336057903, 1999.6552606995167, 2002.648111344332, 2005.1563683470615, 2007.081619158582, 2010.4778148778435, 2014.5723138390847, 2019.6141982690037, 2023.5019921154715, 2031.1879417200003, 2036.0284359581124, 2040.1779653984222, 2044.7980219081705, 2050.0509802916063, 2055.9807212634714, 2060.928322217848, 2065.014179813109, 2068.210977650021, 2070.799246066828, 2072.7429466079943, 2074.4061368697908, 2075.897545069703, 2077.5725786948697, 2081.9377435034985, 2086.052127663206, 2096.0265264323825, 2102.9061273887396, 2108.229612438462, 2112.684426579356, 2117.319823557701, 2120.2002247546884, 2123.9745999652678, 2127.190065755068, 2132.2164025205852, 2135.512999862868, 2138.93724984075, 2144.252019848343, 2148.197963599159, 2150.8659528101985, 2153.044877357836, 2154.8437135300674, 2156.3960354411724, 2157.841824779715, 2160.168093669781, 2163.7303375252436, 2167.430071038178, 2172.8332200300592, 2175.5070183720677, 2177.3419852739985, 2178.7866133693337, 2180.0414539154776, 2181.0974331168563, 2182.071407229185, 2183.0178421824253, 2183.9623609777914, 2184.8849571173973, 2185.769779658382, 2186.859345208294, 2191.7921503416387, 2195.4842711795422, 2198.136738976859, 2202.01576025362, 2207.3050997379905, 2211.7090562894787, 2214.8274966663994, 2217.8048027761906, 2221.3499278393883, 2223.3527505114057, 2224.6880425506033, 2225.934408524413, 2227.1279903715335, 2228.2536624774457, 2230.130461168356, 2232.44227489281, 2233.70527911814, 2234.752998879814, 2235.7104421520835, 2236.641504453561, 2237.574474413852, 2238.504999383667, 2239.4330779212223, 2240.3569432742793, 2241.295721471741, 2242.271450136058, 2243.2870373709693, 2244.851395089164, 2248.2179155090334][:-20], color="#eda606",s=5,edgecolors='black',lw=1/4,zorder=10)
#ax.scatter((tplot2**(1/3))[:-20],[384.688200105385, 392.18023466857005, 508.802860530667, 720.7532464254595, 802.199073388214, 847.6728562261516, 890.1968959975426, 925.6150828948705, 958.8439513400949, 986.475604206751, 1012.1880449805662, 1038.8371122350895, 1061.003915823785, 1085.4487183009057, 1109.922581823588, 1129.2794694230606, 1150.2321081573427, 1175.0795520670724, 1202.8915183544088, 1222.5289725175471, 1244.0259505978938, 1262.579481618826, 1284.4625131939372, 1303.4608565127164, 1319.8140028008106, 1335.3191083925267, 1356.4989949715598, 1377.6599836793655, 1395.1857301551083, 1408.8198852467765, 1421.3660912447558, 1435.428728402752, 1445.8511337286416, 1454.1248118041972, 1465.425136738973, 1477.3112961681115, 1487.5255166734682, 1497.5120746692774, 1510.4943766940708, 1519.9104983443033, 1531.6969156792447, 1547.617506282492, 1557.8696063264474, 1563.8875003865003, 1571.6300679568162, 1579.8665510637238, 1594.2415192397648, 1609.4416995263332, 1621.7172786483075, 1635.9396129468914, 1651.0056064511857, 1670.5330077214169, 1681.259706344595, 1690.3009866136729, 1703.4129700229264, 1715.1284467993253, 1722.2948449008263, 1728.4643688985973, 1733.945199681809, 1740.3293385382374, 1745.185618732292, 1752.4874519474674, 1761.2778528857139, 1771.878600861015, 1778.8239139196758, 1786.640476283655, 1793.5491040794823, 1800.8844143781669, 1807.0950329573084, 1812.3725000906447, 1824.5207005627574, 1835.8160955589367, 1844.1629169829757, 1851.5262836786958, 1857.0880484213365, 1862.069844608333, 1867.9841446231503, 1871.5936349523, 1874.8252492641611, 1883.2260875033423, 1892.6986557380824, 1900.0463607242327, 1910.992204688207, 1922.25314529502, 1932.1803888427974, 1937.4607800803312, 1945.1018164828963, 1953.5646241505488, 1958.1716940864183, 1961.05186169631, 1964.9663654854432, 1969.635566176249, 1973.3383995927047, 1978.7502657044765, 1985.4726642436501, 1991.2280511298673, 1999.4971355620237, 2004.4451259535742, 2011.491489888098, 2019.1352627677134, 2024.3170826091914, 2031.9734606768893, 2042.3690647824142, 2053.9848790948813, 2065.0760713837253, 2074.0563315616687, 2082.5562827603103, 2088.110446030074, 2095.3798153651337, 2103.5265477033367, 2115.5356890310895, 2123.535402800989, 2128.2183035638163, 2131.622312911126, 2135.0952270407543, 2141.790606922103, 2153.698030705278, 2160.0672800906427, 2164.749771377598, 2171.418685979003, 2177.938990579114, 2181.911926026854, 2187.7218024987656, 2191.172617465682, 2196.065023025061, 2205.8596125545987, 2213.5997161768114, 2220.153215804558, 2226.1025625103193, 2230.435327285388, 2233.483501006373, 2235.791734381789, 2237.9513920006443, 2244.1305823090256, 2247.6302270916062, 2249.739028797563, 2253.6719933978293, 2258.972692035521, 2266.672058369319, 2271.1032437760414, 2274.097620442252, 2276.6100023980157, 2278.845024427709, 2282.354218585129, 2285.661123350537, 2289.2130873259243, 2291.6601890159177, 2295.497284984577, 2303.9317712167417, 2309.5400435975166, 2314.9015507951667, 2323.0220356781265, 2332.699472573619, 2337.7039303359115, 2343.4572548167425, 2346.742647023238, 2351.340064217429, 2358.9411154768777, 2365.5600474239586, 2370.155003973257, 2373.5551035465937, 2376.6046953638543, 2379.413534230807, 2382.8739664192626, 2390.8266078200368, 2397.786413471612, 2401.50376342606, 2410.7718056050903, 2416.2654161359956, 2419.7801272564866, 2422.5441418445903, 2426.9918013940974, 2431.8061082954405, 2438.112467466921, 2445.8468315553955, 2453.485106541183, 2458.620641133607, 2466.4459128146523, 2472.6526222586044, 2476.272140886594, 2479.7476248385374, 2484.614466118875, 2495.949030694992, 2502.87752807139, 2511.650460123525, 2520.228805917779, 2529.8834029784402, 2538.3156894288295, 2548.727397043203, 2557.8955051592384, 2565.3522010171678, 2570.026759779807, 2573.858482896899, 2577.8519625136464, 2580.9064288979926, 2583.2798659891373, 2586.3493375406715, 2588.9975261486366, 2592.543420517421, 2601.7199212200894, 2607.4042275139345, 2610.6878707559454, 2612.993757007923, 2614.7201973679603, 2616.917872439646, 2618.4455020592573, 2620.5666241461845, 2622.369390831353, 2624.107137136525, 2625.698650197758, 2626.9852993639947, 2628.2177884595994, 2629.463058493811, 2630.7073085700436, 2632.028047792229, 2633.6784345662686, 2635.207630985985, 2637.2193117004404, 2640.9444057498026, 2643.257577193869, 2650.2523180704184, 2656.585836081222, 2660.9780917657836, 2664.103578581173, 2667.2314239094794, 2670.592811682864, 2673.993244045834, 2676.4091334707196, 2679.1119427191334, 2682.0099037263053, 2684.6627909521408, 2687.6945169660653, 2689.6022714797577, 2691.040468276151, 2692.169393267913, 2694.3686978485894, 2696.7404363268947, 2698.1939201327687, 2699.200104122663, 2699.7302583726223, 2701.0709707265564, 2702.735179213272, 2704.292038061109, 2705.5289958200365, 2706.719592385124, 2707.929755804869, 2708.993895957693, 2709.9357411235933, 2714.139466409064, 2718.46568871215, 2720.366417368312][:-20], color="#007ba7",s=5,edgecolors='black',lw=1/4,zorder=10)
#ax.scatter((tplot2**(1/3))[:-20],[409.08238688355044, 428.0752790128244, 430.83387822582057, 463.84273617783316, 575.6436945654598, 728.5522641967499, 820.7367638452577, 873.0813682089722, 907.6578479230566, 935.6649647721059, 959.9066861274994, 982.6429048429607, 1006.6018243822818, 1028.525006272873, 1049.4461598890284, 1068.8731065163547, 1088.642172076857, 1109.3196957062887, 1126.771978279376, 1144.1189493289003, 1165.3925281749205, 1184.3749053028466, 1201.7716931041818, 1218.8450676167777, 1233.6823881366863, 1248.9405695717462, 1263.676044716061, 1280.89387580389, 1297.6602647945836, 1309.4879666457139, 1323.4154181595468, 1334.911893737041, 1345.3315311062638, 1357.1703145853503, 1373.8215340838724, 1386.0773526432724, 1398.661291038641, 1407.9642178434992, 1417.4727988237094, 1426.1744817430438, 1437.4078775560602, 1446.9531693985696, 1458.6616670641563, 1470.2432991413434, 1484.5037612449903, 1494.279498493183, 1503.5564866946409, 1510.7088837020497, 1517.7027818980728, 1525.7290064808974, 1534.7433027423792, 1543.7205630716676, 1549.910707704369, 1556.227878113901, 1565.4346590028802, 1574.0753326965473, 1584.224545634584, 1593.2806775684255, 1599.0318676681352, 1604.3777053888991, 1611.2765105516626, 1621.7905190456806, 1628.0425098479286, 1631.9939856515482, 1635.7908340545177, 1640.0211616352083, 1647.532112134094, 1655.1453746363652, 1661.7625334957695, 1672.514113488573, 1682.4728871120783, 1693.3922425088667, 1700.3064738391763, 1706.98361193374, 1711.7676938131244, 1716.4095270350224, 1721.0448627450683, 1726.278867459859, 1737.3658379672293, 1746.43167567437, 1753.3043798627425, 1759.2415489677064, 1762.88560602471, 1767.3743241449856, 1771.6353905222609, 1775.8943908996173, 1779.7692963869256, 1785.3812110055514, 1790.6704537965752, 1794.34285473915, 1798.7445795358733, 1801.9763451952695, 1805.5470975866292, 1810.2271783355682, 1815.7023927087064, 1821.4828810123174, 1827.7661430088115, 1832.6263453164117, 1838.636920093545, 1845.1054600229681, 1855.3103283745836, 1863.890315179787, 1869.8999723978861, 1877.0759624212965, 1883.2507432605503, 1888.9694662716286, 1897.8551828159466, 1905.008325756989, 1911.7539812394455, 1920.2674876407286, 1926.2538629401597, 1930.7858007884306, 1937.7934379181206, 1944.8420253737067, 1951.094606489341, 1957.7499802371603, 1961.8067996288564, 1965.1274635230748, 1968.9201391678882, 1974.4651464248925, 1977.841962667264, 1980.2780692773754, 1982.366783080491, 1984.9035447578378, 1987.6393875667245, 1991.0210650391798, 1995.9186999512401, 2000.4123797589784, 2005.6903950068515, 2009.5211619745733, 2014.2677809560437, 2020.4946934926634, 2025.2014319490122, 2028.209429562318, 2031.966327396869, 2034.9680938930812, 2037.7860501212188, 2041.9566762148004, 2048.1777369489887, 2059.2804448576403, 2065.6090731938266, 2071.761943455517, 2076.340214557606, 2079.334437606471, 2082.817939256655, 2087.133506624417, 2095.117964220953, 2103.8408527391866, 2116.5666091410603, 2124.665583993016, 2131.0612470672727, 2135.5538729177324, 2140.369658237753, 2143.8786202358697, 2146.7447266756644, 2150.8678020076, 2155.7705093568925, 2161.761454805596, 2167.9761266143546, 2171.695361349113, 2176.2175247579808, 2180.294490945693, 2183.4303339697512, 2190.3996032892755, 2197.662816475779, 2203.3846417677673, 2208.739785569732, 2212.487729588508, 2215.4863745422153, 2218.551790041403, 2223.0842423467448, 2227.9724898033446, 2232.060404797675, 2234.776320469647, 2238.012995792852, 2245.525904870791, 2253.1437178463666, 2257.320132416932, 2264.597505981158, 2272.288326385384, 2275.3974752792806, 2277.1304369947047, 2279.719243586035, 2283.801304985628, 2286.650203138951, 2289.108050760695, 2291.642816123559, 2295.5751279460383, 2298.7632714023134, 2301.720958693205, 2308.3660359894666, 2313.887612268262, 2320.3686549217223, 2330.348982151469, 2336.7018220716327, 2340.155195003257, 2344.934500142245, 2349.7078620117713, 2353.15664471774, 2358.8443092030707, 2362.895229271068, 2366.9901624015083, 2377.276121565991, 2383.1166716061716, 2386.5034913728164, 2390.027455906555, 2396.497137475725, 2402.143025181687, 2410.895626039341, 2417.442391621771, 2421.2193801273515, 2423.723348816224, 2425.4474360951135, 2427.43295072015, 2430.9240501221966, 2434.609350975113, 2438.0892834539304, 2440.208070186032, 2441.6618373579963, 2450.0841299801696, 2455.3380609178766, 2458.061448885888, 2459.729786741066, 2461.4206773894966, 2464.9344313241754, 2467.090506713726, 2469.0104717453273, 2471.31665766796, 2473.163675484488, 2474.783690954376, 2475.9435244504357, 2477.201616616669, 2478.458480344594, 2479.5376511692434, 2480.451095624033, 2481.100341674087, 2481.4353804678076, 2481.341530546227, 2480.9771596618925, 2482.5023352547173, 2483.2473505991866, 2485.015878648218, 2487.3905476953787, 2489.2650390202543, 2490.898448460055, 2493.3140018384233, 2495.1229803910446, 2496.199553200466, 2497.5122134535095, 2498.8162041547057, 2499.805544869496][:-20], color="#56da52",s=5,edgecolors='black',lw=1/4,zorder=10)
#plt.ylim((0,20))
ax.tick_params(which="both",direction='in')
plt.xlabel(r"$Time$")#^{\frac{1}{3}}$")
plt.ylabel(r"$LN^{1/3}$")
ax.legend(frameon=False, loc='lower right',labelspacing=0.3,borderpad=0.1,borderaxespad=0.3)
plt.subplots_adjust(bottom=0.17,top=0.93, right=0.95,left=0.22)
plt.savefig("LLL.png", dpi=400, format='png')
plt.savefig("LLL.pdf", dpi=400, format='pdf')

#pstd3 = np.array( [2.09574350145703, 0.544963799748275, 0.520931540922586, 0.47303423243609277, 0.47102934072918795, 0.4689674817078716, 0.4758731890495808, 0.4584619927577973, 0.47304320421659307, 0.47480583028118667, 0.4767726983067798, 0.4868215535222021, 0.480413248900819, 0.44358767775159014, 0.483128095081773, 0.49121204006607566, 0.4696875848482469, 0.4529597871611544, 0.4452291321833675, 0.42361595612270275, 0.42704759290853367, 0.42707466487233775, 0.42286824387028477, 0.4065892806721802, 0.4011269536657484, 0.3781266968346222, 0.4059071677733374, 0.4259277537291196, 0.41954154234357516, 0.4015071491273006, 0.40278443047852897, 0.4065062159554108, 0.38792107807609466, 0.3883518527140874, 0.3903998008307757, 0.384314183306653, 0.38441656981617583, 0.38153727368787843, 0.3827347246562996, 0.37888589140059803, 0.4233809627661183, 0.44054811547703665, 0.41160991936515845, 0.39003821321048293, 0.38148628934902173, 0.39300263503433236, 0.43647423204176394, 0.38958262594347937, 0.42713264305143855, 0.4210449680327628, 0.41577125308983953])
#pstd4 = np.array( [1.3511348871221014, 0.5769057715083045, 0.5555887411697703, 0.5443272205256231, 0.4983642926446605, 0.5395793077514345, 0.5202814218831492, 0.5223305080632531, 0.5216404054881064, 0.5243469383328366, 0.5054736740236713, 0.48812729789059783, 0.4645070030388555, 0.43721153747945224, 0.44542378546998473, 0.4185069172633065, 0.4173301066869407, 0.4010370306217641, 0.45179372636708215, 0.4634790682273433, 0.3555510554625142, 0.41064424806712924, 0.4038742835452341, 0.3822402979467587, 0.40715715700914223, 0.4062209462103161, 0.4412382975074634, 0.4477516688873537, 0.40811120609667784, 0.38299925761960785, 0.3895632319578561, 0.4144360109659197, 0.41728511524754996, 0.4190614057538521, 0.40657005804113056, 0.4240812963443684, 0.43607313625221195, 0.4177149039484643, 0.39188539269047296, 0.41761874738264193, 0.4199433412813131, 0.42378049734064527, 0.39398352094964606, 0.4308174186718991, 0.3941807533401705, 0.42085793343405264, 0.4165986303960684, 0.4176679254291676, 0.41754979964730127, 0.4211495781706358, 0.38640700938835676])
#pstd5 = np.array( [0.7784973924927315, 0.5784855735974448, 0.5555075001702464, 0.5441889958839603, 0.5010799800103929, 0.4957510477583906, 0.5019864294559517, 0.5049925263615377, 0.5147658800766222, 0.4858304479982447, 0.47842211178518645, 0.45309402513111086, 0.4461156777617788, 0.4719621880345253, 0.4469717341157833, 0.43707207017592486, 0.44881261357551466, 0.44788206794910174, 0.4353904193629562, 0.4268381957706033, 0.447787504768888, 0.4452495470541544, 0.44194203680607635, 0.44392655790755176, 0.45153068189018464, 0.4203801236722527, 0.4216738087448839, 0.44117816590331, 0.42782493264111365, 0.4325464343821355, 0.4431986771273651, 0.4506552443697517, 0.4255339882814793, 0.4250595613632845, 0.42484561456490716, 0.4089298608727881, 0.4360599207869778, 0.4281032218127393, 0.4451547910526811, 0.423766968354468, 0.45931262520892796, 0.48104800347739707, 0.4759509516700356, 0.4778777079553367, 0.47867765588947314, 0.4597627357121996, 0.451824927232802, 0.4522449233537757, 0.45097504388883636, 0.45168986834490044, 0.45338261842445216])
#pstd6 = np.array( [0.6906526296814411, 0.5692968970138468, 0.5716074637913281, 0.5338139647187881, 0.5058808991134134, 0.4927809689906678, 0.5013868843054508, 0.48937477205919516, 0.46247187725342176, 0.45968589158378886, 0.46891640625580816, 0.434902436451853, 0.4435159215481777, 0.4675750514271786, 0.47941383382724184, 0.46622436587125754, 0.45155470618497434, 0.4946079332892684, 0.470112428476884, 0.446084277036574, 0.43610486358411515, 0.4586294398057706, 0.48430013040724895, 0.5042186896850402, 0.4683096401344057, 0.4653949732957733, 0.45273574125395477, 0.44426758402750655, 0.44852064168634104, 0.4463103082940716, 0.4564988926539505, 0.44875907396000253, 0.4377605827015784, 0.43871094212068856, 0.43251709021698576, 0.4348178297245178, 0.41783633932545394, 0.4244451380345961, 0.440742528243011, 0.4258782224382907, 0.42306101665546597, 0.4104562988806826, 0.40964466520578224, 0.40957669065655133, 0.4214577471629111, 0.44033532807137415, 0.4399996933935599, 0.408486114157834, 0.4160001524055635, 0.42554418366199753, 0.4248117145486412])
pstd3 = np.array( [46.168792391144216, 72.6209117291441, 73.15272518815034, 69.45783671070667, 71.12095396763019, 74.95846079689605, 76.07285119194965, 77.26595475674718, 80.45342875187066, 82.6033315193905, 83.07830590994698, 79.02014962932715, 77.95211910470323, 75.33799496360366, 82.94327844851072, 83.9135615527982, 81.66731228292824, 82.87270278065417, 81.73976932125235, 79.39618182387585, 81.22304022400901, 77.8672020568821, 78.76552556084208, 78.8583105551382, 79.92249580542905, 74.96011031643958, 76.8553204917863, 82.8110389482312, 82.76964649138866, 82.14984546971353, 81.46031321849695, 82.03554713844194, 79.667480541705, 77.60518010635639, 80.34698309729038, 79.21316386847819, 79.12916109747606, 79.36191999203193, 79.60593937564384, 80.22529613622615, 89.89605886309617, 87.6202451095745, 87.70890088971267, 83.03921017870167, 81.07434292633668, 84.39798809721442, 89.96988905934519, 83.30005596699061, 90.32128438097259, 92.87969324292418, 91.60093951960567])
pstd4 = np.array( [59.11470903573091, 65.32514813733368, 68.54604997667113, 68.66987518358268, 67.19046225344884, 68.90602564273964, 72.7682511482119, 72.7464119009911, 73.68820302639101, 75.53148977595326, 71.28789221505497, 68.6521444764232, 71.59812259892716, 68.46104120455685, 72.21743647966868, 69.12956998949957, 69.32090227247691, 66.65063718189258, 72.57866092159529, 74.20040389629233, 59.395785185691956, 70.98081784016458, 73.36628360852397, 66.60970849971149, 71.68506803165265, 71.70388821225148, 73.6696870701389, 73.93196479101373, 70.42410631553646, 66.52011227009028, 67.76363679781396, 72.38176199020843, 74.48480929549804, 75.06938494969056, 71.1029800557694, 75.3643078516884, 77.79980191562575, 75.7238207129888, 70.32788725789128, 73.93504718324803, 76.0422215086789, 76.00137351142122, 72.64126573628496, 78.23899299756278, 77.65217235238174, 81.494049780117, 80.66061932877308, 80.86797619870585, 80.64091633892669, 80.8501041885769, 74.99278083125373])
pstd5 = np.array( [59.21327013125141, 63.00255048477713, 64.15813934256796, 66.13044404936917, 63.65662701652834, 62.59460196186186, 69.23761597896095, 68.58409490302792, 70.55844081958834, 69.56813783541821, 68.06603168769946, 66.47294050043007, 66.88340745434441, 68.93729724954656, 66.57326244584543, 65.85702676627203, 66.57355219073997, 67.58051234335254, 66.85901643912241, 64.29021638687287, 67.77978922816038, 68.79482618424996, 68.52914596182231, 67.9138516152114, 69.63184568731741, 65.9775742060815, 66.86125157616364, 71.66293516576596, 71.09173033451206, 71.5291215196175, 72.83856331260547, 73.46746392506356, 70.72106945965103, 72.11744956494047, 72.54327173121615, 70.31143804512216, 76.47679243907514, 77.92816607053493, 79.92545140069565, 77.51610706101629, 78.59232147157539, 80.5888200990628, 80.62426701973968, 81.2421611850702, 80.91417069459513, 80.41103617035476, 77.99561560097465, 77.56798111074862, 77.54507799608436, 77.34130289380074, 77.63755213121726])
pstd6 = np.array( [60.4080718709993, 63.225025001075196, 66.40757475261206, 65.95680362399169, 69.03658937264443, 64.31667874383335, 67.07899652190514, 66.159518763986, 64.13987417274461, 64.44678802181843, 67.11875600277182, 60.63807538716612, 64.87946093680893, 66.41279945427466, 65.33436611149197, 64.72892783846798, 66.72008166619398, 69.31351684463453, 69.55966454206352, 68.1615528055583, 68.39906530661773, 70.69726172815061, 72.97502995592144, 73.71669600265496, 70.34185202854438, 71.0863611502457, 69.06028309178755, 71.45692218274813, 74.50279232179614, 74.10365606683722, 73.61502187349272, 73.04922730909689, 70.31987233603165, 70.47069712797911, 70.14339663654144, 70.51424236300296, 69.96864262330271, 71.85397868380751, 73.72357972129825, 72.41346628795961, 71.35800096646413, 69.98540101391934, 69.97988543533442, 70.14006047726046, 72.80119164843829, 72.8907691522364, 73.71855208067143, 70.5746818191619, 72.41882539112038, 72.20758576530709, 71.40972705530818])

fig, ax = plt.subplots(1, 1, figsize = (3, 3))
plt.plot(pstd3,label="N=3")
plt.plot(pstd4,label="N=4")
plt.plot(pstd5,label="N=5")
plt.plot(pstd6,label="N=6")
plt.xlabel(r"$Time$")
plt.ylabel(r"$\sigma-\bar{x}$")
ax.legend(frameon=False, loc='lower right',labelspacing=0.3,borderpad=0.1,borderaxespad=0.3)
plt.subplots_adjust(bottom=0.17,top=0.93, right=0.95,left=0.22)
plt.savefig("stddev.png", dpi=200, format='png')
plt.close()
#tplot=np.linspace(tstart,tend,(tend-tstart)//tinc+1)
tplot=np.linspace(0,250,251)
fig, ax = plt.subplots(1, 1, figsize = (3.75, 2.5))
#plt.plot(tplot**(1/3),np.array([0.0, 0.0017668604030081265, 0.0017730018999625814, 0.001095265903886646, 0.000857819993594952, 0.0009694694685004069, 0.0006861132921594029, 0.0006299352234461933, 0.0004443897826318629, 0.0005296957338229336, 0.0005751219237865342, 0.0004254168565716791, 0.0002556161140771123, 0.00036362264829457695, 0.00045094783630739616, 0.0003732748082253028, 0.000522260592387393, 0.0005616562257082146, 0.0005754294846788544, 0.00044130507305777594, 0.0005249268116356642, 0.0005612261848397053, 0.0006058721039126997, 0.00041375348640143366, 0.0003048313063982692, 0.00045250165738657645, 0.0004114086485452415, 0.0005070665005925389, 0.0005744165498110814, 0.00035425609612465024, 0.0003423921266269407, 0.00017458943946254261, 0.0003292966475412812, 0.00029419935494632855, 0.00043555117959449537, 0.0004315241995114445, 0.0003364081611156876, 0.00015763599918897336, 0.00013656029757386055, 0.0005002761059283787, 0.0006324917087922426, 0.000492253517445697, 0.00030041230124390754, 0.0003073409962941772, 0.00031648397540094404, 0.0002569451657920197, 0.0004324466808717789, 0.0005348202211758409, 0.0003401900320044751, 0.0002591545573268031, 0.00033175528575724137])/0.005/6,label="N=3")
#plt.plot(tplot**(1/3),np.array([0.0, 0.0011973453340847898, 0.000923646879173075, 0.0008739811424832835, 0.0009490045461060747, 0.000688471976162222, 0.0006038645334277355, 0.000668284980966472, 0.000538904193392088, 0.0003962837465548809, 0.0003480055583901407, 0.0005373474691805332, 0.00038844440411692904, 0.00037878503146574144, 0.0004330148317334523, 0.0004941780704051728, 0.00038631440960224943, 0.00033148460588162926, 0.00038682340121260546, 0.00036113592427707025, 0.00047081528182120816, 0.00033640182765685994, 0.0002192988759396264, 0.00014178096596108666, 0.0002138289298857471, 0.0002950215334136802, 0.00039944048021964214, 0.0004048337922797196, 0.0003782411284721081, 0.00036812971101667796, 0.00044311847341101194, 0.00029542758792358353, 0.00013999698390056815, 0.00014808102813228675, 6.892480800984087e-05, 4.5739327562800835e-05, 0.00013170713430905076, 0.00016901493620487894, 0.0001741940840478846, 0.00023928773841462635, 0.00017302208390191655, 0.0002783093105497729, 0.0002581950937612348, 0.00014769353872247585, 0.0003182517723334114, 0.00030720628906512646, 0.0001716032282021402, 0.0001349791592249107, 0.00014716542960816563, 0.00012481940191842514, 9.481725005166942e-05])/0.005/6,label="N=4")
#plt.plot(tplot**(1/3),np.array([0.0, 0.0009170192204532176, 0.0008781347856165019, 0.0008152648888675175, 0.0005427530983985029, 0.000458500193351191, 0.0005435366752228127, 0.00045184028459688844, 0.0005397886617413808, 0.00043069825200615154, 0.000373602602123336, 0.00027799740484774917, 0.0002483858565197252, 0.00035689676280421903, 0.0002987760959723194, 0.00027472630722711255, 0.0002689859210406429, 0.00021099366445358938, 0.00020315303490368934, 0.0003008647299678037, 0.00030659031104973125, 0.00021377988400650552, 0.00024861136414003235, 0.000321106203680113, 0.0002704577834395565, 0.0002980596523036118, 0.0002016344058516281, 0.0002955649908587989, 0.0002240758510775458, 0.0002494381967033938, 0.00025998411645162997, 0.00022613349013040005, 0.00017921274852219935, 8.680918921390594e-05, 0.00012143713297453252, 0.000271290491343209, 0.00031791732140122847, 0.00017811028990203452, 0.0002777291509071459, 0.00026324999788463285, 0.0002317714305188486, 0.00019855021618446196, 0.00011283503587962924, 8.637562854042336e-05, 5.599436532569762e-05, 0.0002029277757848199, 0.00026241566189929525, 0.00015485690024006436, 6.424903089403137e-05, 3.491168690321922e-05, 3.6676995634469725e-05])/0.005/6,label="N=5")
#plt.plot(tplot**(1/3),np.array([0.0, 0.0007743942478955453, 0.000687380566216944, 0.0006792741857231224, 0.0005899051263950154, 0.00041354455857492574, 0.00040712232973274496, 0.0005151558027205773, 0.0004199558733947078, 0.00035138586178776795, 0.0003901227622804262, 0.00038870408849538644, 0.00029952865446733365, 0.00030749715369261056, 0.00039121668242864224, 0.0003308835671101768, 0.0002840117632782944, 0.00031852747889403286, 0.00028960669675759447, 0.00017451824488859066, 0.00016275720155326523, 0.00010456623215223122, 0.0001693124448798522, 0.0002463786742810455, 0.0002147835122275757, 0.00019997679969946893, 0.00022925698172948175, 0.0002838430534367661, 0.00019182356360187446, 0.00021000175487023769, 0.00021092439653054045, 0.00020364862156148765, 0.0001243135517429443, 0.0001688207506637046, 0.0001016668002585184, 0.0001337702647892848, 0.00022102095178118484, 0.00019658921416610282, 9.430811721967428e-05, 0.00010125847283824986, 9.639007547155326e-05, 0.00010708111512456097, 7.50115698288329e-05, 9.767702308098644e-05, 0.00011956554181096487, 8.981643855892826e-05, 0.00011693124702688359, 0.00012000517708125428, 0.00011785089311941309, 0.0001348127424246001, 0.00018044799928444117])/0.005/6,label="N=6")
#plt.plot(tplot**(1/3),np.array([0.0, 0.0006879444108642757, 0.0006317447424288174, 0.0005052672333723967, 0.0004715636035984069, 0.00041249381198005616, 0.0004560206933168481, 0.00038145823143408456, 0.0003203388959286055, 0.0003929918682393702, 0.0004413013925167571, 0.0002794672572668813, 0.00026137859137329825, 0.0001979771194737104, 0.00027613207861852603, 0.00028316970961818024, 0.00025530374577957543, 0.00021303865913943292, 0.00020593525518632652, 0.0002513618929913152, 0.00025012637512913884, 0.00027568931075662624, 0.00031449885810906023, 0.00026266247646227614, 0.00014849436183264622, 0.00015970766596193152, 0.00020381793214118958, 0.00017982462116427576, 0.00022907341234334008, 0.00018529195098134104, 0.00030893140809565506, 0.00018018669432213758, 0.0001551584649652668, 0.00021848227848243916, 0.00014705782294145838, 0.00021037106630516906, 0.00024138424410047373, 0.0001723531183398711, 0.00018465362349050216, 0.00023131420108498676, 0.000191752638951758, 0.00020312867423830585, 0.00018640528110792101, 0.000133212389120601, 0.00019756989993281813, 0.00016916712602181076, 0.00011453655118451111, 8.845983755886563e-05, 0.00010981299722892749, 9.755895680613204e-05, 9.252123928251529e-05])/0.005/6,label="N=7")
plt.plot(tplot2**(1/3),np.array([0.0, 0.0016193844978624125, 0.002372835817837493, 0.0024035006455284595, 0.002144438925695639, 0.0020060585341161994, 0.0019495501336357114, 0.001766488950248664, 0.001606114776695761, 0.0015066219033722957, 0.0015302193735269663, 0.001482574753825701, 0.0013635792792551296, 0.001196645165486831, 0.0011245703993578587, 0.0011039958986040995, 0.00106958255223131, 0.0009971835441560533, 0.0009968616076148102, 0.0010291722558712908, 0.0009920516367759057, 0.0008507381627006023, 0.0007113503048454238, 0.0006573706258881456, 0.0006936252235709366, 0.0007356134431959661, 0.0007476752792282421, 0.0006768619844769471, 0.0006290123079383106, 0.0006180471976292549, 0.0006743543147521889, 0.0008227412988114251, 0.0008912329530376279, 0.0008035317936022677, 0.0007229954808088519, 0.0006987307161521858, 0.0007020114704312483, 0.0006529362567507078, 0.000567793168584812, 0.0005583815342645886, 0.0005807605558829631, 0.000585021668156181, 0.0005772499260049554, 0.00054773473559346, 0.0005001420564166715, 0.00042910050466045077, 0.0003970416809974654, 0.00041944839617123487, 0.0004670607591155978, 0.0004946422817701457, 0.0005310758714985673, 0.000576157493265127, 0.0006438761889214229, 0.0007241151336013248, 0.0007732058110265245, 0.0007899504157453168, 0.0007757723256832423, 0.0007581233369107301, 0.0007797474425706403, 0.0007755404096878984, 0.0007336483450566127, 0.0006712942080261613, 0.0006132623716958322, 0.0006170374643105377, 0.0006379558483031377, 0.0006419512325295474, 0.0006428439118119098, 0.0006561645208175632, 0.0006345904933729786, 0.0006238787003911016, 0.0005957858192857184, 0.0005571250403550344, 0.0004959354390657487, 0.000430289998818273, 0.0003604462721538219, 0.00029711495913311474, 0.00027723074429045766, 0.0002786897878266512, 0.00030195524316520316, 0.00036951330665362645, 0.0004287291103980386, 0.0004408250305855173, 0.00042521884517314744, 0.0004020428799999504, 0.00036698411683843345, 0.0003307392485575515, 0.000297226934287482, 0.00026015319184543255, 0.0002168897237342311, 0.0001821680005254907, 0.0001956956741718462, 0.00023250764290186972, 0.00026337482798002046, 0.00027412644646154804, 0.0002740316306069207, 0.0003060260003980372, 0.0003402724324913943, 0.00035295214232907124, 0.0003504296291578779, 0.00033213968419228465, 0.000300687388184714, 0.0002536502545861752, 0.00020306146502054742, 0.00015884209509222004, 0.00011936485183228576, 8.81060154178015e-05, 7.721031959795975e-05, 8.584403859536455e-05, 0.00017715630324153522, 0.0003406136293592311, 0.00046193281255893986, 0.0005064785767988865, 0.0005413818980411977, 0.000548185395801779, 0.0005165019438814447, 0.0004716101490789714, 0.00042233753782057335, 0.000363591593405649, 0.0003282875150660202, 0.0003187815406229653, 0.00029229671269969044, 0.0002616877738682128, 0.00024880983888246795, 0.0002471228616560351, 0.00024150293122182558, 0.00022818845834492163, 0.00026861550397308894, 0.00032479575245431534, 0.000386582900202322, 0.0004110661089100468, 0.00040358264000035836, 0.0003836817450830059, 0.0003695803526968714, 0.0003852271417737341, 0.00039543904314990995, 0.00039254607729330296, 0.0003966334265347698, 0.0004348582585376846, 0.0004693447865469229, 0.0004839843623109088, 0.0004683674943389986, 0.0004410258160597891, 0.00040093481250352917, 0.0003530180233858943, 0.0003002349582384312, 0.0002525664315147676, 0.00020580767797377902, 0.00016214964759209304, 0.00012302807631081524, 8.964243277898392e-05, 6.753769089533813e-05, 5.7924022197412036e-05, 5.505780226651248e-05, 5.522160249159884e-05, 5.565657556674504e-05, 5.723845565679014e-05, 0.00010575335887338045, 0.00017682330856329657, 0.0002367864318902387, 0.0002701746977498158, 0.00028097353636228684, 0.0002737887978417686, 0.00025864003255218217, 0.00024021502062183947, 0.00021915114910269246, 0.00019470250533444198, 0.0001645418386763294, 0.00015938135820487472, 0.00018359791676576733, 0.00022371417076338425, 0.00024746935683221124, 0.0002533329859448921, 0.00024864048974577844, 0.00023592427778115364, 0.00021239969438620776, 0.00018778427672580547, 0.0001633971828827293, 0.00013716754353726974, 0.00010970678696798779, 8.858453386539385e-05, 0.00011830752484065095, 0.00018249460940020527, 0.00023882364733577462, 0.000265204720809276, 0.0002654119424516328, 0.00025178628822012094, 0.00023085769794570798, 0.00020104173758844548, 0.00016963610089300765, 0.00013872848256812377, 0.00011268898521736163, 0.000128000000386328, 0.0001731893859766152, 0.00022228625101280668, 0.00025567985271791996, 0.0002773971999380062, 0.00030631569471153297, 0.0003703622907284693, 0.00045438631871390795, 0.000499156228533124, 0.0005179059735703536])/0.005/6,label="N=3", color="#29036e",lw=1)
plt.plot(tplot2**(1/3),np.array([0.0, 0.00035820262807298355, 0.001331322959756963, 0.0013521458160428413, 0.0013014544230753133, 0.0012544763985826483, 0.001271588019474133, 0.0012221736828196075, 0.0011528745228977443, 0.0011390750892717003, 0.001064855881213652, 0.0010529500316242381, 0.00100216477057286, 0.000995553765173597, 0.0009656157805373337, 0.0009618795184327395, 0.0009448400513287031, 0.0008884464639842432, 0.0007593638132318094, 0.0006860922052809978, 0.0006278879737906956, 0.0005667198767222894, 0.000518935077507979, 0.0005208377977732304, 0.0006270827368100778, 0.0006942434011079151, 0.0007050731073037572, 0.0006805276334305363, 0.0006577427773904244, 0.0006255408705210241, 0.0006343583088945882, 0.0006140802898510939, 0.0005914039841352157, 0.0005390509309697463, 0.0005503039953482136, 0.0005942345308393396, 0.0006536713024264492, 0.0006797155359730404, 0.0006653991676915078, 0.000674467797170979, 0.000656005752404734, 0.0006623323160494036, 0.0006340844413628043, 0.0005996759104576141, 0.0005517668691859495, 0.0005248672907358983, 0.00046240290599464584, 0.00044286757772593957, 0.00043888401189552765, 0.0005076935583887965, 0.000523552678637761, 0.0004989400184683482, 0.00042390946622369315, 0.0003770127458789344, 0.00039594809275581553, 0.0004046535229441065, 0.00043064379513534583, 0.0004340523518018768, 0.00047033211796286334, 0.0005213898060893182, 0.0005504238501455503, 0.0005598028153972835, 0.0005289257601539358, 0.000488608600776074, 0.000496630651886532, 0.0005136113832866255, 0.0004626751719555014, 0.0003774419111093775, 0.00031264676027709874, 0.00025898509411484557, 0.00025552843298959734, 0.00025512904927691777, 0.0002707935075165975, 0.0002946922476887449, 0.00032477301683565515, 0.000372711940517659, 0.00039883909273628453, 0.0004019713877276634, 0.0004548037617139722, 0.0005297332326459752, 0.0005733944101041163, 0.0005853874690479405, 0.0005567544886402716, 0.0005157472905253119, 0.00043510859699085505, 0.00034564032623031715, 0.0002678694832641247, 0.00022628214584336225, 0.00021613785905423094, 0.00020455608355865397, 0.00019589843327626614, 0.0001954114877483094, 0.0001915522974148134, 0.00019777792132741787, 0.00020935573320712573, 0.00023816413820675793, 0.0002604380303145678, 0.00026900895602029163, 0.00026174857788189914, 0.0002550207311717441, 0.0002486023457426338, 0.000275068586319936, 0.0003472095979653462, 0.0003930627361921446, 0.00037687672235854174, 0.00033409030308724676, 0.0002861557450242357, 0.00023436544273012903, 0.00019009172238807883, 0.00017794860494302003, 0.00018343557172692285, 0.00017709745534170082, 0.0001761771644449465, 0.00017655813313831098, 0.00016370079433979858, 0.00015243410524527927, 0.0001844727829850005, 0.00027151458805915236, 0.000313310440022323, 0.0003120435554318355, 0.0002930018130240511, 0.00028892144479863985, 0.0002988357618760923, 0.00032014529105900695, 0.00038067693833110264, 0.0004294274959520668, 0.00046742806675874706, 0.0005029617784746743, 0.0004934463621481063, 0.0004532249268482941, 0.0004263426733547533, 0.0003843072080200013, 0.00031777002250285775, 0.0002583831215707767, 0.0002009435629498568, 0.00016967034992963184, 0.00014742883728245806, 0.0001370283225240594, 0.00013899465178932185, 0.00016655374296295649, 0.00022574429673608557, 0.00028753068837550426, 0.000329369362361123, 0.0003399738162675929, 0.0003314496484154572, 0.0003144178277111737, 0.00029357344374849226, 0.00028106208027210033, 0.00027130205658809886, 0.0002563895497281947, 0.00023668360323660022, 0.0002393760424238147, 0.00023846953525154954, 0.00023316841871487298, 0.0002491298705791988, 0.00025086876987007135, 0.0002658297520720236, 0.00027902640554366704, 0.00027552471524687266, 0.00026965942968768, 0.0002818166923123928, 0.0002854416415386004, 0.0002706134335104312, 0.0002495208658869918, 0.00023420425228038252, 0.00022837514671815792, 0.0002265772626740525, 0.0002473781096328216, 0.0002658916803829242, 0.00026267028096300493, 0.0002497680186446589, 0.00022764439644860524, 0.00020522069736140117, 0.0001915338901409789, 0.00018141125642430044, 0.0001714290644691911, 0.00015654540501633984, 0.00014004381539257577, 0.00013430293051263454, 0.00013502045200351534, 0.00013335464528749485, 0.00016213973920789666, 0.0001842946289370605, 0.00019162069885741786, 0.00022513224762814218, 0.0002761185653667694, 0.0003112830621725414, 0.0003287126829549667, 0.00033918618253047376, 0.0003452165392414227, 0.0003370644779709384, 0.0003168040453021164, 0.0003005531986476932, 0.000276554709023029, 0.00025366747207214544, 0.0002685920855472007, 0.00031899446501290217, 0.00038198054545243834, 0.00041117954329178137, 0.0004176025279608689, 0.00040891347096879457])/0.005/6,label="N=4", color="#bf284c",lw=1)
plt.plot(tplot2**(1/3),np.array([0.0, 7.054858519454716e-05, 0.0006319890792380108, 0.0009998062646227016, 0.0008916749105620164, 0.0008123097463334302, 0.0007800525304589838, 0.0007746367524679549, 0.0007090526313995176, 0.0007892941588003681, 0.0008001543528657584, 0.0007749209522334272, 0.000740732474299087, 0.0007629619618846271, 0.0007562527749716044, 0.0007298962582611402, 0.0006530665401252395, 0.0006144163456876413, 0.000601617829364135, 0.000600225594563253, 0.0006322660248320518, 0.0006416787539444495, 0.000580848995123115, 0.000542527607236379, 0.0005365405429817654, 0.0005144149834024012, 0.0005866360771077723, 0.0006264788090756777, 0.0006166569794517123, 0.0005783136399432212, 0.0005085706391680107, 0.0005332398137618038, 0.0005462714523240075, 0.0005397341405040013, 0.0005064901270126138, 0.00045848849518860866, 0.00044871657007464574, 0.00048029370770659446, 0.00048213523773891413, 0.000466794006817399, 0.0004494344784855656, 0.0004269957305379968, 0.0004200743836361811, 0.0004147287406051623, 0.00039351543954762707, 0.00040671767249906394, 0.00042724701082467526, 0.000447703847912412, 0.0005109751231393962, 0.0005331946795758029, 0.0004914878575407415, 0.00043796421266224225, 0.0004006896964403246, 0.0003965588523595973, 0.0003715478022666003, 0.0003865718870886519, 0.00038604792222361365, 0.00040389687330631176, 0.00043263678007880463, 0.0004602420216609825, 0.0004873810434951732, 0.0005078257022143557, 0.0005117701434688969, 0.0004903577585407004, 0.00045384683354040585, 0.0004297697625181244, 0.0004461298227869416, 0.0004523701762285465, 0.0004056655073081848, 0.00035665055160079035, 0.0003277221279024093, 0.00032028132294520227, 0.0003028642677500666, 0.00028567974184787463, 0.00025971449685216187, 0.00025800240527122854, 0.00028429888292608836, 0.00030238126332692456, 0.00031018257480012253, 0.00031242962116043014, 0.00031790664818758245, 0.00030106580191762057, 0.0002705358713837208, 0.00026404084656659097, 0.00024108939230508278, 0.00022758384474792898, 0.00021047748606640827, 0.00019872294756666925, 0.0002131641846336232, 0.00022158951465328771, 0.00021721824851321728, 0.00021419797082208186, 0.00023555199948074583, 0.00025510023464181354, 0.000270788444051629, 0.0002720546910580573, 0.0002487747375011801, 0.0002266386288474684, 0.0002269666012420014, 0.00022809417873695213, 0.0002190520116737922, 0.00019885374724085242, 0.00020544937686464094, 0.0002206319829134804, 0.0002549505985807143, 0.00027871042944264816, 0.00028695592702448434, 0.0002810201929237389, 0.00026609061409684246, 0.00025207408094212895, 0.0002640274364503288, 0.00026368866530081134, 0.00025492759342058666, 0.0002596629954167381, 0.00024270705552207735, 0.00021013056542669667, 0.0001840258078665022, 0.00017359516966613926, 0.00018164585860609307, 0.00019246697408690705, 0.00019684812618189404, 0.00022908385439723698, 0.0002960024027894571, 0.000331512101348233, 0.0003308771043006173, 0.0003357858649059562, 0.0003328979766049514, 0.00030213076281293354, 0.0002764616114916911, 0.00026695511329899636, 0.0002685264757579702, 0.0002601391284961637, 0.0002517661625596058, 0.00024298847438344016, 0.00022060247354380427, 0.0001972539892868684, 0.00017829364813106495, 0.0001593088449383346, 0.00014702661569420582, 0.0001384861724918014, 0.00013777936799751916, 0.00016243294313425026, 0.00017455337588371988, 0.00018745150967264365, 0.00019692355219338436, 0.00019514517701276206, 0.00022469573629416641, 0.0002618388099781662, 0.00028661830526456264, 0.00028206301690874636, 0.00026487316573624693, 0.0002581037543888833, 0.00025670051855889884, 0.00026271529698646543, 0.0002575629196888369, 0.0002426059903802223, 0.000223845843539654, 0.00020877228201814305, 0.00021686528275331016, 0.00021457066089587164, 0.00020368996795941808, 0.0001896600157620242, 0.00018052880586980034, 0.0001685559823164796, 0.00016295922706735522, 0.00016650883067849913, 0.00016662702913063573, 0.00015992858600580626, 0.0001507563104874599, 0.00014481705750659987, 0.00013295008859785215, 0.00013328094181372718, 0.0001576349921617155, 0.0001745821607448942, 0.00018340686149590936, 0.000184401317380832, 0.00017951202681313095, 0.00016943421141160582, 0.00018400732913552014, 0.00020539787656311182, 0.00021813410450766655, 0.00022278897723015123, 0.00022545284720818908, 0.00022066461901583658, 0.00020966993545608927, 0.00019598531669003767, 0.00018463700023811384, 0.0001841058845815538, 0.0001857191224482747, 0.00018653287830060035, 0.00020372717132405437, 0.00023785828737271744, 0.00026436437554390734, 0.0002716764963718048, 0.00026504872233729587, 0.00024984717769885393, 0.00022664496526152617, 0.0002022596786134503, 0.0001864569824830253, 0.0001751348013955678, 0.00016392969235554773])/0.005/6,label="N=5", color="#eda606",lw=1)
plt.plot(tplot2**(1/3),np.array([0.0, 2.0225859024152504e-05, 0.00013401962929922718, 0.0005878679700866548, 0.000773453908239804, 0.0007676105959788363, 0.0007941154288018775, 0.000738422248891151, 0.0006786829556412208, 0.0006738000880635276, 0.0006650719480366226, 0.0006165097194577818, 0.0006669190790196155, 0.0006781099642433136, 0.0006450498111239657, 0.000609459781465546, 0.0005804216420612397, 0.0005904296879635374, 0.0005723258149924989, 0.0005748452608754176, 0.000573544447880996, 0.0005465416522646154, 0.0005644503678651135, 0.0005454128192409848, 0.0005080409925937946, 0.0005084403353405094, 0.0005352192471650684, 0.000523508759185599, 0.0005076631931084126, 0.0005180212183105822, 0.0005010965240453873, 0.0004577749091233126, 0.0004690004080065152, 0.000464665641942412, 0.000449789226936924, 0.00044699688580357986, 0.00045773817776701976, 0.00046966242138801766, 0.00046859316393438566, 0.00044642603134641807, 0.00042689352914379423, 0.00040510372413031634, 0.00039971316824067015, 0.0004002651408038642, 0.0003930386455538429, 0.0003886912676534633, 0.0004007120800468064, 0.0003743357233535619, 0.0003491958425767223, 0.000335029043388675, 0.00033000908984465036, 0.00032363843374526416, 0.0003244929026033128, 0.00032744127676312423, 0.0003130353594681162, 0.0003062053250680872, 0.0003177947934906815, 0.0003225516816003288, 0.0003067311019465564, 0.0003031099109905809, 0.00029466304110267575, 0.0002965068702779601, 0.0003157133408959973, 0.00032049220118888046, 0.0003232044037946926, 0.00038091371644357686, 0.0004068049919528883, 0.0003790238032071322, 0.0003500961618786034, 0.0003303538863864755, 0.0003014392416405791, 0.0002876202699731419, 0.00028888584435455335, 0.0003099682857798964, 0.0003261779814902625, 0.00033503060025275304, 0.00033130243220354184, 0.0003083123355181151, 0.0002849061814173104, 0.00027122604446156204, 0.000278152787228122, 0.00026412717546798613, 0.0002349083897188679, 0.00020390745153164554, 0.0001839348119913276, 0.00018944306163566459, 0.0002135707448750316, 0.00022147498200039722, 0.00023454131120988, 0.0002593858353849072, 0.0002805599130660848, 0.00031731305675982856, 0.00033294649060181046, 0.00032505183284310533, 0.0003047898341221235, 0.0002934720374424483, 0.0002808275950891538, 0.00028738643125097703, 0.0003047582344954271, 0.00031553369297188745, 0.0003014702161000064, 0.00027242855652495125, 0.0002490723148476597, 0.00024239448983818626, 0.00024702371185996157, 0.0002484719753238695, 0.0002773057020710848, 0.0003036876852316279, 0.0002900816731300779, 0.0002621823357316593, 0.0002561816920314859, 0.00028607473357710313, 0.00032398551150492657, 0.0003404785271824587, 0.00033463776284196894, 0.0003326559822905237, 0.00034467663810975945, 0.0003398750082346891, 0.00034675344259455773, 0.0003610437155663625, 0.0003513778897895027, 0.000336028502594522, 0.00030908696733570197, 0.00028475439694180534, 0.00026147451190469434, 0.00023746672493400896, 0.00023206464635398748, 0.00023381471306540416, 0.0002551023537161839, 0.0002798471724229777, 0.0002816661073048801, 0.0002678736136805882, 0.0002441220578324504, 0.00023247984097775123, 0.0002561675359775321, 0.0002549849687684141, 0.0002371587028888768, 0.00023263337207790312, 0.0002555751070165669, 0.0002749658771323264, 0.00027655464923219967, 0.0002645006639827658, 0.00024579101304392654, 0.00022155510808540333, 0.00019702473882817043, 0.00018468361547966075, 0.00019965070011604243, 0.00022113862144664616, 0.0002301085632100057, 0.00024032293137967947, 0.00023872574521856659, 0.00024367739985477096, 0.00025265861128440044, 0.0002413155974978466, 0.00021287617834279856, 0.0001811673062972783, 0.00014955343270966259, 0.00012069220229252814, 0.00010662689512189355, 0.0001053018561852272, 0.00011159408577260189, 0.00011782160144605763, 0.00013841431146074186, 0.00015819871426534903, 0.00016682947310752428, 0.00016293072526144106, 0.00015200057880073435, 0.0001539094347078063, 0.00017995216769250822, 0.00020501017169007683, 0.0002209044452233224, 0.00022357960897877836, 0.0002104401829839145, 0.00020116854761853824, 0.00018570125219821167, 0.00017709331977142073, 0.0001913375319058751, 0.00020003201785778415, 0.00019224491637637812, 0.00018329800212009087, 0.0002234607913230469, 0.0002677474136445459, 0.00028102115875032046, 0.00026987435685734367, 0.0002577172616793242, 0.00023821093617652813, 0.00023255722349564974, 0.0002372902634903082, 0.00025641233978259455, 0.0002792837297036793, 0.0002879990372350765, 0.0002812455247839415, 0.0002705450738918121, 0.0002522230609550512, 0.0002323663063363049, 0.00022081862114335833, 0.00020654402467065714, 0.0001995577783446864, 0.0002065633991306644, 0.000216816616937625, 0.0002200566015791604])/0.005/6,label="N=6", color="#007ba7",lw=1)
plt.plot(tplot2**(1/3),np.array([0.0, 1.0491923324158411e-05, 3.132289912851884e-05, 0.00017402525954906048, 0.0005518344658916765, 0.0007298171084194043, 0.0007139348174750804, 0.0006514045149039202, 0.0005872615147659405, 0.0005755455559000059, 0.0005674591992631309, 0.0005530814065261715, 0.0005430903120702585, 0.0005325582165441044, 0.0004956300438542371, 0.00047759481649859787, 0.00045934949275272606, 0.00044126697476869095, 0.00047169533638359595, 0.00047139750303350713, 0.00044539569530833387, 0.00045530689957405267, 0.0004663451806097497, 0.0004668683785649258, 0.0004704237887030353, 0.0004888585436339551, 0.0004879491812094158, 0.0004635390471958208, 0.00042749818359527007, 0.00040444477727361223, 0.0003908043075393887, 0.00038204592550292996, 0.00039959200582362445, 0.00041800248521610997, 0.0004229570000037419, 0.0004107685832775741, 0.0003764846900078306, 0.0003384679482803369, 0.000318833569677913, 0.0003272089994866699, 0.00035452636723004344, 0.00035764394632070695, 0.00035346353165429837, 0.00035526450265143723, 0.00035413789893611535, 0.0003550975477214586, 0.00034547833783367214, 0.00032658371907132427, 0.00032979330472859706, 0.00034076012176943244, 0.000333612010678717, 0.0003085565289271077, 0.000298369510029714, 0.0002860638437144948, 0.0002703744375849724, 0.00026551197384643417, 0.00027490318616055426, 0.0002851442805977189, 0.0002850113548586396, 0.0003006309363930344, 0.00029923089218385234, 0.0002898654435089873, 0.0002883140157281707, 0.0002725845588378123, 0.0002600489353688679, 0.0002649838598317054, 0.0002670212761574302, 0.0002535539594767338, 0.00024479884675990043, 0.00023783562899143577, 0.0002460784411745552, 0.0002726758420037112, 0.0002824467182189605, 0.0002939955514106358, 0.0002966265166328063, 0.00029851468158823404, 0.00028997656566900567, 0.000300676215546421, 0.00031540486333024565, 0.0003050873599212365, 0.00028904949278776544, 0.0002605207980705338, 0.00022816446996252505, 0.00020918988574172915, 0.0002035075016700681, 0.00020865415841495776, 0.00022999643433924027, 0.00024109446927516256, 0.00024281649652529817, 0.0002454441658240806, 0.0002974958381369566, 0.0003408424071282354, 0.00035626551224267696, 0.00033992995366598564, 0.0003244928227349916, 0.0003267898712396746, 0.0003225264536276373, 0.000310254374392127, 0.00028704280230929083, 0.0002626733276256889, 0.0002496409092145438, 0.00023872509465317597, 0.00021436800403171614, 0.00019930840780738124, 0.00019671226664974234, 0.00019460312982016225, 0.00019897881918904583, 0.0001949569927287707, 0.00019861777222456565, 0.0002094956517937612, 0.00021077464084221263, 0.00021252654073102836, 0.0002292960332493775, 0.00026007352539148204, 0.0002787737901143155, 0.0002659503799374299, 0.00024562564278414874, 0.00021809390159856454, 0.00020082726153810955, 0.00019840063213591905, 0.00019708323069674412, 0.000193190568662271, 0.00018668568358904902, 0.0001806994481572707, 0.00016984740919179797, 0.00016245405641360802, 0.00016721753500608264, 0.00017818858072980398, 0.00018312652992501978, 0.00018742062147178806, 0.00021182099218875232, 0.00024367976906568614, 0.0002502964638092859, 0.0002409686913815863, 0.00022752538315617586, 0.00022534025856082852, 0.00021976779587942635, 0.00020810227564626527, 0.0002046440106600548, 0.00019894603987976605, 0.00019394557533048453, 0.0001943538175219939, 0.00020299565882084676, 0.00022142492609175167, 0.0002276150776864171, 0.00023207122736838194, 0.0002330877311963505, 0.0002200921393829733, 0.00019858270970423138, 0.0001825973215358003, 0.0001934620895187001, 0.000218150446076662, 0.00023522168082037526, 0.00023287013183174264, 0.00022631848577468684, 0.0002232641479248772, 0.00023534309236755759, 0.00025223463724781, 0.0002650745612682228, 0.00025870793898975726, 0.0002370392114866105, 0.00021236796772643879, 0.00020005891261826013, 0.00020099363100227168, 0.00023004736458864724, 0.0002474361751097767, 0.00026484986885785377, 0.00026103422841700514, 0.0002481828849546232, 0.0002274605626353507, 0.00020460533854535937, 0.0001823366257674612, 0.00018267035180780092, 0.0001835607167003986, 0.00016745221885473802, 0.00014649024879308055, 0.00012887707484680473, 0.00011343046185336953, 0.00010935334434132131, 0.00011964172402309329, 0.00012932188875246299, 0.0001363771005882078, 0.00013857289573853917, 0.00013563258710859837, 0.00013470081898558654, 0.00015814433967483978, 0.00016984239113585387, 0.0001785665611740952, 0.00018124340342509258, 0.00017768967715685538, 0.00018204694299232049, 0.00018498847541461, 0.00017806085715034068, 0.00016473109169084496, 0.00015309240368812732, 0.00013777949382100471, 0.00012617573605789583, 0.0001279873864861624, 0.0001366202601068722, 0.00016064202983249212, 0.00018728606088773588])/0.005/6,label="N=7", color="#56da52",lw=1)
plt.scatter(tplot2**(1/3),np.array([0.0, 0.0016193844978624125, 0.002372835817837493, 0.0024035006455284595, 0.002144438925695639, 0.0020060585341161994, 0.0019495501336357114, 0.001766488950248664, 0.001606114776695761, 0.0015066219033722957, 0.0015302193735269663, 0.001482574753825701, 0.0013635792792551296, 0.001196645165486831, 0.0011245703993578587, 0.0011039958986040995, 0.00106958255223131, 0.0009971835441560533, 0.0009968616076148102, 0.0010291722558712908, 0.0009920516367759057, 0.0008507381627006023, 0.0007113503048454238, 0.0006573706258881456, 0.0006936252235709366, 0.0007356134431959661, 0.0007476752792282421, 0.0006768619844769471, 0.0006290123079383106, 0.0006180471976292549, 0.0006743543147521889, 0.0008227412988114251, 0.0008912329530376279, 0.0008035317936022677, 0.0007229954808088519, 0.0006987307161521858, 0.0007020114704312483, 0.0006529362567507078, 0.000567793168584812, 0.0005583815342645886, 0.0005807605558829631, 0.000585021668156181, 0.0005772499260049554, 0.00054773473559346, 0.0005001420564166715, 0.00042910050466045077, 0.0003970416809974654, 0.00041944839617123487, 0.0004670607591155978, 0.0004946422817701457, 0.0005310758714985673, 0.000576157493265127, 0.0006438761889214229, 0.0007241151336013248, 0.0007732058110265245, 0.0007899504157453168, 0.0007757723256832423, 0.0007581233369107301, 0.0007797474425706403, 0.0007755404096878984, 0.0007336483450566127, 0.0006712942080261613, 0.0006132623716958322, 0.0006170374643105377, 0.0006379558483031377, 0.0006419512325295474, 0.0006428439118119098, 0.0006561645208175632, 0.0006345904933729786, 0.0006238787003911016, 0.0005957858192857184, 0.0005571250403550344, 0.0004959354390657487, 0.000430289998818273, 0.0003604462721538219, 0.00029711495913311474, 0.00027723074429045766, 0.0002786897878266512, 0.00030195524316520316, 0.00036951330665362645, 0.0004287291103980386, 0.0004408250305855173, 0.00042521884517314744, 0.0004020428799999504, 0.00036698411683843345, 0.0003307392485575515, 0.000297226934287482, 0.00026015319184543255, 0.0002168897237342311, 0.0001821680005254907, 0.0001956956741718462, 0.00023250764290186972, 0.00026337482798002046, 0.00027412644646154804, 0.0002740316306069207, 0.0003060260003980372, 0.0003402724324913943, 0.00035295214232907124, 0.0003504296291578779, 0.00033213968419228465, 0.000300687388184714, 0.0002536502545861752, 0.00020306146502054742, 0.00015884209509222004, 0.00011936485183228576, 8.81060154178015e-05, 7.721031959795975e-05, 8.584403859536455e-05, 0.00017715630324153522, 0.0003406136293592311, 0.00046193281255893986, 0.0005064785767988865, 0.0005413818980411977, 0.000548185395801779, 0.0005165019438814447, 0.0004716101490789714, 0.00042233753782057335, 0.000363591593405649, 0.0003282875150660202, 0.0003187815406229653, 0.00029229671269969044, 0.0002616877738682128, 0.00024880983888246795, 0.0002471228616560351, 0.00024150293122182558, 0.00022818845834492163, 0.00026861550397308894, 0.00032479575245431534, 0.000386582900202322, 0.0004110661089100468, 0.00040358264000035836, 0.0003836817450830059, 0.0003695803526968714, 0.0003852271417737341, 0.00039543904314990995, 0.00039254607729330296, 0.0003966334265347698, 0.0004348582585376846, 0.0004693447865469229, 0.0004839843623109088, 0.0004683674943389986, 0.0004410258160597891, 0.00040093481250352917, 0.0003530180233858943, 0.0003002349582384312, 0.0002525664315147676, 0.00020580767797377902, 0.00016214964759209304, 0.00012302807631081524, 8.964243277898392e-05, 6.753769089533813e-05, 5.7924022197412036e-05, 5.505780226651248e-05, 5.522160249159884e-05, 5.565657556674504e-05, 5.723845565679014e-05, 0.00010575335887338045, 0.00017682330856329657, 0.0002367864318902387, 0.0002701746977498158, 0.00028097353636228684, 0.0002737887978417686, 0.00025864003255218217, 0.00024021502062183947, 0.00021915114910269246, 0.00019470250533444198, 0.0001645418386763294, 0.00015938135820487472, 0.00018359791676576733, 0.00022371417076338425, 0.00024746935683221124, 0.0002533329859448921, 0.00024864048974577844, 0.00023592427778115364, 0.00021239969438620776, 0.00018778427672580547, 0.0001633971828827293, 0.00013716754353726974, 0.00010970678696798779, 8.858453386539385e-05, 0.00011830752484065095, 0.00018249460940020527, 0.00023882364733577462, 0.000265204720809276, 0.0002654119424516328, 0.00025178628822012094, 0.00023085769794570798, 0.00020104173758844548, 0.00016963610089300765, 0.00013872848256812377, 0.00011268898521736163, 0.000128000000386328, 0.0001731893859766152, 0.00022228625101280668, 0.00025567985271791996, 0.0002773971999380062, 0.00030631569471153297, 0.0003703622907284693, 0.00045438631871390795, 0.000499156228533124, 0.0005179059735703536])/0.005/6, color="#29036e",s=5,edgecolors='black',lw=1/4,zorder=10)
plt.scatter(tplot2**(1/3),np.array([0.0, 0.00035820262807298355, 0.001331322959756963, 0.0013521458160428413, 0.0013014544230753133, 0.0012544763985826483, 0.001271588019474133, 0.0012221736828196075, 0.0011528745228977443, 0.0011390750892717003, 0.001064855881213652, 0.0010529500316242381, 0.00100216477057286, 0.000995553765173597, 0.0009656157805373337, 0.0009618795184327395, 0.0009448400513287031, 0.0008884464639842432, 0.0007593638132318094, 0.0006860922052809978, 0.0006278879737906956, 0.0005667198767222894, 0.000518935077507979, 0.0005208377977732304, 0.0006270827368100778, 0.0006942434011079151, 0.0007050731073037572, 0.0006805276334305363, 0.0006577427773904244, 0.0006255408705210241, 0.0006343583088945882, 0.0006140802898510939, 0.0005914039841352157, 0.0005390509309697463, 0.0005503039953482136, 0.0005942345308393396, 0.0006536713024264492, 0.0006797155359730404, 0.0006653991676915078, 0.000674467797170979, 0.000656005752404734, 0.0006623323160494036, 0.0006340844413628043, 0.0005996759104576141, 0.0005517668691859495, 0.0005248672907358983, 0.00046240290599464584, 0.00044286757772593957, 0.00043888401189552765, 0.0005076935583887965, 0.000523552678637761, 0.0004989400184683482, 0.00042390946622369315, 0.0003770127458789344, 0.00039594809275581553, 0.0004046535229441065, 0.00043064379513534583, 0.0004340523518018768, 0.00047033211796286334, 0.0005213898060893182, 0.0005504238501455503, 0.0005598028153972835, 0.0005289257601539358, 0.000488608600776074, 0.000496630651886532, 0.0005136113832866255, 0.0004626751719555014, 0.0003774419111093775, 0.00031264676027709874, 0.00025898509411484557, 0.00025552843298959734, 0.00025512904927691777, 0.0002707935075165975, 0.0002946922476887449, 0.00032477301683565515, 0.000372711940517659, 0.00039883909273628453, 0.0004019713877276634, 0.0004548037617139722, 0.0005297332326459752, 0.0005733944101041163, 0.0005853874690479405, 0.0005567544886402716, 0.0005157472905253119, 0.00043510859699085505, 0.00034564032623031715, 0.0002678694832641247, 0.00022628214584336225, 0.00021613785905423094, 0.00020455608355865397, 0.00019589843327626614, 0.0001954114877483094, 0.0001915522974148134, 0.00019777792132741787, 0.00020935573320712573, 0.00023816413820675793, 0.0002604380303145678, 0.00026900895602029163, 0.00026174857788189914, 0.0002550207311717441, 0.0002486023457426338, 0.000275068586319936, 0.0003472095979653462, 0.0003930627361921446, 0.00037687672235854174, 0.00033409030308724676, 0.0002861557450242357, 0.00023436544273012903, 0.00019009172238807883, 0.00017794860494302003, 0.00018343557172692285, 0.00017709745534170082, 0.0001761771644449465, 0.00017655813313831098, 0.00016370079433979858, 0.00015243410524527927, 0.0001844727829850005, 0.00027151458805915236, 0.000313310440022323, 0.0003120435554318355, 0.0002930018130240511, 0.00028892144479863985, 0.0002988357618760923, 0.00032014529105900695, 0.00038067693833110264, 0.0004294274959520668, 0.00046742806675874706, 0.0005029617784746743, 0.0004934463621481063, 0.0004532249268482941, 0.0004263426733547533, 0.0003843072080200013, 0.00031777002250285775, 0.0002583831215707767, 0.0002009435629498568, 0.00016967034992963184, 0.00014742883728245806, 0.0001370283225240594, 0.00013899465178932185, 0.00016655374296295649, 0.00022574429673608557, 0.00028753068837550426, 0.000329369362361123, 0.0003399738162675929, 0.0003314496484154572, 0.0003144178277111737, 0.00029357344374849226, 0.00028106208027210033, 0.00027130205658809886, 0.0002563895497281947, 0.00023668360323660022, 0.0002393760424238147, 0.00023846953525154954, 0.00023316841871487298, 0.0002491298705791988, 0.00025086876987007135, 0.0002658297520720236, 0.00027902640554366704, 0.00027552471524687266, 0.00026965942968768, 0.0002818166923123928, 0.0002854416415386004, 0.0002706134335104312, 0.0002495208658869918, 0.00023420425228038252, 0.00022837514671815792, 0.0002265772626740525, 0.0002473781096328216, 0.0002658916803829242, 0.00026267028096300493, 0.0002497680186446589, 0.00022764439644860524, 0.00020522069736140117, 0.0001915338901409789, 0.00018141125642430044, 0.0001714290644691911, 0.00015654540501633984, 0.00014004381539257577, 0.00013430293051263454, 0.00013502045200351534, 0.00013335464528749485, 0.00016213973920789666, 0.0001842946289370605, 0.00019162069885741786, 0.00022513224762814218, 0.0002761185653667694, 0.0003112830621725414, 0.0003287126829549667, 0.00033918618253047376, 0.0003452165392414227, 0.0003370644779709384, 0.0003168040453021164, 0.0003005531986476932, 0.000276554709023029, 0.00025366747207214544, 0.0002685920855472007, 0.00031899446501290217, 0.00038198054545243834, 0.00041117954329178137, 0.0004176025279608689, 0.00040891347096879457])/0.005/6, color="#bf284c",s=5,edgecolors='black',lw=1/4,zorder=10)
plt.scatter(tplot2**(1/3),np.array([0.0, 7.054858519454716e-05, 0.0006319890792380108, 0.0009998062646227016, 0.0008916749105620164, 0.0008123097463334302, 0.0007800525304589838, 0.0007746367524679549, 0.0007090526313995176, 0.0007892941588003681, 0.0008001543528657584, 0.0007749209522334272, 0.000740732474299087, 0.0007629619618846271, 0.0007562527749716044, 0.0007298962582611402, 0.0006530665401252395, 0.0006144163456876413, 0.000601617829364135, 0.000600225594563253, 0.0006322660248320518, 0.0006416787539444495, 0.000580848995123115, 0.000542527607236379, 0.0005365405429817654, 0.0005144149834024012, 0.0005866360771077723, 0.0006264788090756777, 0.0006166569794517123, 0.0005783136399432212, 0.0005085706391680107, 0.0005332398137618038, 0.0005462714523240075, 0.0005397341405040013, 0.0005064901270126138, 0.00045848849518860866, 0.00044871657007464574, 0.00048029370770659446, 0.00048213523773891413, 0.000466794006817399, 0.0004494344784855656, 0.0004269957305379968, 0.0004200743836361811, 0.0004147287406051623, 0.00039351543954762707, 0.00040671767249906394, 0.00042724701082467526, 0.000447703847912412, 0.0005109751231393962, 0.0005331946795758029, 0.0004914878575407415, 0.00043796421266224225, 0.0004006896964403246, 0.0003965588523595973, 0.0003715478022666003, 0.0003865718870886519, 0.00038604792222361365, 0.00040389687330631176, 0.00043263678007880463, 0.0004602420216609825, 0.0004873810434951732, 0.0005078257022143557, 0.0005117701434688969, 0.0004903577585407004, 0.00045384683354040585, 0.0004297697625181244, 0.0004461298227869416, 0.0004523701762285465, 0.0004056655073081848, 0.00035665055160079035, 0.0003277221279024093, 0.00032028132294520227, 0.0003028642677500666, 0.00028567974184787463, 0.00025971449685216187, 0.00025800240527122854, 0.00028429888292608836, 0.00030238126332692456, 0.00031018257480012253, 0.00031242962116043014, 0.00031790664818758245, 0.00030106580191762057, 0.0002705358713837208, 0.00026404084656659097, 0.00024108939230508278, 0.00022758384474792898, 0.00021047748606640827, 0.00019872294756666925, 0.0002131641846336232, 0.00022158951465328771, 0.00021721824851321728, 0.00021419797082208186, 0.00023555199948074583, 0.00025510023464181354, 0.000270788444051629, 0.0002720546910580573, 0.0002487747375011801, 0.0002266386288474684, 0.0002269666012420014, 0.00022809417873695213, 0.0002190520116737922, 0.00019885374724085242, 0.00020544937686464094, 0.0002206319829134804, 0.0002549505985807143, 0.00027871042944264816, 0.00028695592702448434, 0.0002810201929237389, 0.00026609061409684246, 0.00025207408094212895, 0.0002640274364503288, 0.00026368866530081134, 0.00025492759342058666, 0.0002596629954167381, 0.00024270705552207735, 0.00021013056542669667, 0.0001840258078665022, 0.00017359516966613926, 0.00018164585860609307, 0.00019246697408690705, 0.00019684812618189404, 0.00022908385439723698, 0.0002960024027894571, 0.000331512101348233, 0.0003308771043006173, 0.0003357858649059562, 0.0003328979766049514, 0.00030213076281293354, 0.0002764616114916911, 0.00026695511329899636, 0.0002685264757579702, 0.0002601391284961637, 0.0002517661625596058, 0.00024298847438344016, 0.00022060247354380427, 0.0001972539892868684, 0.00017829364813106495, 0.0001593088449383346, 0.00014702661569420582, 0.0001384861724918014, 0.00013777936799751916, 0.00016243294313425026, 0.00017455337588371988, 0.00018745150967264365, 0.00019692355219338436, 0.00019514517701276206, 0.00022469573629416641, 0.0002618388099781662, 0.00028661830526456264, 0.00028206301690874636, 0.00026487316573624693, 0.0002581037543888833, 0.00025670051855889884, 0.00026271529698646543, 0.0002575629196888369, 0.0002426059903802223, 0.000223845843539654, 0.00020877228201814305, 0.00021686528275331016, 0.00021457066089587164, 0.00020368996795941808, 0.0001896600157620242, 0.00018052880586980034, 0.0001685559823164796, 0.00016295922706735522, 0.00016650883067849913, 0.00016662702913063573, 0.00015992858600580626, 0.0001507563104874599, 0.00014481705750659987, 0.00013295008859785215, 0.00013328094181372718, 0.0001576349921617155, 0.0001745821607448942, 0.00018340686149590936, 0.000184401317380832, 0.00017951202681313095, 0.00016943421141160582, 0.00018400732913552014, 0.00020539787656311182, 0.00021813410450766655, 0.00022278897723015123, 0.00022545284720818908, 0.00022066461901583658, 0.00020966993545608927, 0.00019598531669003767, 0.00018463700023811384, 0.0001841058845815538, 0.0001857191224482747, 0.00018653287830060035, 0.00020372717132405437, 0.00023785828737271744, 0.00026436437554390734, 0.0002716764963718048, 0.00026504872233729587, 0.00024984717769885393, 0.00022664496526152617, 0.0002022596786134503, 0.0001864569824830253, 0.0001751348013955678, 0.00016392969235554773])/0.005/6, color="#eda606",s=5,edgecolors='black',lw=1/4,zorder=10)
plt.scatter(tplot2**(1/3),np.array([0.0, 2.0225859024152504e-05, 0.00013401962929922718, 0.0005878679700866548, 0.000773453908239804, 0.0007676105959788363, 0.0007941154288018775, 0.000738422248891151, 0.0006786829556412208, 0.0006738000880635276, 0.0006650719480366226, 0.0006165097194577818, 0.0006669190790196155, 0.0006781099642433136, 0.0006450498111239657, 0.000609459781465546, 0.0005804216420612397, 0.0005904296879635374, 0.0005723258149924989, 0.0005748452608754176, 0.000573544447880996, 0.0005465416522646154, 0.0005644503678651135, 0.0005454128192409848, 0.0005080409925937946, 0.0005084403353405094, 0.0005352192471650684, 0.000523508759185599, 0.0005076631931084126, 0.0005180212183105822, 0.0005010965240453873, 0.0004577749091233126, 0.0004690004080065152, 0.000464665641942412, 0.000449789226936924, 0.00044699688580357986, 0.00045773817776701976, 0.00046966242138801766, 0.00046859316393438566, 0.00044642603134641807, 0.00042689352914379423, 0.00040510372413031634, 0.00039971316824067015, 0.0004002651408038642, 0.0003930386455538429, 0.0003886912676534633, 0.0004007120800468064, 0.0003743357233535619, 0.0003491958425767223, 0.000335029043388675, 0.00033000908984465036, 0.00032363843374526416, 0.0003244929026033128, 0.00032744127676312423, 0.0003130353594681162, 0.0003062053250680872, 0.0003177947934906815, 0.0003225516816003288, 0.0003067311019465564, 0.0003031099109905809, 0.00029466304110267575, 0.0002965068702779601, 0.0003157133408959973, 0.00032049220118888046, 0.0003232044037946926, 0.00038091371644357686, 0.0004068049919528883, 0.0003790238032071322, 0.0003500961618786034, 0.0003303538863864755, 0.0003014392416405791, 0.0002876202699731419, 0.00028888584435455335, 0.0003099682857798964, 0.0003261779814902625, 0.00033503060025275304, 0.00033130243220354184, 0.0003083123355181151, 0.0002849061814173104, 0.00027122604446156204, 0.000278152787228122, 0.00026412717546798613, 0.0002349083897188679, 0.00020390745153164554, 0.0001839348119913276, 0.00018944306163566459, 0.0002135707448750316, 0.00022147498200039722, 0.00023454131120988, 0.0002593858353849072, 0.0002805599130660848, 0.00031731305675982856, 0.00033294649060181046, 0.00032505183284310533, 0.0003047898341221235, 0.0002934720374424483, 0.0002808275950891538, 0.00028738643125097703, 0.0003047582344954271, 0.00031553369297188745, 0.0003014702161000064, 0.00027242855652495125, 0.0002490723148476597, 0.00024239448983818626, 0.00024702371185996157, 0.0002484719753238695, 0.0002773057020710848, 0.0003036876852316279, 0.0002900816731300779, 0.0002621823357316593, 0.0002561816920314859, 0.00028607473357710313, 0.00032398551150492657, 0.0003404785271824587, 0.00033463776284196894, 0.0003326559822905237, 0.00034467663810975945, 0.0003398750082346891, 0.00034675344259455773, 0.0003610437155663625, 0.0003513778897895027, 0.000336028502594522, 0.00030908696733570197, 0.00028475439694180534, 0.00026147451190469434, 0.00023746672493400896, 0.00023206464635398748, 0.00023381471306540416, 0.0002551023537161839, 0.0002798471724229777, 0.0002816661073048801, 0.0002678736136805882, 0.0002441220578324504, 0.00023247984097775123, 0.0002561675359775321, 0.0002549849687684141, 0.0002371587028888768, 0.00023263337207790312, 0.0002555751070165669, 0.0002749658771323264, 0.00027655464923219967, 0.0002645006639827658, 0.00024579101304392654, 0.00022155510808540333, 0.00019702473882817043, 0.00018468361547966075, 0.00019965070011604243, 0.00022113862144664616, 0.0002301085632100057, 0.00024032293137967947, 0.00023872574521856659, 0.00024367739985477096, 0.00025265861128440044, 0.0002413155974978466, 0.00021287617834279856, 0.0001811673062972783, 0.00014955343270966259, 0.00012069220229252814, 0.00010662689512189355, 0.0001053018561852272, 0.00011159408577260189, 0.00011782160144605763, 0.00013841431146074186, 0.00015819871426534903, 0.00016682947310752428, 0.00016293072526144106, 0.00015200057880073435, 0.0001539094347078063, 0.00017995216769250822, 0.00020501017169007683, 0.0002209044452233224, 0.00022357960897877836, 0.0002104401829839145, 0.00020116854761853824, 0.00018570125219821167, 0.00017709331977142073, 0.0001913375319058751, 0.00020003201785778415, 0.00019224491637637812, 0.00018329800212009087, 0.0002234607913230469, 0.0002677474136445459, 0.00028102115875032046, 0.00026987435685734367, 0.0002577172616793242, 0.00023821093617652813, 0.00023255722349564974, 0.0002372902634903082, 0.00025641233978259455, 0.0002792837297036793, 0.0002879990372350765, 0.0002812455247839415, 0.0002705450738918121, 0.0002522230609550512, 0.0002323663063363049, 0.00022081862114335833, 0.00020654402467065714, 0.0001995577783446864, 0.0002065633991306644, 0.000216816616937625, 0.0002200566015791604])/0.005/6, color="#007ba7",s=5,edgecolors='black',lw=1/4,zorder=10)
plt.scatter(tplot2**(1/3),np.array([0.0, 1.0491923324158411e-05, 3.132289912851884e-05, 0.00017402525954906048, 0.0005518344658916765, 0.0007298171084194043, 0.0007139348174750804, 0.0006514045149039202, 0.0005872615147659405, 0.0005755455559000059, 0.0005674591992631309, 0.0005530814065261715, 0.0005430903120702585, 0.0005325582165441044, 0.0004956300438542371, 0.00047759481649859787, 0.00045934949275272606, 0.00044126697476869095, 0.00047169533638359595, 0.00047139750303350713, 0.00044539569530833387, 0.00045530689957405267, 0.0004663451806097497, 0.0004668683785649258, 0.0004704237887030353, 0.0004888585436339551, 0.0004879491812094158, 0.0004635390471958208, 0.00042749818359527007, 0.00040444477727361223, 0.0003908043075393887, 0.00038204592550292996, 0.00039959200582362445, 0.00041800248521610997, 0.0004229570000037419, 0.0004107685832775741, 0.0003764846900078306, 0.0003384679482803369, 0.000318833569677913, 0.0003272089994866699, 0.00035452636723004344, 0.00035764394632070695, 0.00035346353165429837, 0.00035526450265143723, 0.00035413789893611535, 0.0003550975477214586, 0.00034547833783367214, 0.00032658371907132427, 0.00032979330472859706, 0.00034076012176943244, 0.000333612010678717, 0.0003085565289271077, 0.000298369510029714, 0.0002860638437144948, 0.0002703744375849724, 0.00026551197384643417, 0.00027490318616055426, 0.0002851442805977189, 0.0002850113548586396, 0.0003006309363930344, 0.00029923089218385234, 0.0002898654435089873, 0.0002883140157281707, 0.0002725845588378123, 0.0002600489353688679, 0.0002649838598317054, 0.0002670212761574302, 0.0002535539594767338, 0.00024479884675990043, 0.00023783562899143577, 0.0002460784411745552, 0.0002726758420037112, 0.0002824467182189605, 0.0002939955514106358, 0.0002966265166328063, 0.00029851468158823404, 0.00028997656566900567, 0.000300676215546421, 0.00031540486333024565, 0.0003050873599212365, 0.00028904949278776544, 0.0002605207980705338, 0.00022816446996252505, 0.00020918988574172915, 0.0002035075016700681, 0.00020865415841495776, 0.00022999643433924027, 0.00024109446927516256, 0.00024281649652529817, 0.0002454441658240806, 0.0002974958381369566, 0.0003408424071282354, 0.00035626551224267696, 0.00033992995366598564, 0.0003244928227349916, 0.0003267898712396746, 0.0003225264536276373, 0.000310254374392127, 0.00028704280230929083, 0.0002626733276256889, 0.0002496409092145438, 0.00023872509465317597, 0.00021436800403171614, 0.00019930840780738124, 0.00019671226664974234, 0.00019460312982016225, 0.00019897881918904583, 0.0001949569927287707, 0.00019861777222456565, 0.0002094956517937612, 0.00021077464084221263, 0.00021252654073102836, 0.0002292960332493775, 0.00026007352539148204, 0.0002787737901143155, 0.0002659503799374299, 0.00024562564278414874, 0.00021809390159856454, 0.00020082726153810955, 0.00019840063213591905, 0.00019708323069674412, 0.000193190568662271, 0.00018668568358904902, 0.0001806994481572707, 0.00016984740919179797, 0.00016245405641360802, 0.00016721753500608264, 0.00017818858072980398, 0.00018312652992501978, 0.00018742062147178806, 0.00021182099218875232, 0.00024367976906568614, 0.0002502964638092859, 0.0002409686913815863, 0.00022752538315617586, 0.00022534025856082852, 0.00021976779587942635, 0.00020810227564626527, 0.0002046440106600548, 0.00019894603987976605, 0.00019394557533048453, 0.0001943538175219939, 0.00020299565882084676, 0.00022142492609175167, 0.0002276150776864171, 0.00023207122736838194, 0.0002330877311963505, 0.0002200921393829733, 0.00019858270970423138, 0.0001825973215358003, 0.0001934620895187001, 0.000218150446076662, 0.00023522168082037526, 0.00023287013183174264, 0.00022631848577468684, 0.0002232641479248772, 0.00023534309236755759, 0.00025223463724781, 0.0002650745612682228, 0.00025870793898975726, 0.0002370392114866105, 0.00021236796772643879, 0.00020005891261826013, 0.00020099363100227168, 0.00023004736458864724, 0.0002474361751097767, 0.00026484986885785377, 0.00026103422841700514, 0.0002481828849546232, 0.0002274605626353507, 0.00020460533854535937, 0.0001823366257674612, 0.00018267035180780092, 0.0001835607167003986, 0.00016745221885473802, 0.00014649024879308055, 0.00012887707484680473, 0.00011343046185336953, 0.00010935334434132131, 0.00011964172402309329, 0.00012932188875246299, 0.0001363771005882078, 0.00013857289573853917, 0.00013563258710859837, 0.00013470081898558654, 0.00015814433967483978, 0.00016984239113585387, 0.0001785665611740952, 0.00018124340342509258, 0.00017768967715685538, 0.00018204694299232049, 0.00018498847541461, 0.00017806085715034068, 0.00016473109169084496, 0.00015309240368812732, 0.00013777949382100471, 0.00012617573605789583, 0.0001279873864861624, 0.0001366202601068722, 0.00016064202983249212, 0.00018728606088773588])/0.005/6, color="#56da52",s=5,edgecolors='black',lw=1/4,zorder=10)

#[0.0, 2.0225859024152504e-05, 0.00013401962929922718, 0.0005878679700866548, 0.000773453908239804, 0.0007676105959788363, 0.0007941154288018775, 0.000738422248891151, 0.0006786829556412208, 0.0006738000880635276, 0.0006650719480366226, 0.0006165097194577818, 0.0006669190790196155, 0.0006781099642433136, 0.0006450498111239657, 0.000609459781465546, 0.0005804216420612397, 0.0005904296879635374, 0.0005723258149924989, 0.0005748452608754176, 0.000573544447880996, 0.0005465416522646154, 0.0005644503678651135, 0.0005454128192409848, 0.0005080409925937946, 0.0005084403353405094, 0.0005352192471650684, 0.000523508759185599, 0.0005076631931084126, 0.0005180212183105822, 0.0005010965240453873, 0.0004577749091233126, 0.0004690004080065152, 0.000464665641942412, 0.000449789226936924, 0.00044699688580357986, 0.00045773817776701976, 0.00046966242138801766, 0.00046859316393438566, 0.00044642603134641807, 0.00042689352914379423, 0.00040510372413031634, 0.00039971316824067015, 0.0004002651408038642, 0.0003930386455538429, 0.0003886912676534633, 0.0004007120800468064, 0.0003743357233535619, 0.0003491958425767223, 0.000335029043388675, 0.00033000908984465036, 0.00032363843374526416, 0.0003244929026033128, 0.00032744127676312423, 0.0003130353594681162, 0.0003062053250680872, 0.0003177947934906815, 0.0003225516816003288, 0.0003067311019465564, 0.0003031099109905809, 0.00029466304110267575, 0.0002965068702779601, 0.0003157133408959973, 0.00032049220118888046, 0.0003232044037946926, 0.00038091371644357686, 0.0004068049919528883, 0.0003790238032071322, 0.0003500961618786034, 0.0003303538863864755, 0.0003014392416405791, 0.0002876202699731419, 0.00028888584435455335, 0.0003099682857798964, 0.0003261779814902625, 0.00033503060025275304, 0.00033130243220354184, 0.0003083123355181151, 0.0002849061814173104, 0.00027122604446156204, 0.000278152787228122, 0.00026412717546798613, 0.0002349083897188679, 0.00020390745153164554, 0.0001839348119913276, 0.00018944306163566459, 0.0002135707448750316, 0.00022147498200039722, 0.00023454131120988, 0.0002593858353849072, 0.0002805599130660848, 0.00031731305675982856, 0.00033294649060181046, 0.00032505183284310533, 0.0003047898341221235, 0.0002934720374424483, 0.0002808275950891538, 0.00028738643125097703, 0.0003047582344954271, 0.00031553369297188745, 0.0003014702161000064, 0.00027242855652495125, 0.0002490723148476597, 0.00024239448983818626, 0.00024702371185996157, 0.0002484719753238695, 0.0002773057020710848, 0.0003036876852316279, 0.0002900816731300779, 0.0002621823357316593, 0.0002561816920314859, 0.00028607473357710313, 0.00032398551150492657, 0.0003404785271824587, 0.00033463776284196894, 0.0003326559822905237, 0.00034467663810975945, 0.0003398750082346891, 0.00034675344259455773, 0.0003610437155663625, 0.0003513778897895027, 0.000336028502594522, 0.00030908696733570197, 0.00028475439694180534, 0.00026147451190469434, 0.00023746672493400896, 0.00023206464635398748, 0.00023381471306540416, 0.0002551023537161839, 0.0002798471724229777, 0.0002816661073048801, 0.0002678736136805882, 0.0002441220578324504, 0.00023247984097775123, 0.0002561675359775321, 0.0002549849687684141, 0.0002371587028888768, 0.00023263337207790312, 0.0002555751070165669, 0.0002749658771323264, 0.00027655464923219967, 0.0002645006639827658, 0.00024579101304392654, 0.00022155510808540333, 0.00019702473882817043, 0.00018468361547966075, 0.00019965070011604243, 0.00022113862144664616, 0.0002301085632100057, 0.00024032293137967947, 0.00023872574521856659, 0.00024367739985477096, 0.00025265861128440044, 0.0002413155974978466, 0.00021287617834279856, 0.0001811673062972783, 0.00014955343270966259, 0.00012069220229252814, 0.00010662689512189355, 0.0001053018561852272, 0.00011159408577260189, 0.00011782160144605763, 0.00013841431146074186, 0.00015819871426534903, 0.00016682947310752428, 0.00016293072526144106, 0.00015200057880073435, 0.0001539094347078063, 0.00017995216769250822, 0.00020501017169007683, 0.0002209044452233224, 0.00022357960897877836, 0.0002104401829839145, 0.00020116854761853824, 0.00018570125219821167, 0.00017709331977142073, 0.0001913375319058751, 0.00020003201785778415, 0.00019224491637637812, 0.00018329800212009087, 0.0002234607913230469, 0.0002677474136445459, 0.00028102115875032046, 0.00026987435685734367, 0.0002577172616793242, 0.00023821093617652813, 0.00023255722349564974, 0.0002372902634903082, 0.00025641233978259455, 0.0002792837297036793, 0.0002879990372350765, 0.0002812455247839415, 0.0002705450738918121, 0.0002522230609550512, 0.0002323663063363049, 0.00022081862114335833, 0.00020654402467065714, 0.0001995577783446864, 0.0002065633991306644, 0.000216816616937625, 0.0002200566015791604]
ax.tick_params(which="both",direction='in')
plt.xlabel(r"$Time^{\frac{1}{3}}$")
plt.ylabel(r"$<Ca>$")
ax.legend(frameon=False, loc='upper right',labelspacing=0.3,borderpad=0.1,borderaxespad=0.3)
plt.subplots_adjust(bottom=0.17,top=0.93, right=0.95,left=0.22)
plt.savefig("VV.png", dpi=400, format='png')
plt.close()



fig, ax = plt.subplots(1, 1, figsize = (6, 5))
plt.plot(rho[:,LY//2,LZ//2])
plt.plot(rho2[:,LY//2,LZ//2])
plt.plot(rho3[:,LY//2,LZ//2])
plt.plot(1-rho[:,LY//2,LZ//2]-rho2[:,LY//2,LZ//2]-rho3[:,LY//2,LZ//2])
#plt.plot(np.linspace(tstart,tend2,(tend2-tstart)//tinc+1),vE2)

plt.savefig("C.png", dpi=400, format='png')
plt.close(fig)

fig, ax = plt.subplots(1, 1, figsize = (6, 5))
ax.set_yscale('log')
ax.set_xscale('log')
plt.ylim([10**-30,10**-0])
plt.xlim([10**4,3*10**7])
plt.ylabel("Kinetic Energy")
plt.xlabel("Simulation Iterations")
plt.plot(np.linspace(tstart,tend,(tend-tstart)//tinc+1),vE)
#plt.plot(np.linspace(tstart,tend2,(tend2-tstart)//tinc+1),vE2)
plt.savefig("vmax.png", dpi=400, format='png')
plt.close(fig)